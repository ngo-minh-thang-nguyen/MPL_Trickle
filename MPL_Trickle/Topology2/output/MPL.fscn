EC:<Id:1;Ev:1;H:0;W:1>{ SC: ( pid_3:initialstate , ( pid_8:cp0 , pid_14:dp0 , pid_19:dp0 ) , ( pid_25:cp0 , pid_31:dp0 , pid_36:dp0 ) , ( pid_42:cp0 , pid_48:dp0 , pid_53:dp0 ) , ( pid_59:cp0 , pid_65:dp0 , pid_70:dp0 ) )
	ALIAS{
		:ppid_-1:pid_0 = run::#PARAMETERS#; // model is spec::Trickle;
		:ppid_-1:pid_1 = spec::Trickle;
		:ppid_1:pid_2 = spec::Trickle.Observer;
			DATA{
				:ppid_1:pid_2:$time = spec::Trickle.Observer.$time;
				:ppid_1:pid_2:z = spec::Trickle.Observer.z;
				:ppid_1:pid_2:cl_o = spec::Trickle.Observer.cl_o;
			}
		:ppid_2:pid_3 = spec::Trickle.Observer.initialstate;
		:ppid_2:pid_4 = spec::Trickle.Observer.o0;
		:ppid_2:pid_5 = spec::Trickle.Observer.OK;
		:ppid_1:pid_6 = run::Trickle.n1; // model is spec::Trickle.Node;
			BUFFER NUMBER = 1;
			/*BUFFER{
				:ppid_1:pid_6:bufferNode = spec::Trickle.Node.bufferNode;
			}*/
			DATA{
				:ppid_1:pid_6:my_buff[0].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_6:my_buff[0].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_6:my_buff[0].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_6:my_buff[1].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_6:my_buff[1].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_6:my_buff[1].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_6:firmware[0] = spec::Trickle.Node.firmware;
				:ppid_1:pid_6:firmware[1] = spec::Trickle.Node.firmware;
				:ppid_1:pid_6:myseq_buff[0] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_6:myseq_buff[1] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_6:mydp_run[0] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_6:mydp_run[1] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_6:$time = spec::Trickle.Node.$time;
				:ppid_1:pid_6:z = spec::Trickle.Node.z;
				:ppid_1:pid_6:coverageProp = spec::Trickle.Node.coverageProp;
				:ppid_1:pid_6:seq_buff[0] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_6:seq_buff[1] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_6:i = spec::Trickle.Node.i;
				:ppid_1:pid_6:localTime = spec::Trickle.Node.localTime;
				:ppid_1:pid_6:localPC = spec::Trickle.Node.localPC;
				:ppid_1:pid_6:localPtC = spec::Trickle.Node.localPtC;
				:ppid_1:pid_6:new_seq_buff = spec::Trickle.Node.new_seq_buff;
				:ppid_1:pid_6:new_seq = spec::Trickle.Node.new_seq;
				:ppid_1:pid_6:new_fragment = spec::Trickle.Node.new_fragment;
				:ppid_1:pid_6:new_offset = spec::Trickle.Node.new_offset;
				:ppid_1:pid_6:timeEmit = spec::Trickle.Node.timeEmit;
			}
			INTERFACE{
				:ppid_1:pid_6:ControlMsg = spec::Trickle.Node.ControlMsg;
				:ppid_1:pid_6:DataMsg = spec::Trickle.Node.DataMsg;
				:ppid_1:pid_6:Log = spec::Trickle.Node.Log;
			}
		:ppid_6:pid_7 = spec::Trickle.Node.ControlProcess;
			DATA{
				:ppid_6:pid_7:k = spec::Trickle.Node.ControlProcess.k;
				:ppid_6:pid_7:c = spec::Trickle.Node.ControlProcess.c;
				:ppid_6:pid_7:e = spec::Trickle.Node.ControlProcess.e;
				:ppid_6:pid_7:tau = spec::Trickle.Node.ControlProcess.tau;
				:ppid_6:pid_7:tau_l = spec::Trickle.Node.ControlProcess.tau_l;
				:ppid_6:pid_7:tau_h = spec::Trickle.Node.ControlProcess.tau_h;
				:ppid_6:pid_7:i = spec::Trickle.Node.ControlProcess.i;
				:ppid_6:pid_7:t = spec::Trickle.Node.ControlProcess.t;
				:ppid_6:pid_7:consistent = spec::Trickle.Node.ControlProcess.consistent;
				:ppid_6:pid_7:cl = spec::Trickle.Node.ControlProcess.cl;
			}
		:ppid_7:pid_8 = spec::Trickle.Node.ControlProcess.cp0;
		:ppid_7:pid_9 = spec::Trickle.Node.ControlProcess.cp0_init;
		:ppid_7:pid_10 = spec::Trickle.Node.ControlProcess.cp1;
		:ppid_7:pid_11 = spec::Trickle.Node.ControlProcess.cp2;
		:ppid_7:pid_12 = spec::Trickle.Node.ControlProcess.cp3;
		:ppid_6:pid_13 = run::Trickle.n1.DataProcess1; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_6:pid_13:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_6:pid_13:k = spec::Trickle.Node.DataProcess.k;
				:ppid_6:pid_13:c = spec::Trickle.Node.DataProcess.c;
				:ppid_6:pid_13:e = spec::Trickle.Node.DataProcess.e;
				:ppid_6:pid_13:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_6:pid_13:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_6:pid_13:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_6:pid_13:i = spec::Trickle.Node.DataProcess.i;
				:ppid_6:pid_13:t = spec::Trickle.Node.DataProcess.t;
				:ppid_6:pid_13:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_6:pid_13:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_6:pid_13:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_6:pid_13:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_6:pid_13:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_13:pid_14 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_13:pid_15 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_13:pid_16 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_13:pid_17 = spec::Trickle.Node.DataProcess.dp3;
		:ppid_6:pid_18 = run::Trickle.n1.DataProcess2; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_6:pid_18:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_6:pid_18:k = spec::Trickle.Node.DataProcess.k;
				:ppid_6:pid_18:c = spec::Trickle.Node.DataProcess.c;
				:ppid_6:pid_18:e = spec::Trickle.Node.DataProcess.e;
				:ppid_6:pid_18:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_6:pid_18:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_6:pid_18:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_6:pid_18:i = spec::Trickle.Node.DataProcess.i;
				:ppid_6:pid_18:t = spec::Trickle.Node.DataProcess.t;
				:ppid_6:pid_18:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_6:pid_18:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_6:pid_18:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_6:pid_18:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_6:pid_18:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_18:pid_19 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_18:pid_20 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_18:pid_21 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_18:pid_22 = spec::Trickle.Node.DataProcess.dp3;
		:ppid_1:pid_23 = run::Trickle.n2; // model is spec::Trickle.Node;
			BUFFER NUMBER = 1;
			/*BUFFER{
				:ppid_1:pid_23:bufferNode = spec::Trickle.Node.bufferNode;
			}*/
			DATA{
				:ppid_1:pid_23:my_buff[0].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_23:my_buff[0].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_23:my_buff[0].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_23:my_buff[1].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_23:my_buff[1].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_23:my_buff[1].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_23:firmware[0] = spec::Trickle.Node.firmware;
				:ppid_1:pid_23:firmware[1] = spec::Trickle.Node.firmware;
				:ppid_1:pid_23:myseq_buff[0] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_23:myseq_buff[1] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_23:mydp_run[0] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_23:mydp_run[1] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_23:$time = spec::Trickle.Node.$time;
				:ppid_1:pid_23:z = spec::Trickle.Node.z;
				:ppid_1:pid_23:coverageProp = spec::Trickle.Node.coverageProp;
				:ppid_1:pid_23:seq_buff[0] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_23:seq_buff[1] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_23:i = spec::Trickle.Node.i;
				:ppid_1:pid_23:localTime = spec::Trickle.Node.localTime;
				:ppid_1:pid_23:localPC = spec::Trickle.Node.localPC;
				:ppid_1:pid_23:localPtC = spec::Trickle.Node.localPtC;
				:ppid_1:pid_23:new_seq_buff = spec::Trickle.Node.new_seq_buff;
				:ppid_1:pid_23:new_seq = spec::Trickle.Node.new_seq;
				:ppid_1:pid_23:new_fragment = spec::Trickle.Node.new_fragment;
				:ppid_1:pid_23:new_offset = spec::Trickle.Node.new_offset;
				:ppid_1:pid_23:timeEmit = spec::Trickle.Node.timeEmit;
			}
			INTERFACE{
				:ppid_1:pid_23:ControlMsg = spec::Trickle.Node.ControlMsg;
				:ppid_1:pid_23:DataMsg = spec::Trickle.Node.DataMsg;
				:ppid_1:pid_23:Log = spec::Trickle.Node.Log;
			}
		:ppid_23:pid_24 = spec::Trickle.Node.ControlProcess;
			DATA{
				:ppid_23:pid_24:k = spec::Trickle.Node.ControlProcess.k;
				:ppid_23:pid_24:c = spec::Trickle.Node.ControlProcess.c;
				:ppid_23:pid_24:e = spec::Trickle.Node.ControlProcess.e;
				:ppid_23:pid_24:tau = spec::Trickle.Node.ControlProcess.tau;
				:ppid_23:pid_24:tau_l = spec::Trickle.Node.ControlProcess.tau_l;
				:ppid_23:pid_24:tau_h = spec::Trickle.Node.ControlProcess.tau_h;
				:ppid_23:pid_24:i = spec::Trickle.Node.ControlProcess.i;
				:ppid_23:pid_24:t = spec::Trickle.Node.ControlProcess.t;
				:ppid_23:pid_24:consistent = spec::Trickle.Node.ControlProcess.consistent;
				:ppid_23:pid_24:cl = spec::Trickle.Node.ControlProcess.cl;
			}
		:ppid_24:pid_25 = spec::Trickle.Node.ControlProcess.cp0;
		:ppid_24:pid_26 = spec::Trickle.Node.ControlProcess.cp0_init;
		:ppid_24:pid_27 = spec::Trickle.Node.ControlProcess.cp1;
		:ppid_24:pid_28 = spec::Trickle.Node.ControlProcess.cp2;
		:ppid_24:pid_29 = spec::Trickle.Node.ControlProcess.cp3;
		:ppid_23:pid_30 = run::Trickle.n2.DataProcess1; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_23:pid_30:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_23:pid_30:k = spec::Trickle.Node.DataProcess.k;
				:ppid_23:pid_30:c = spec::Trickle.Node.DataProcess.c;
				:ppid_23:pid_30:e = spec::Trickle.Node.DataProcess.e;
				:ppid_23:pid_30:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_23:pid_30:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_23:pid_30:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_23:pid_30:i = spec::Trickle.Node.DataProcess.i;
				:ppid_23:pid_30:t = spec::Trickle.Node.DataProcess.t;
				:ppid_23:pid_30:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_23:pid_30:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_23:pid_30:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_23:pid_30:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_23:pid_30:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_30:pid_31 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_30:pid_32 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_30:pid_33 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_30:pid_34 = spec::Trickle.Node.DataProcess.dp3;
		:ppid_23:pid_35 = run::Trickle.n2.DataProcess2; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_23:pid_35:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_23:pid_35:k = spec::Trickle.Node.DataProcess.k;
				:ppid_23:pid_35:c = spec::Trickle.Node.DataProcess.c;
				:ppid_23:pid_35:e = spec::Trickle.Node.DataProcess.e;
				:ppid_23:pid_35:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_23:pid_35:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_23:pid_35:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_23:pid_35:i = spec::Trickle.Node.DataProcess.i;
				:ppid_23:pid_35:t = spec::Trickle.Node.DataProcess.t;
				:ppid_23:pid_35:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_23:pid_35:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_23:pid_35:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_23:pid_35:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_23:pid_35:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_35:pid_36 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_35:pid_37 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_35:pid_38 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_35:pid_39 = spec::Trickle.Node.DataProcess.dp3;
		:ppid_1:pid_40 = run::Trickle.n3; // model is spec::Trickle.Node;
			BUFFER NUMBER = 1;
			/*BUFFER{
				:ppid_1:pid_40:bufferNode = spec::Trickle.Node.bufferNode;
			}*/
			DATA{
				:ppid_1:pid_40:my_buff[0].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_40:my_buff[0].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_40:my_buff[0].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_40:my_buff[1].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_40:my_buff[1].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_40:my_buff[1].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_40:firmware[0] = spec::Trickle.Node.firmware;
				:ppid_1:pid_40:firmware[1] = spec::Trickle.Node.firmware;
				:ppid_1:pid_40:myseq_buff[0] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_40:myseq_buff[1] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_40:mydp_run[0] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_40:mydp_run[1] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_40:$time = spec::Trickle.Node.$time;
				:ppid_1:pid_40:z = spec::Trickle.Node.z;
				:ppid_1:pid_40:coverageProp = spec::Trickle.Node.coverageProp;
				:ppid_1:pid_40:seq_buff[0] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_40:seq_buff[1] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_40:i = spec::Trickle.Node.i;
				:ppid_1:pid_40:localTime = spec::Trickle.Node.localTime;
				:ppid_1:pid_40:localPC = spec::Trickle.Node.localPC;
				:ppid_1:pid_40:localPtC = spec::Trickle.Node.localPtC;
				:ppid_1:pid_40:new_seq_buff = spec::Trickle.Node.new_seq_buff;
				:ppid_1:pid_40:new_seq = spec::Trickle.Node.new_seq;
				:ppid_1:pid_40:new_fragment = spec::Trickle.Node.new_fragment;
				:ppid_1:pid_40:new_offset = spec::Trickle.Node.new_offset;
				:ppid_1:pid_40:timeEmit = spec::Trickle.Node.timeEmit;
			}
			INTERFACE{
				:ppid_1:pid_40:ControlMsg = spec::Trickle.Node.ControlMsg;
				:ppid_1:pid_40:DataMsg = spec::Trickle.Node.DataMsg;
				:ppid_1:pid_40:Log = spec::Trickle.Node.Log;
			}
		:ppid_40:pid_41 = spec::Trickle.Node.ControlProcess;
			DATA{
				:ppid_40:pid_41:k = spec::Trickle.Node.ControlProcess.k;
				:ppid_40:pid_41:c = spec::Trickle.Node.ControlProcess.c;
				:ppid_40:pid_41:e = spec::Trickle.Node.ControlProcess.e;
				:ppid_40:pid_41:tau = spec::Trickle.Node.ControlProcess.tau;
				:ppid_40:pid_41:tau_l = spec::Trickle.Node.ControlProcess.tau_l;
				:ppid_40:pid_41:tau_h = spec::Trickle.Node.ControlProcess.tau_h;
				:ppid_40:pid_41:i = spec::Trickle.Node.ControlProcess.i;
				:ppid_40:pid_41:t = spec::Trickle.Node.ControlProcess.t;
				:ppid_40:pid_41:consistent = spec::Trickle.Node.ControlProcess.consistent;
				:ppid_40:pid_41:cl = spec::Trickle.Node.ControlProcess.cl;
			}
		:ppid_41:pid_42 = spec::Trickle.Node.ControlProcess.cp0;
		:ppid_41:pid_43 = spec::Trickle.Node.ControlProcess.cp0_init;
		:ppid_41:pid_44 = spec::Trickle.Node.ControlProcess.cp1;
		:ppid_41:pid_45 = spec::Trickle.Node.ControlProcess.cp2;
		:ppid_41:pid_46 = spec::Trickle.Node.ControlProcess.cp3;
		:ppid_40:pid_47 = run::Trickle.n3.DataProcess1; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_40:pid_47:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_40:pid_47:k = spec::Trickle.Node.DataProcess.k;
				:ppid_40:pid_47:c = spec::Trickle.Node.DataProcess.c;
				:ppid_40:pid_47:e = spec::Trickle.Node.DataProcess.e;
				:ppid_40:pid_47:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_40:pid_47:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_40:pid_47:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_40:pid_47:i = spec::Trickle.Node.DataProcess.i;
				:ppid_40:pid_47:t = spec::Trickle.Node.DataProcess.t;
				:ppid_40:pid_47:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_40:pid_47:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_40:pid_47:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_40:pid_47:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_40:pid_47:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_47:pid_48 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_47:pid_49 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_47:pid_50 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_47:pid_51 = spec::Trickle.Node.DataProcess.dp3;
		:ppid_40:pid_52 = run::Trickle.n3.DataProcess2; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_40:pid_52:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_40:pid_52:k = spec::Trickle.Node.DataProcess.k;
				:ppid_40:pid_52:c = spec::Trickle.Node.DataProcess.c;
				:ppid_40:pid_52:e = spec::Trickle.Node.DataProcess.e;
				:ppid_40:pid_52:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_40:pid_52:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_40:pid_52:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_40:pid_52:i = spec::Trickle.Node.DataProcess.i;
				:ppid_40:pid_52:t = spec::Trickle.Node.DataProcess.t;
				:ppid_40:pid_52:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_40:pid_52:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_40:pid_52:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_40:pid_52:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_40:pid_52:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_52:pid_53 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_52:pid_54 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_52:pid_55 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_52:pid_56 = spec::Trickle.Node.DataProcess.dp3;
		:ppid_1:pid_57 = run::Trickle.n4; // model is spec::Trickle.Node;
			BUFFER NUMBER = 1;
			/*BUFFER{
				:ppid_1:pid_57:bufferNode = spec::Trickle.Node.bufferNode;
			}*/
			DATA{
				:ppid_1:pid_57:my_buff[0].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_57:my_buff[0].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_57:my_buff[0].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_57:my_buff[1].seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_1:pid_57:my_buff[1].fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_1:pid_57:my_buff[1].offset = spec::Trickle.DATA_MESSAGE.offset;
				:ppid_1:pid_57:firmware[0] = spec::Trickle.Node.firmware;
				:ppid_1:pid_57:firmware[1] = spec::Trickle.Node.firmware;
				:ppid_1:pid_57:myseq_buff[0] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_57:myseq_buff[1] = spec::Trickle.Node.myseq_buff;
				:ppid_1:pid_57:mydp_run[0] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_57:mydp_run[1] = spec::Trickle.Node.mydp_run;
				:ppid_1:pid_57:$time = spec::Trickle.Node.$time;
				:ppid_1:pid_57:z = spec::Trickle.Node.z;
				:ppid_1:pid_57:coverageProp = spec::Trickle.Node.coverageProp;
				:ppid_1:pid_57:seq_buff[0] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_57:seq_buff[1] = spec::Trickle.Node.seq_buff;
				:ppid_1:pid_57:i = spec::Trickle.Node.i;
				:ppid_1:pid_57:localTime = spec::Trickle.Node.localTime;
				:ppid_1:pid_57:localPC = spec::Trickle.Node.localPC;
				:ppid_1:pid_57:localPtC = spec::Trickle.Node.localPtC;
				:ppid_1:pid_57:new_seq_buff = spec::Trickle.Node.new_seq_buff;
				:ppid_1:pid_57:new_seq = spec::Trickle.Node.new_seq;
				:ppid_1:pid_57:new_fragment = spec::Trickle.Node.new_fragment;
				:ppid_1:pid_57:new_offset = spec::Trickle.Node.new_offset;
				:ppid_1:pid_57:timeEmit = spec::Trickle.Node.timeEmit;
			}
			INTERFACE{
				:ppid_1:pid_57:ControlMsg = spec::Trickle.Node.ControlMsg;
				:ppid_1:pid_57:DataMsg = spec::Trickle.Node.DataMsg;
				:ppid_1:pid_57:Log = spec::Trickle.Node.Log;
			}
		:ppid_57:pid_58 = spec::Trickle.Node.ControlProcess;
			DATA{
				:ppid_57:pid_58:k = spec::Trickle.Node.ControlProcess.k;
				:ppid_57:pid_58:c = spec::Trickle.Node.ControlProcess.c;
				:ppid_57:pid_58:e = spec::Trickle.Node.ControlProcess.e;
				:ppid_57:pid_58:tau = spec::Trickle.Node.ControlProcess.tau;
				:ppid_57:pid_58:tau_l = spec::Trickle.Node.ControlProcess.tau_l;
				:ppid_57:pid_58:tau_h = spec::Trickle.Node.ControlProcess.tau_h;
				:ppid_57:pid_58:i = spec::Trickle.Node.ControlProcess.i;
				:ppid_57:pid_58:t = spec::Trickle.Node.ControlProcess.t;
				:ppid_57:pid_58:consistent = spec::Trickle.Node.ControlProcess.consistent;
				:ppid_57:pid_58:cl = spec::Trickle.Node.ControlProcess.cl;
			}
		:ppid_58:pid_59 = spec::Trickle.Node.ControlProcess.cp0;
		:ppid_58:pid_60 = spec::Trickle.Node.ControlProcess.cp0_init;
		:ppid_58:pid_61 = spec::Trickle.Node.ControlProcess.cp1;
		:ppid_58:pid_62 = spec::Trickle.Node.ControlProcess.cp2;
		:ppid_58:pid_63 = spec::Trickle.Node.ControlProcess.cp3;
		:ppid_57:pid_64 = run::Trickle.n4.DataProcess1; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_57:pid_64:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_57:pid_64:k = spec::Trickle.Node.DataProcess.k;
				:ppid_57:pid_64:c = spec::Trickle.Node.DataProcess.c;
				:ppid_57:pid_64:e = spec::Trickle.Node.DataProcess.e;
				:ppid_57:pid_64:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_57:pid_64:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_57:pid_64:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_57:pid_64:i = spec::Trickle.Node.DataProcess.i;
				:ppid_57:pid_64:t = spec::Trickle.Node.DataProcess.t;
				:ppid_57:pid_64:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_57:pid_64:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_57:pid_64:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_57:pid_64:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_57:pid_64:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_64:pid_65 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_64:pid_66 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_64:pid_67 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_64:pid_68 = spec::Trickle.Node.DataProcess.dp3;
		:ppid_57:pid_69 = run::Trickle.n4.DataProcess2; // model is spec::Trickle.Node.DataProcess;
			DATA{
				:ppid_57:pid_69:mySeq = spec::Trickle.Node.DataProcess.mySeq;
				:ppid_57:pid_69:k = spec::Trickle.Node.DataProcess.k;
				:ppid_57:pid_69:c = spec::Trickle.Node.DataProcess.c;
				:ppid_57:pid_69:e = spec::Trickle.Node.DataProcess.e;
				:ppid_57:pid_69:tau = spec::Trickle.Node.DataProcess.tau;
				:ppid_57:pid_69:tau_l = spec::Trickle.Node.DataProcess.tau_l;
				:ppid_57:pid_69:tau_h = spec::Trickle.Node.DataProcess.tau_h;
				:ppid_57:pid_69:i = spec::Trickle.Node.DataProcess.i;
				:ppid_57:pid_69:t = spec::Trickle.Node.DataProcess.t;
				:ppid_57:pid_69:consistent = spec::Trickle.Node.DataProcess.consistent;
				:ppid_57:pid_69:cl = spec::Trickle.Node.DataProcess.cl;
				:ppid_57:pid_69:d.seq = spec::Trickle.DATA_MESSAGE.seq;
				:ppid_57:pid_69:d.fragment = spec::Trickle.DATA_MESSAGE.fragment;
				:ppid_57:pid_69:d.offset = spec::Trickle.DATA_MESSAGE.offset;
			}
		:ppid_69:pid_70 = spec::Trickle.Node.DataProcess.dp0;
		:ppid_69:pid_71 = spec::Trickle.Node.DataProcess.dp1;
		:ppid_69:pid_72 = spec::Trickle.Node.DataProcess.dp2;
		:ppid_69:pid_73 = spec::Trickle.Node.DataProcess.dp3;
	}
	PC: true
	PtC: true
	DATA{
		:pid_2:$time = 0;
		:pid_2:z = $delta#initial;
		:pid_2:cl_o = 0;
		:pid_6:my_buff[0].seq = 1;
		:pid_6:my_buff[0].fragment = FRAGMENT_0;
		:pid_6:my_buff[0].offset = 0;
		:pid_6:my_buff[1].seq = 2;
		:pid_6:my_buff[1].fragment = FRAGMENT_1;
		:pid_6:my_buff[1].offset = 1;
		:pid_6:firmware[0] = FRAGMENT_0;
		:pid_6:firmware[1] = UNDEF_FRAGMENT;
		:pid_6:myseq_buff[0] = 1;
		:pid_6:myseq_buff[1] = 1;
		:pid_6:mydp_run[0] = true;
		:pid_6:mydp_run[1] = true;
		:pid_6:$time = 0;
		:pid_6:z = $delta#initial;
		:pid_6:coverageProp = false;
		:pid_6:seq_buff[0] = seq_buff[0]_0;
		:pid_6:seq_buff[1] = seq_buff[1]_0;
		:pid_6:i = i_0;
		:pid_6:localTime = 0;
		:pid_6:localPC = true;
		:pid_6:localPtC = true;
		:pid_6:new_seq_buff = new_seq_buff_0;
		:pid_6:new_seq = new_seq_0;
		:pid_6:new_fragment = new_fragment_0;
		:pid_6:new_offset = new_offset_0;
		:pid_6:timeEmit = timeEmit_0;
		:pid_7:k = k_0;
		:pid_7:c = c_0;
		:pid_7:e = e_0;
		:pid_7:tau = tau_0;
		:pid_7:tau_l = tau_l_0;
		:pid_7:tau_h = tau_h_0;
		:pid_7:i = i_0;
		:pid_7:t = t_0;
		:pid_7:consistent = consistent_0;
		:pid_7:cl = 0;
		:pid_13:mySeq = 1;
		:pid_13:k = k_0;
		:pid_13:c = c_0;
		:pid_13:e = e_0;
		:pid_13:tau = tau_0;
		:pid_13:tau_l = tau_l_0;
		:pid_13:tau_h = tau_h_0;
		:pid_13:i = i_0;
		:pid_13:t = t_0;
		:pid_13:consistent = consistent_0;
		:pid_13:cl = 0;
		:pid_13:d.seq = d.seq_0;
		:pid_13:d.fragment = d.fragment_0;
		:pid_13:d.offset = d.offset_0;
		:pid_18:mySeq = 2;
		:pid_18:k = k_1;
		:pid_18:c = c_1;
		:pid_18:e = e_1;
		:pid_18:tau = tau_1;
		:pid_18:tau_l = tau_l_1;
		:pid_18:tau_h = tau_h_1;
		:pid_18:i = i_1;
		:pid_18:t = t_1;
		:pid_18:consistent = consistent_1;
		:pid_18:cl = 0;
		:pid_18:d.seq = d.seq_1;
		:pid_18:d.fragment = d.fragment_1;
		:pid_18:d.offset = d.offset_1;
		:pid_23:my_buff[0].seq = 0;
		:pid_23:my_buff[0].fragment = UNDEF_FRAGMENT;
		:pid_23:my_buff[0].offset = 0;
		:pid_23:my_buff[1].seq = 0;
		:pid_23:my_buff[1].fragment = UNDEF_FRAGMENT;
		:pid_23:my_buff[1].offset = 1;
		:pid_23:firmware[0] = UNDEF_FRAGMENT;
		:pid_23:firmware[1] = UNDEF_FRAGMENT;
		:pid_23:myseq_buff[0] = 0;
		:pid_23:myseq_buff[1] = 0;
		:pid_23:mydp_run[0] = false;
		:pid_23:mydp_run[1] = false;
		:pid_23:$time = 0;
		:pid_23:z = $delta#initial;
		:pid_23:coverageProp = false;
		:pid_23:seq_buff[0] = seq_buff[0]_1;
		:pid_23:seq_buff[1] = seq_buff[1]_1;
		:pid_23:i = i_1;
		:pid_23:localTime = 0;
		:pid_23:localPC = true;
		:pid_23:localPtC = true;
		:pid_23:new_seq_buff = new_seq_buff_1;
		:pid_23:new_seq = new_seq_1;
		:pid_23:new_fragment = new_fragment_1;
		:pid_23:new_offset = new_offset_1;
		:pid_23:timeEmit = timeEmit_1;
		:pid_24:k = k_1;
		:pid_24:c = c_1;
		:pid_24:e = e_1;
		:pid_24:tau = tau_1;
		:pid_24:tau_l = tau_l_1;
		:pid_24:tau_h = tau_h_1;
		:pid_24:i = i_1;
		:pid_24:t = t_1;
		:pid_24:consistent = consistent_1;
		:pid_24:cl = 0;
		:pid_30:mySeq = 1;
		:pid_30:k = k_2;
		:pid_30:c = c_2;
		:pid_30:e = e_2;
		:pid_30:tau = tau_2;
		:pid_30:tau_l = tau_l_2;
		:pid_30:tau_h = tau_h_2;
		:pid_30:i = i_2;
		:pid_30:t = t_2;
		:pid_30:consistent = consistent_2;
		:pid_30:cl = 0;
		:pid_30:d.seq = d.seq_2;
		:pid_30:d.fragment = d.fragment_2;
		:pid_30:d.offset = d.offset_2;
		:pid_35:mySeq = 2;
		:pid_35:k = k_3;
		:pid_35:c = c_3;
		:pid_35:e = e_3;
		:pid_35:tau = tau_3;
		:pid_35:tau_l = tau_l_3;
		:pid_35:tau_h = tau_h_3;
		:pid_35:i = i_3;
		:pid_35:t = t_3;
		:pid_35:consistent = consistent_3;
		:pid_35:cl = 0;
		:pid_35:d.seq = d.seq_3;
		:pid_35:d.fragment = d.fragment_3;
		:pid_35:d.offset = d.offset_3;
		:pid_40:my_buff[0].seq = 0;
		:pid_40:my_buff[0].fragment = UNDEF_FRAGMENT;
		:pid_40:my_buff[0].offset = 0;
		:pid_40:my_buff[1].seq = 0;
		:pid_40:my_buff[1].fragment = UNDEF_FRAGMENT;
		:pid_40:my_buff[1].offset = 1;
		:pid_40:firmware[0] = UNDEF_FRAGMENT;
		:pid_40:firmware[1] = UNDEF_FRAGMENT;
		:pid_40:myseq_buff[0] = 0;
		:pid_40:myseq_buff[1] = 0;
		:pid_40:mydp_run[0] = false;
		:pid_40:mydp_run[1] = false;
		:pid_40:$time = 0;
		:pid_40:z = $delta#initial;
		:pid_40:coverageProp = false;
		:pid_40:seq_buff[0] = seq_buff[0]_2;
		:pid_40:seq_buff[1] = seq_buff[1]_2;
		:pid_40:i = i_2;
		:pid_40:localTime = 0;
		:pid_40:localPC = true;
		:pid_40:localPtC = true;
		:pid_40:new_seq_buff = new_seq_buff_2;
		:pid_40:new_seq = new_seq_2;
		:pid_40:new_fragment = new_fragment_2;
		:pid_40:new_offset = new_offset_2;
		:pid_40:timeEmit = timeEmit_2;
		:pid_41:k = k_2;
		:pid_41:c = c_2;
		:pid_41:e = e_2;
		:pid_41:tau = tau_2;
		:pid_41:tau_l = tau_l_2;
		:pid_41:tau_h = tau_h_2;
		:pid_41:i = i_2;
		:pid_41:t = t_2;
		:pid_41:consistent = consistent_2;
		:pid_41:cl = 0;
		:pid_47:mySeq = 1;
		:pid_47:k = k_4;
		:pid_47:c = c_4;
		:pid_47:e = e_4;
		:pid_47:tau = tau_4;
		:pid_47:tau_l = tau_l_4;
		:pid_47:tau_h = tau_h_4;
		:pid_47:i = i_4;
		:pid_47:t = t_4;
		:pid_47:consistent = consistent_4;
		:pid_47:cl = 0;
		:pid_47:d.seq = d.seq_4;
		:pid_47:d.fragment = d.fragment_4;
		:pid_47:d.offset = d.offset_4;
		:pid_52:mySeq = 2;
		:pid_52:k = k_5;
		:pid_52:c = c_5;
		:pid_52:e = e_5;
		:pid_52:tau = tau_5;
		:pid_52:tau_l = tau_l_5;
		:pid_52:tau_h = tau_h_5;
		:pid_52:i = i_5;
		:pid_52:t = t_5;
		:pid_52:consistent = consistent_5;
		:pid_52:cl = 0;
		:pid_52:d.seq = d.seq_5;
		:pid_52:d.fragment = d.fragment_5;
		:pid_52:d.offset = d.offset_5;
		:pid_57:my_buff[0].seq = 0;
		:pid_57:my_buff[0].fragment = UNDEF_FRAGMENT;
		:pid_57:my_buff[0].offset = 0;
		:pid_57:my_buff[1].seq = 0;
		:pid_57:my_buff[1].fragment = UNDEF_FRAGMENT;
		:pid_57:my_buff[1].offset = 1;
		:pid_57:firmware[0] = UNDEF_FRAGMENT;
		:pid_57:firmware[1] = UNDEF_FRAGMENT;
		:pid_57:myseq_buff[0] = 0;
		:pid_57:myseq_buff[1] = 0;
		:pid_57:mydp_run[0] = false;
		:pid_57:mydp_run[1] = false;
		:pid_57:$time = 0;
		:pid_57:z = $delta#initial;
		:pid_57:coverageProp = false;
		:pid_57:seq_buff[0] = seq_buff[0]_3;
		:pid_57:seq_buff[1] = seq_buff[1]_3;
		:pid_57:i = i_3;
		:pid_57:localTime = 0;
		:pid_57:localPC = true;
		:pid_57:localPtC = true;
		:pid_57:new_seq_buff = new_seq_buff_3;
		:pid_57:new_seq = new_seq_3;
		:pid_57:new_fragment = new_fragment_3;
		:pid_57:new_offset = new_offset_3;
		:pid_57:timeEmit = timeEmit_3;
		:pid_58:k = k_3;
		:pid_58:c = c_3;
		:pid_58:e = e_3;
		:pid_58:tau = tau_3;
		:pid_58:tau_l = tau_l_3;
		:pid_58:tau_h = tau_h_3;
		:pid_58:i = i_3;
		:pid_58:t = t_3;
		:pid_58:consistent = consistent_3;
		:pid_58:cl = 0;
		:pid_64:mySeq = 1;
		:pid_64:k = k_6;
		:pid_64:c = c_6;
		:pid_64:e = e_6;
		:pid_64:tau = tau_6;
		:pid_64:tau_l = tau_l_6;
		:pid_64:tau_h = tau_h_6;
		:pid_64:i = i_6;
		:pid_64:t = t_6;
		:pid_64:consistent = consistent_6;
		:pid_64:cl = 0;
		:pid_64:d.seq = d.seq_6;
		:pid_64:d.fragment = d.fragment_6;
		:pid_64:d.offset = d.offset_6;
		:pid_69:mySeq = 2;
		:pid_69:k = k_7;
		:pid_69:c = c_7;
		:pid_69:e = e_7;
		:pid_69:tau = tau_7;
		:pid_69:tau_l = tau_l_7;
		:pid_69:tau_h = tau_h_7;
		:pid_69:i = i_7;
		:pid_69:t = t_7;
		:pid_69:consistent = consistent_7;
		:pid_69:cl = 0;
		:pid_69:d.seq = d.seq_7;
		:pid_69:d.fragment = d.fragment_7;
		:pid_69:d.offset = d.offset_7;
	}
	BUFFER{
		:pid_6:bufferNode:<FIFO>#0{ }
		:pid_23:bufferNode:<FIFO>#0{ }
		:pid_40:bufferNode:<FIFO>#0{ }
		:pid_57:bufferNode:<FIFO>#0{ }
	}
	EC:<Id:2;Ev:2;H:1;W:1>{ SC: ( pid_4:o0 , ( pid_9:cp0_init , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_43:cp0_init , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
		EXE: { |,| { |;| (:pid_59 , run) (:pid_59 , cp_init) } { |;| (:pid_42 , 
	run) (:pid_42 , cp_init) } { |;| (:pid_25 , run) (:pid_25 , cp_init) } { |;| 
	(:pid_8 , run) (:pid_8 , cp_init) } { |;| (:pid_3 , run) (:pid_3 , o_startup) } }
		DATA{
			:pid_2:cl_o = 0;
			:pid_7:k = 2;
			:pid_7:c = 0;
			:pid_7:e = 0;
			:pid_7:tau = 4;
			:pid_7:tau_l = 4;
			:pid_7:tau_h = 8;
			:pid_24:k = 2;
			:pid_24:c = 0;
			:pid_24:e = 0;
			:pid_24:tau = 4;
			:pid_24:tau_l = 4;
			:pid_24:tau_h = 8;
			:pid_41:k = 2;
			:pid_41:c = 0;
			:pid_41:e = 0;
			:pid_41:tau = 4;
			:pid_41:tau_l = 4;
			:pid_41:tau_h = 8;
			:pid_58:k = 2;
			:pid_58:c = 0;
			:pid_58:e = 0;
			:pid_58:tau = 4;
			:pid_58:tau_l = 4;
			:pid_58:tau_h = 8;
		}
		EC:<Id:5;Ev:5;H:2;W:3>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_43:cp0_init , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
			EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_9 , run) (:pid_9 , 
	cp_init) }
			TRACE: { |;| (:pid_6 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_0 }) (:pid_9 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_4 }) 
	(:pid_9 , ${ output#env inst::Trickle.Node.Log 0 } @ z_0) }
			NC: ((t_4 < 4) && (0 <= (t_4 + -2)))
			PC: ((t_4 < 4) && (0 <= (t_4 + -2)))
			DATA{
				:pid_6:mydp_run[0] = false;
				:pid_6:mydp_run[1] = false;
				:pid_6:$time = z_0;
				:pid_6:z = z_0;
				:pid_6:coverageProp = true;
				:pid_6:localTime = z_0;
				:pid_6:localPC = ((t_4 < 4) && (0 <= (t_4 + -2)));
				:pid_6:localPtC = ($delta#initial > 0);
				:pid_7:t = t_4;
				:pid_7:cl = 0;
				:pid_13:cl = z_0;
				:pid_18:cl = z_0;
			}
			EC:<Id:23;Ev:23;H:3;W:18>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
				EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_43 , run) 
	(:pid_43 , cp_init) }
				TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_14 }) (:pid_43 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_17 }) 
	(:pid_43 , ${ output#env inst::Trickle.Node.Log 0 } @ z_14) }
				NC: ((t_17 < 4) && (0 <= (t_17 + -2)))
				PC: ((t_17 < 4) && (t_4 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_4 + -2)))
				DATA{
					:pid_40:$time = z_14;
					:pid_40:z = z_14;
					:pid_40:localTime = z_14;
					:pid_40:localPC = ((t_17 < 4) && (0 <= (t_17 + -2)));
					:pid_40:localPtC = ($delta#initial > 0);
					:pid_41:t = t_17;
					:pid_41:cl = 0;
					:pid_47:cl = z_14;
					:pid_52:cl = z_14;
				}
				EC:<Id:123;Ev:45;H:4;W:100>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
					EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) 
	(:pid_44 , cp_sendCM) }
					TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_86 }) (:pid_44 , ${ output inst::Trickle.Node.ControlMsg [ 
	0 , 0 ] ${ + param::Trickle.Node.z_14 param::Trickle.Node.z_86 } } @ (z_14 + 
	z_86)) }
					/*FLAGS{ COVERAGE-ELEMENT }*/
					INFO{
						<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#1->inst::Trickle.n3->ControlMsg" as trace="tpid#1->inst::Trickle.n3->ControlMsg">
					}
					DATA{
						:pid_40:$time = (z_14 + z_86);
						:pid_40:z = z_86;
						:pid_40:localTime = (z_14 + z_86);
						:pid_40:localPC = ((t_17 < 4) && (0 <= (t_17 + -2)));
						:pid_40:localPtC = ((z_86 == t_17) && ($delta#initial > 0) && (z_14 > 0));
						:pid_41:cl = z_86;
						:pid_47:cl = (z_14 + z_86);
						:pid_52:cl = (z_14 + z_86);
					}
					BUFFER{
						:pid_6:bufferNode:<FIFO>#0{
							:pid_40:ControlMsg([ 0 , 0 ] , (z_14 + z_86));
						}
						:pid_57:bufferNode:<FIFO>#0{
							:pid_40:ControlMsg([ 0 , 0 ] , (z_14 + z_86));
						}
					}
					EC:<Id:244;Ev:72;H:5;W:199>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
						EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_10 , run) 
	(:pid_10 , cp_sendCM) }
						TRACE: { |;| (:pid_6 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_172 }) (:pid_10 , ${ output inst::Trickle.Node.ControlMsg 
	[ 1 , 1 ] ${ + param::Trickle.Node.z_0 param::Trickle.Node.z_172 } } @ (z_0 + 
	z_172)) }
						DATA{
							:pid_6:$time = (z_0 + z_172);
							:pid_6:z = z_172;
							:pid_6:localTime = (z_0 + z_172);
							:pid_6:localPC = ((t_4 < 4) && (0 <= (t_4 + -2)));
							:pid_6:localPtC = ((z_172 == t_4) && ($delta#initial > 0) && (z_0 > 0));
							:pid_7:cl = z_172;
							:pid_13:cl = (z_0 + z_172);
							:pid_18:cl = (z_0 + z_172);
						}
						BUFFER{
							:pid_23:bufferNode:<FIFO>#0{
								:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172));
							}
							:pid_40:bufferNode:<FIFO>#0{
								:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172));
							}
						}
						EC:<Id:407;Ev:163;H:6;W:199>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
							EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_11 , 
	run) (:pid_11 , cp2_receiveCM_inconsistent) }
							TRACE: { |;| (:pid_6 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_280 }) (:pid_11 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_14 
	param::Trickle.Node.z_86 } } @ (z_0 + z_172 + z_280)) (:pid_11 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_229 }) }
							/*FLAGS{ COVERAGE-ELEMENT }*/
							INFO{
								<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#2->inst::Trickle.n1->ControlMsg" as trace="tpid#2->inst::Trickle.n1->ControlMsg">
							}
							NC: ((t_229 < 4) && (0 <= (t_229 + -2)))
							PC: ((t_17 < 4) && (t_229 < 4) && (t_4 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_229 + 
	-2)) && (0 <= (t_4 + -2)))
							DATA{
								:pid_6:mydp_run[0] = true;
								:pid_6:mydp_run[1] = true;
								:pid_6:$time = (z_0 + z_172 + z_280);
								:pid_6:z = z_280;
								:pid_6:seq_buff[0] = 0;
								:pid_6:seq_buff[1] = 0;
								:pid_6:localTime = (z_0 + z_172 + z_280);
								:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)));
								:pid_6:localPtC = ((z_172 == t_4) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0));
								:pid_6:timeEmit = (z_14 + z_86);
								:pid_7:c = 0;
								:pid_7:e = 0;
								:pid_7:i = 2;
								:pid_7:t = t_229;
								:pid_7:consistent = false;
								:pid_7:cl = 0;
								:pid_13:cl = (z_0 + z_172 + z_280);
								:pid_18:cl = (z_0 + z_172 + z_280);
							}
							BUFFER{
								:pid_6:bufferNode:<FIFO>#0{ }
							}
							EC:<Id:974;Ev:251;H:7;W:811>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
								EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_26 , run) (:pid_26 , cp_init) }
								TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_645 }) (:pid_26 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_514 }) 
	(:pid_26 , ${ output#env inst::Trickle.Node.Log 0 } @ z_645) }
								NC: ((t_514 < 4) && (0 <= (t_514 + -2)))
								PC: ((t_17 < 4) && (t_229 < 4) && (t_4 < 4) && (t_514 < 4) && (0 <= (t_17 + -2)) && 
	(0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)))
								DATA{
									:pid_23:$time = z_645;
									:pid_23:z = z_645;
									:pid_23:localTime = z_645;
									:pid_23:localPC = ((t_514 < 4) && (0 <= (t_514 + -2)));
									:pid_23:localPtC = ($delta#initial > 0);
									:pid_24:t = t_514;
									:pid_24:cl = 0;
									:pid_30:cl = z_645;
									:pid_35:cl = z_645;
								}
								EC:<Id:1550;Ev:473;H:8;W:1299>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
									EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
									TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_997 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_0 
	param::Trickle.Node.z_172 } } @ (z_645 + z_997)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_758 }) }
									/*FLAGS{ COVERAGE-ELEMENT }*/
									INFO{
										<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#3->inst::Trickle.n2->ControlMsg" as trace="tpid#3->inst::Trickle.n2->ControlMsg">
									}
									NC: ((t_758 < 4) && (0 <= (t_758 + -2)))
									PC: ((t_17 < 4) && (t_229 < 4) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (0 <= 
	(t_17 + -2)) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) 
	&& (0 <= (t_758 + -2)))
									DATA{
										:pid_23:mydp_run[0] = true;
										:pid_23:mydp_run[1] = true;
										:pid_23:$time = (z_645 + z_997);
										:pid_23:z = z_997;
										:pid_23:seq_buff[0] = 1;
										:pid_23:seq_buff[1] = 1;
										:pid_23:localTime = (z_645 + z_997);
										:pid_23:localPC = ((t_514 < 4) && (t_758 < 4) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)));
										:pid_23:localPtC = ((z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ($delta#initial > 0) && (z_645 > 0));
										:pid_23:timeEmit = (z_0 + z_172);
										:pid_24:c = 0;
										:pid_24:e = 0;
										:pid_24:i = 2;
										:pid_24:t = t_758;
										:pid_24:consistent = false;
										:pid_24:cl = 0;
										:pid_30:cl = (z_645 + z_997);
										:pid_35:cl = (z_645 + z_997);
									}
									BUFFER{
										:pid_23:bufferNode:<FIFO>#0{ }
									}
									EC:<Id:3062;Ev:512;H:9;W:2589>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
										EXE: { |;| (:pid_57 , run) (:pid_58 , 
	run) (:pid_60 , run) (:pid_60 , cp_init) }
										TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_1887 }) (:pid_60 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_1342 }) 
	(:pid_60 , ${ output#env inst::Trickle.Node.Log 0 } @ z_1887) }
										NC: ((t_1342 < 4) && (0 <= (t_1342 + -2))
	)
										PC: ((t_1342 < 4) && (t_17 < 4) && (t_229 < 4) && (t_4 < 4) && (t_514 < 4) && (t_758 
	< 4) && (0 <= (t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 <= (t_229 + -2)) && (0 
	<= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)))
										DATA{
											:pid_57:$time = z_1887;
											:pid_57:z = z_1887;
											:pid_57:localTime = z_1887;
											:pid_57:localPC = ((t_1342 < 4) && (0 <= (t_1342 + -2)));
											:pid_57:localPtC = ($delta#initial > 0);
											:pid_58:t = t_1342;
											:pid_58:cl = 0;
											:pid_64:cl = z_1887;
											:pid_69:cl = z_1887;
										}
										EC:<Id:3413;Ev:623;H:10;W:2901>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
											EXE: { |;| (:pid_57 , run) (:pid_58 
	, run) (:pid_61 , run) (:pid_61 , cp1_receiveCM_consistent) }
											TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_2043 }) (:pid_61 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_14 
	param::Trickle.Node.z_86 } } @ (z_1887 + z_2043)) }
											/*FLAGS{ COVERAGE-ELEMENT }*/
											INFO{
												<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#4->inst::Trickle.n4->ControlMsg" as trace="tpid#4->inst::Trickle.n4->ControlMsg">
											}
											DATA{
												:pid_57:$time = (z_1887 + z_2043);
												:pid_57:z = z_2043;
												:pid_57:seq_buff[0] = 0;
												:pid_57:seq_buff[1] = 0;
												:pid_57:localTime = (z_1887 + z_2043);
												:pid_57:localPC = ((t_1342 < 4) && (0 <= (t_1342 + -2)));
												:pid_57:localPtC = ((z_2043 < t_1342) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ($delta#initial > 0) && (z_1887 > 0));
												:pid_57:timeEmit = (z_14 + z_86);
												:pid_58:c = 1;
												:pid_58:i = 2;
												:pid_58:consistent = true;
												:pid_58:cl = z_2043;
												:pid_64:cl = (z_1887 + z_2043);
												:pid_69:cl = (z_1887 + z_2043);
											}
											BUFFER{
												:pid_57:bufferNode:<FIFO>#0{ }
											}
											EC:<Id:4409;Ev:656;H:11;W:3786>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
												EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_10 , run) (:pid_10 , cp_sendCM) }
												TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_2484 }) (:pid_10 , ${ output 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_0 
	param::Trickle.Node.z_172 param::Trickle.Node.z_2484 param::Trickle.Node.z_280 } 
	} @ (z_0 + z_172 + z_2484 + z_280)) }
												/*FLAGS{ COVERAGE-ELEMENT }*/
												INFO{
													<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#5->inst::Trickle.n1->ControlMsg" as trace="tpid#5->inst::Trickle.n1->ControlMsg">
												}
												DATA{
													:pid_6:$time = (z_0 + z_172 + z_2484 + z_280);
													:pid_6:z = z_2484;
													:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280);
													:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)));
													:pid_6:localPtC = ((z_172 == t_4) && (z_2484 == t_229) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_280 > 0));
													:pid_7:cl = z_2484;
													:pid_13:cl = (z_0 + z_172 + z_2484 + z_280);
													:pid_18:cl = (z_0 + z_172 + z_2484 + z_280);
												}
												BUFFER{
													:pid_23:bufferNode:<FIFO>#0{
														:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172 + z_2484 + z_280));
													}
													:pid_40:bufferNode:<FIFO>#0{
														:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172));
														:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172 + z_2484 + z_280));
													}
												}
												EC:<Id:4709;Ev:771;H:12;W:4053>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
													EXE: { |;| (:pid_23 , run) 
	(:pid_24 , run) (:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
													TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_2617 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_0 
	param::Trickle.Node.z_172 param::Trickle.Node.z_2484 param::Trickle.Node.z_280 } 
	} @ (z_2617 + z_645 + z_997)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_1948 }) 
	}
													/*FLAGS{ COVERAGE-ELEMENT }*/
													INFO{
														<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#6->inst::Trickle.n2->ControlMsg" as trace="tpid#6->inst::Trickle.n2->ControlMsg">
													}
													NC: ((t_1948 < 4) && (0 <= 
	(t_1948 + -2)))
													PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_229 < 4) && (t_4 < 4) && 
	(t_514 < 4) && (t_758 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 
	<= (t_1948 + -2)) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + 
	-2)) && (0 <= (t_758 + -2)))
													DATA{
														:pid_23:$time = (z_2617 + z_645 + z_997);
														:pid_23:z = z_2617;
														:pid_23:localTime = (z_2617 + z_645 + z_997);
														:pid_23:localPC = ((t_1948 < 4) && (t_514 < 4) && (t_758 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)));
														:pid_23:localPtC = ((z_2617 < t_758) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ($delta#initial > 0) && (z_645 > 0) && (z_997 > 0));
														:pid_23:timeEmit = (z_0 + z_172 + z_2484 + z_280);
														:pid_24:i = 2;
														:pid_24:t = t_1948;
														:pid_30:cl = (z_2617 + z_645 + z_997);
														:pid_35:cl = (z_2617 + z_645 + z_997);
													}
													BUFFER{
														:pid_23:bufferNode:<FIFO>#0{ }
													}
													EC:<Id:5748;Ev:780;H:13;W:4977>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
														EXE: { |;| (:pid_40 , 
	run) (:pid_41 , run) (:pid_45 , run) (:pid_45 , cp2_receiveCM_inconsistent) }
														TRACE: { |;| (:pid_40 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3078 }) (:pid_45 , ${ 
	input inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_0 
	param::Trickle.Node.z_172 } } @ (z_14 + z_3078 + z_86)) (:pid_45 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2252 }) 
	}
														/*FLAGS{ COVERAGE-ELEMENT }*/
														INFO{
															<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#7->inst::Trickle.n3->ControlMsg" as trace="tpid#7->inst::Trickle.n3->ControlMsg">
														}
														NC: ((t_2252 < 4) && (0 
	<= (t_2252 + -2)))
														PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_17 + 
	-2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_229 + -2)) && 
	(0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)))
														DATA{
															:pid_40:mydp_run[0] = true;
															:pid_40:mydp_run[1] = true;
															:pid_40:$time = (z_14 + z_3078 + z_86);
															:pid_40:z = z_3078;
															:pid_40:seq_buff[0] = 1;
															:pid_40:seq_buff[1] = 1;
															:pid_40:localTime = (z_14 + z_3078 + z_86);
															:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)));
															:pid_40:localPtC = ((z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ($delta#initial > 0) && (z_14 > 0) && (z_86 > 0));
															:pid_40:timeEmit = (z_0 + z_172);
															:pid_41:c = 0;
															:pid_41:e = 0;
															:pid_41:i = 2;
															:pid_41:t = t_2252;
															:pid_41:consistent = false;
															:pid_41:cl = 0;
															:pid_47:cl = (z_14 + z_3078 + z_86);
															:pid_52:cl = (z_14 + z_3078 + z_86);
														}
														BUFFER{
															:pid_40:bufferNode:<FIFO>#0{
																:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172 + z_2484 + z_280));
															}
														}
														EC:<Id:5822;Ev:801;H:14;W:5042>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
															EXE: { |;| (:pid_6 , 
	run) (:pid_13 , run) (:pid_14 , run) (:pid_14 , dp_init) }
															TRACE: { |;| (:pid_6 
	, ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3112 }) (:pid_14 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_5886 
	}) }
															/*FLAGS{ COVERAGE-ELEMENT }*/
															INFO{
																<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#8->Node.DataProcess1->dp0.dp_init" as trace="tpid#8->Node.DataProcess1->dp0.dp_init">
															}
															NC: ((t_5886 < 4) && 
	(0 <= (t_5886 + -2)))
															PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && (0 <= (t_1342 + -2)) 
	&& (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 <= 
	(t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) 
	&& (0 <= (t_5886 + -2)))
															DATA{
																:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112);
																:pid_6:z = z_3112;
																:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112);
																:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (t_5886 < 4) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)));
																:pid_6:localPtC = ((z_172 == t_4) && (z_2484 == t_229) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0));
																:pid_7:cl = (z_2484 + z_3112);
																:pid_13:k = 2;
																:pid_13:c = 0;
																:pid_13:e = 0;
																:pid_13:tau = 4;
																:pid_13:tau_l = 4;
																:pid_13:tau_h = 8;
																:pid_13:t = t_5886;
																:pid_13:cl = 0;
																:pid_18:cl = (z_0 + z_172 + z_2484 + z_280 + z_3112);
															}
															EC:<Id:6016;Ev:805;H:15;W:5215>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																EXE: { |;| 
	(:pid_6 , run) (:pid_13 , run) (:pid_15 , run) (:pid_15 , dp_sendDM) }
																TRACE: { |;| 
	(:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3196 }) 
	(:pid_15 , ${ output inst::Trickle.Node.DataMsg [ 1 , 1 , 0 ] ${ + 
	param::Trickle.Node.z_0 param::Trickle.Node.z_172 param::Trickle.Node.z_2484 
	param::Trickle.Node.z_280 param::Trickle.Node.z_3112 param::Trickle.Node.z_3196 }
	 } @ (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196)) }
																/*FLAGS{ COVERAGE-ELEMENT }*/
																INFO{
																	<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#9->inst::Trickle.n1->DataMsg" as trace="tpid#9->inst::Trickle.n1->DataMsg">
																}
																DATA{
																	:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196);
																	:pid_6:z = z_3196;
																	:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196);
																	:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (t_5886 < 4) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)));
																	:pid_6:localPtC = ((z_172 == t_4) && (z_2484 == t_229) && (z_3196 == t_5886) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0) && (z_3112 > 0));
																	:pid_7:cl = (z_2484 + z_3112 + z_3196);
																	:pid_13:cl = z_3196;
																	:pid_18:cl = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196);
																}
																BUFFER{
																	:pid_23:bufferNode:<FIFO>#0{
																		:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196));
																	}
																	:pid_40:bufferNode:<FIFO>#0{
																		:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172 + z_2484 + z_280));
																		:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196));
																	}
																}
																EC:<Id:6060;Ev:837;H:16;W:5255>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																	EXE: { |;| 
	(:pid_6 , run) (:pid_13 , run) (:pid_16 , run) (:pid_16 , dp_resetTau) }
																	TRACE: { |;| 
	(:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3212 }) 
	(:pid_16 , ${ newfresh inst::Trickle.Node.DataProcess.t 
	param::Trickle.Node.DataProcess.t_6073 }) }
																	/*FLAGS{ COVERAGE-ELEMENT }*/
																	INFO{
																		<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#10->Node.DataProcess1->dp2.dp_resetTau" as trace="tpid#10->Node.DataProcess1->dp2.dp_resetTau">
																	}
																	NC: ((t_6073 
	< 8) && (0 <= (t_6073 + -4)))
																	PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && (t_6073 < 8) && (0 <= 
	(t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + 
	-2)) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= 
	(t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)))
																	DATA{
																		:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212);
																		:pid_6:z = z_3212;
																		:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212);
																		:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (t_5886 < 4) && (t_6073 < 8) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)));
																		:pid_6:localPtC = (((z_3196 + z_3212) == 4) && (z_172 == t_4) && (z_2484 == t_229) && (z_3196 == t_5886) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ((z_3196 + z_3212) > t_5886) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0) && (z_3112 > 0) && (z_3196 > 0));
																		:pid_7:cl = (z_2484 + z_3112 + z_3196 + z_3212);
																		:pid_13:e = 1;
																		:pid_13:tau = 8;
																		:pid_13:t = t_6073;
																		:pid_13:cl = 0;
																		:pid_18:cl = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212);
																	}
																	EC:<Id:6406;Ev:841;H:17;W:5569>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																		EXE: { 
	|;| (:pid_6 , run) (:pid_13 , run) (:pid_15 , run) (:pid_15 , dp_sendDM) }
																		TRACE: { 
	|;| (:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3340 }) 
	(:pid_15 , ${ output inst::Trickle.Node.DataMsg [ 1 , 1 , 0 ] ${ + 
	param::Trickle.Node.z_0 param::Trickle.Node.z_172 param::Trickle.Node.z_2484 
	param::Trickle.Node.z_280 param::Trickle.Node.z_3112 param::Trickle.Node.z_3196 
	param::Trickle.Node.z_3212 param::Trickle.Node.z_3340 } } @ (z_0 + z_172 + 
	z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340)) }
																		/*FLAGS{ COVERAGE-ELEMENT }*/
																		INFO{
																			<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#11->inst::Trickle.n1->DataMsg" as trace="tpid#11->inst::Trickle.n1->DataMsg">
																		}
																		DATA{
																			:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340);
																			:pid_6:z = z_3340;
																			:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340);
																			:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (t_5886 < 4) && (t_6073 < 8) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)));
																			:pid_6:localPtC = (((z_3196 + z_3212) == 4) && (z_172 == t_4) && (z_2484 == t_229) && (z_3196 == t_5886) && (z_3340 == t_6073) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ((z_3196 + z_3212) > t_5886) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0) && (z_3112 > 0) && (z_3196 > 0) && (z_3212 > 0));
																			:pid_7:cl = (z_2484 + z_3112 + z_3196 + z_3212 + z_3340);
																			:pid_13:cl = z_3340;
																			:pid_18:cl = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340);
																		}
																		BUFFER{
																			:pid_23:bufferNode:<FIFO>#0{
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340));
																			}
																			:pid_40:bufferNode:<FIFO>#0{
																				:pid_6:ControlMsg([ 1 , 1 ] , (z_0 + z_172 + z_2484 + z_280));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340));
																			}
																		}
																		EC:<Id:6453;Ev:873;H:18;W:5612>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																			EXE: 
	{ |;| (:pid_23 , run) (:pid_30 , run) (:pid_31 , run) (:pid_31 , dp_init) }
																			
	TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3357 }) (:pid_31 , ${ newfresh 
	inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_6315 }) }
																			/*FLAGS{ COVERAGE-ELEMENT }*/
																			INFO{
																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#12->Node.DataProcess1->dp0.dp_init" as trace="tpid#12->Node.DataProcess1->dp0.dp_init">
																			}
																			NC: 
	((t_6315 < 4) && (0 <= (t_6315 + -2)))
																			PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && (t_6073 < 8) && 
	(t_6315 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)
	) && (0 <= (t_2252 + -2)) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= 
	(t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + 
	-4)) && (0 <= (t_6315 + -2)))
																			DATA{
																				:pid_23:$time = (z_2617 + z_3357 + z_645 + z_997);
																				:pid_23:z = z_3357;
																				:pid_23:localTime = (z_2617 + z_3357 + z_645 + z_997);
																				:pid_23:localPC = ((t_1948 < 4) && (t_514 < 4) && (t_758 < 4) && (t_6315 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_6315 + -2)));
																				:pid_23:localPtC = ((z_2617 < t_758) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ($delta#initial > 0) && (z_2617 > 0) && (z_645 > 0) && (z_997 > 0));
																				:pid_24:cl = z_3357;
																				:pid_30:k = 2;
																				:pid_30:c = 0;
																				:pid_30:e = 0;
																				:pid_30:tau = 4;
																				:pid_30:tau_l = 4;
																				:pid_30:tau_h = 8;
																				:pid_30:t = t_6315;
																				:pid_30:cl = 0;
																				:pid_35:cl = (z_2617 + z_3357 + z_645 + z_997);
																			}
																			EC:<Id:6802;Ev:880;H:19;W:5929>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																				
	EXE: { |;| (:pid_23 , run) (:pid_30 , run) (:pid_32 , run) (:pid_32 , 
	dp1_receiveDM_consistent) }
																				
	TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3485 }) (:pid_32 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_0 param::Trickle.Node.z_172 
	param::Trickle.Node.z_2484 param::Trickle.Node.z_280 param::Trickle.Node.z_3112 
	param::Trickle.Node.z_3196 } } @ (z_2617 + z_3357 + z_3485 + z_645 + z_997)) }
																				/*FLAGS{ COVERAGE-ELEMENT }*/
																				INFO{
																					<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#13->inst::Trickle.n2->DataMsg" as trace="tpid#13->inst::Trickle.n2->DataMsg">
																				}
																				DATA{
																					:pid_23:my_buff[0].seq = 1;
																					:pid_23:my_buff[0].fragment = FRAGMENT_0;
																					:pid_23:my_buff[0].offset = 0;
																					:pid_23:firmware[0] = FRAGMENT_0;
																					:pid_23:myseq_buff[0] = 1;
																					:pid_23:$time = (z_2617 + z_3357 + z_3485 + z_645 + z_997);
																					:pid_23:z = z_3485;
																					:pid_23:localTime = (z_2617 + z_3357 + z_3485 + z_645 + z_997);
																					:pid_23:localPC = ((t_1948 < 4) && (t_514 < 4) && (t_758 < 4) && (t_6315 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_6315 + -2)));
																					:pid_23:localPtC = ((z_2617 < t_758) && (z_3485 < t_6315) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_2617 + z_3357 + z_3485 + z_645 + z_997)) && ($delta#initial > 0) && (z_2617 > 0) && (z_3357 > 0) && (z_645 > 0) && (z_997 > 0));
																					:pid_23:timeEmit = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196);
																					:pid_24:cl = (z_3357 + z_3485);
																					:pid_30:c = 1;
																					:pid_30:consistent = true;
																					:pid_30:cl = z_3485;
																					:pid_30:d.seq = 1;
																					:pid_30:d.fragment = FRAGMENT_0;
																					:pid_30:d.offset = 0;
																					:pid_35:cl = (z_2617 + z_3357 + z_3485 + z_645 + z_997);
																				}
																				BUFFER{
																					:pid_23:bufferNode:<FIFO>#0{
																						:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340));
																					}
																				}
																				EC:<Id:6883;Ev:909;H:20;W:6003>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
	EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_48 , run) (:pid_48 , dp_init) }
																					
	TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3514 }) (:pid_48 , ${ newfresh 
	inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_6579 }) }
																					/*FLAGS{ COVERAGE-ELEMENT }*/
																					INFO{
																						<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#14->Node.DataProcess1->dp0.dp_init" as trace="tpid#14->Node.DataProcess1->dp0.dp_init">
																					}
																					
	NC: ((t_6579 < 4) && (0 <= (t_6579 + -2)))
																					PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && (t_6073 < 8) && 
	(t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 
	<= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_229 + -2)) && (0 <= (t_4 + 
	-2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 
	<= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= (t_6579 + -2)))
																					DATA{
																						:pid_40:$time = (z_14 + z_3078 + z_3514 + z_86);
																						:pid_40:z = z_3514;
																						:pid_40:localTime = (z_14 + z_3078 + z_3514 + z_86);
																						:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (t_6579 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_6579 + -2)));
																						:pid_40:localPtC = ((z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ($delta#initial > 0) && (z_14 > 0) && (z_3078 > 0) && (z_86 > 0));
																						:pid_41:cl = z_3514;
																						:pid_47:k = 2;
																						:pid_47:c = 0;
																						:pid_47:e = 0;
																						:pid_47:tau = 4;
																						:pid_47:tau_l = 4;
																						:pid_47:tau_h = 8;
																						:pid_47:t = t_6579;
																						:pid_47:cl = 0;
																						:pid_52:cl = (z_14 + z_3078 + z_3514 + z_86);
																					}
																					EC:<Id:7202;Ev:920;H:21;W:6293>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
		EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) (:pid_44 , 
	cp1_receiveCM_inconsistent) }
																					
		TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3630 }) (:pid_44 , ${ input inst::Trickle.Node.ControlMsg 
	[ 1 , 1 ] ${ + param::Trickle.Node.z_0 param::Trickle.Node.z_172 
	param::Trickle.Node.z_2484 param::Trickle.Node.z_280 } } @ (z_14 + z_3078 + 
	z_3514 + z_3630 + z_86)) (:pid_44 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2572 }) 
	}
																					
		NC: ((t_2572 < 4) && (0 <= (t_2572 + -2)))
																						PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && 
	(t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + -2)) && (0 <= 
	(t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_229 + 
	-2)) && (0 <= (t_2572 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 
	<= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= 
	(t_6315 + -2)) && (0 <= (t_6579 + -2)))
																						DATA{
																							:pid_40:$time = (z_14 + z_3078 + z_3514 + z_3630 + z_86);
																							:pid_40:z = z_3630;
																							:pid_40:localTime = (z_14 + z_3078 + z_3514 + z_3630 + z_86);
																							:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (t_2572 < 4) && (t_6579 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_6579 + -2)));
																							:pid_40:localPtC = ((z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_3514 + z_3630) < t_2252) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_14 + z_3078 + z_3514 + z_3630 + z_86)) && ($delta#initial > 0) && (z_14 > 0) && (z_3078 > 0) && (z_3514 > 0) && (z_86 > 0));
																							:pid_40:timeEmit = (z_0 + z_172 + z_2484 + z_280);
																							:pid_41:c = 0;
																							:pid_41:e = 0;
																							:pid_41:i = 2;
																							:pid_41:t = t_2572;
																							:pid_41:cl = 0;
																							:pid_47:cl = z_3630;
																							:pid_52:cl = (z_14 + z_3078 + z_3514 + z_3630 + z_86);
																						}
																						BUFFER{
																							:pid_40:bufferNode:<FIFO>#0{
																								:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196));
																								:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340));
																							}
																						}
																						EC:<Id:7320;Ev:945;H:22;W:6400>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
			EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_49 , run) (:pid_49 , 
	dp1_receiveDM_consistent) }
																					
			TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3674 }) (:pid_49 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_0 param::Trickle.Node.z_172 
	param::Trickle.Node.z_2484 param::Trickle.Node.z_280 param::Trickle.Node.z_3112 
	param::Trickle.Node.z_3196 } } @ (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + 
	z_86)) }
																							/*FLAGS{ COVERAGE-ELEMENT }*/
																							INFO{
																								<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#15->inst::Trickle.n3->DataMsg" as trace="tpid#15->inst::Trickle.n3->DataMsg">
																							}
																							DATA{
																								:pid_40:my_buff[0].seq = 1;
																								:pid_40:my_buff[0].fragment = FRAGMENT_0;
																								:pid_40:my_buff[0].offset = 0;
																								:pid_40:firmware[0] = FRAGMENT_0;
																								:pid_40:myseq_buff[0] = 1;
																								:pid_40:$time = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86);
																								:pid_40:z = z_3674;
																								:pid_40:localTime = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86);
																								:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (t_2572 < 4) && (t_6579 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_6579 + -2)));
																								:pid_40:localPtC = ((z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_3514 + z_3630) < t_2252) && ((z_3630 + z_3674) < t_6579) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_14 + z_3078 + z_3514 + z_3630 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86)) && ($delta#initial > 0) && (z_14 > 0) && (z_3078 > 0) && (z_3514 > 0) && (z_3630 > 0) && (z_86 > 0));
																								:pid_40:timeEmit = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196);
																								:pid_41:cl = z_3674;
																								:pid_47:c = 1;
																								:pid_47:consistent = true;
																								:pid_47:cl = (z_3630 + z_3674);
																								:pid_47:d.seq = 1;
																								:pid_47:d.fragment = FRAGMENT_0;
																								:pid_47:d.offset = 0;
																								:pid_52:cl = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86);
																							}
																							BUFFER{
																								:pid_40:bufferNode:<FIFO>#0{
																									:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340));
																								}
																							}
																							EC:<Id:7591;Ev:952;H:23;W:6646>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
				EXE: { |;| (:pid_23 , run) (:pid_30 , run) (:pid_32 , run) (:pid_32 
	, dp1_receiveDM_consistent) }
																					
				TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3773 }) (:pid_32 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_0 param::Trickle.Node.z_172 
	param::Trickle.Node.z_2484 param::Trickle.Node.z_280 param::Trickle.Node.z_3112 
	param::Trickle.Node.z_3196 param::Trickle.Node.z_3212 param::Trickle.Node.z_3340 
	} } @ (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997)) }
																								/*FLAGS{ COVERAGE-ELEMENT }*/
																								INFO{
																									<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#16->inst::Trickle.n2->DataMsg" as trace="tpid#16->inst::Trickle.n2->DataMsg">
																								}
																								DATA{
																									:pid_23:$time = (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997);
																									:pid_23:z = z_3773;
																									:pid_23:localTime = (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997);
																									:pid_23:localPC = ((t_1948 < 4) && (t_514 < 4) && (t_758 < 4) && (t_6315 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_6315 + -2)));
																									:pid_23:localPtC = (((z_3485 + z_3773) < t_6315) && (z_2617 < t_758) && (z_3485 < t_6315) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_2617 + z_3357 + z_3485 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997)) && ($delta#initial > 0) && (z_2617 > 0) && (z_3357 > 0) && (z_3485 > 0) && (z_645 > 0) && (z_997 > 0));
																									:pid_23:timeEmit = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340);
																									:pid_24:cl = (z_3357 + z_3485 + z_3773);
																									:pid_30:c = 2;
																									:pid_30:cl = (z_3485 + z_3773);
																									:pid_35:cl = (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997);
																								}
																								BUFFER{
																									:pid_23:bufferNode:<FIFO>#0{ }
																								}
																								EC:<Id:7677;Ev:984;H:24;W:6725>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
					EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_49 , run) 
	(:pid_49 , dp1_receiveDM_consistent) }
																					
					TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3802 }) (:pid_49 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_0 param::Trickle.Node.z_172 
	param::Trickle.Node.z_2484 param::Trickle.Node.z_280 param::Trickle.Node.z_3112 
	param::Trickle.Node.z_3196 param::Trickle.Node.z_3212 param::Trickle.Node.z_3340 
	} } @ (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86)) }
																									/*FLAGS{ COVERAGE-ELEMENT }*/
																									INFO{
																										<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#17->inst::Trickle.n3->DataMsg" as trace="tpid#17->inst::Trickle.n3->DataMsg">
																									}
																									DATA{
																										:pid_40:$time = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86);
																										:pid_40:z = z_3802;
																										:pid_40:localTime = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86);
																										:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (t_2572 < 4) && (t_6579 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_6579 + -2)));
																										:pid_40:localPtC = ((z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_3514 + z_3630) < t_2252) && ((z_3630 + z_3674) < t_6579) && ((z_3630 + z_3674 + z_3802) < t_6579) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_14 + z_3078 + z_3514 + z_3630 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86)) && ($delta#initial > 0) && (z_14 > 0) && (z_3078 > 0) && (z_3514 > 0) && (z_3630 > 0) && (z_3674 > 0) && (z_86 > 0));
																										:pid_40:timeEmit = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340);
																										:pid_41:cl = (z_3674 + z_3802);
																										:pid_47:c = 2;
																										:pid_47:cl = (z_3630 + z_3674 + z_3802);
																										:pid_52:cl = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86);
																									}
																									BUFFER{
																										:pid_40:bufferNode:<FIFO>#0{ }
																									}
																									EC:<Id:8058;Ev:993;H:25;W:7074>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
						EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) 
	(:pid_44 , cp_sendCM) }
																					
						TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3930 }) (:pid_44 , ${ output inst::Trickle.Node.ControlMsg 
	[ 1 , 0 ] ${ + param::Trickle.Node.z_14 param::Trickle.Node.z_3078 
	param::Trickle.Node.z_3514 param::Trickle.Node.z_3630 param::Trickle.Node.z_3674 
	param::Trickle.Node.z_3802 param::Trickle.Node.z_3930 param::Trickle.Node.z_86 } 
	} @ (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86)) }
																										/*FLAGS{ COVERAGE-ELEMENT }*/
																										INFO{
																											<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#18->inst::Trickle.n3->ControlMsg" as trace="tpid#18->inst::Trickle.n3->ControlMsg">
																										}
																										DATA{
																											:pid_40:$time = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86);
																											:pid_40:z = z_3930;
																											:pid_40:localTime = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86);
																											:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (t_2572 < 4) && (t_6579 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_6579 + -2)));
																											:pid_40:localPtC = (((z_3674 + z_3802 + z_3930) == t_2572) && (z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_3514 + z_3630) < t_2252) && ((z_3630 + z_3674) < t_6579) && ((z_3630 + z_3674 + z_3802) < t_6579) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_14 + z_3078 + z_3514 + z_3630 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86)) && ($delta#initial > 0) && (z_14 > 0) && (z_3078 > 0) && (z_3514 > 0) && (z_3630 > 0) && (z_3674 > 0) && (z_3802 > 0) && (z_86 > 0));
																											:pid_41:cl = (z_3674 + z_3802 + z_3930);
																											:pid_47:cl = (z_3630 + z_3674 + z_3802 + z_3930);
																											:pid_52:cl = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86);
																										}
																										BUFFER{
																											:pid_6:bufferNode:<FIFO>#0{
																												:pid_40:ControlMsg([ 1 , 0 ] , (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86));
																											}
																											:pid_57:bufferNode:<FIFO>#0{
																												:pid_40:ControlMsg([ 1 , 0 ] , (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86));
																											}
																										}
																										EC:<Id:8131;Ev:1011;H:26;W:7138>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
							EXE: { |;| (:pid_57 , run) (:pid_58 , run) (:pid_61 , 
	run) (:pid_61 , cp1_receiveCM_inconsistent) }
																					
							TRACE: { |;| (:pid_57 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3967 }) (:pid_61 , ${ input inst::Trickle.Node.ControlMsg 
	[ 1 , 0 ] ${ + param::Trickle.Node.z_14 param::Trickle.Node.z_3078 
	param::Trickle.Node.z_3514 param::Trickle.Node.z_3630 param::Trickle.Node.z_3674 
	param::Trickle.Node.z_3802 param::Trickle.Node.z_3930 param::Trickle.Node.z_86 } 
	} @ (z_1887 + z_2043 + z_3967)) (:pid_61 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2712 }) 
	}
																											/*FLAGS{ COVERAGE-ELEMENT }*/
																											INFO{
																												<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#19->inst::Trickle.n4->ControlMsg" as trace="tpid#19->inst::Trickle.n4->ControlMsg">
																											}
																					
							NC: ((t_2712 < 4) && (0 <= (t_2712 + -2)))
																											PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && 
	(t_5886 < 4) && (t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_4 + 
	-2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 
	<= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= (t_6579 + -2)))
																											DATA{
																												:pid_57:mydp_run[0] = true;
																												:pid_57:$time = (z_1887 + z_2043 + z_3967);
																												:pid_57:z = z_3967;
																												:pid_57:seq_buff[0] = 1;
																												:pid_57:localTime = (z_1887 + z_2043 + z_3967);
																												:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)));
																												:pid_57:localPtC = (((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0));
																												:pid_57:timeEmit = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86);
																												:pid_58:c = 0;
																												:pid_58:e = 0;
																												:pid_58:i = 2;
																												:pid_58:t = t_2712;
																												:pid_58:consistent = false;
																												:pid_58:cl = 0;
																												:pid_64:cl = (z_1887 + z_2043 + z_3967);
																												:pid_69:cl = (z_1887 + z_2043 + z_3967);
																											}
																											BUFFER{
																												:pid_57:bufferNode:<FIFO>#0{ }
																											}
																											EC:<Id:8283;Ev:1023;H:27;W:7272>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
								EXE: { |;| (:pid_57 , run) (:pid_58 , run) (:pid_61 
	, run) (:pid_61 , cp_sendCM) }
																					
								TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4039 }) (:pid_61 , ${ output 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1887 
	param::Trickle.Node.z_2043 param::Trickle.Node.z_3967 param::Trickle.Node.z_4039 
	} } @ (z_1887 + z_2043 + z_3967 + z_4039)) }
																												/*FLAGS{ COVERAGE-ELEMENT }*/
																												INFO{
																													<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#20->inst::Trickle.n4->ControlMsg" as trace="tpid#20->inst::Trickle.n4->ControlMsg">
																												}
																												DATA{
																													:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039);
																													:pid_57:z = z_4039;
																													:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039);
																													:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)));
																													:pid_57:localPtC = ((z_4039 == t_2712) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0));
																													:pid_58:cl = z_4039;
																													:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039);
																													:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039);
																												}
																												BUFFER{
																													:pid_23:bufferNode:<FIFO>#0{
																														:pid_57:ControlMsg([ 0 , 0 ] , (z_1887 + z_2043 + z_3967 + z_4039));
																													}
																												}
																												EC:<Id:8396;Ev:1044;H:28;W:7373>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
									EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
																					
									TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4085 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1887 
	param::Trickle.Node.z_2043 param::Trickle.Node.z_3967 param::Trickle.Node.z_4039 
	} } @ (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997)) (:pid_27 , 
	${ newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_2777 }) }
																													/*FLAGS{ COVERAGE-ELEMENT }*/
																													INFO{
																														<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#21->inst::Trickle.n2->ControlMsg" as trace="tpid#21->inst::Trickle.n2->ControlMsg">
																													}
																					
									NC: ((t_2777 < 4) && (0 <= (t_2777 + -2)))
																													PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_4 < 4) && (t_514 < 4) && 
	(t_758 < 4) && (t_5886 < 4) && (t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && 
	(0 <= (t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= 
	(t_2252 + -2)) && (0 <= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + 
	-2)) && (0 <= (t_2777 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 
	<= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= 
	(t_6315 + -2)) && (0 <= (t_6579 + -2)))
																													DATA{
																														:pid_23:$time = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997);
																														:pid_23:z = z_4085;
																														:pid_23:seq_buff[0] = 0;
																														:pid_23:seq_buff[1] = 0;
																														:pid_23:localTime = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997);
																														:pid_23:localPC = ((t_1948 < 4) && (t_2777 < 4) && (t_514 < 4) && (t_758 < 4) && (t_6315 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_2777 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_6315 + -2)));
																														:pid_23:localPtC = (((z_3357 + z_3485 + z_3773 + z_4085) < t_1948) && ((z_3485 + z_3773) < t_6315) && (z_2617 < t_758) && (z_3485 < t_6315) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_2617 + z_3357 + z_3485 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997)) && ((z_1887 + z_2043 + z_3967 + z_4039) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997)) && ($delta#initial > 0) && (z_2617 > 0) && (z_3357 > 0) && (z_3485 > 0) && (z_3773 > 0) && (z_645 > 0) && (z_997 > 0));
																														:pid_23:timeEmit = (z_1887 + z_2043 + z_3967 + z_4039);
																														:pid_24:i = 2;
																														:pid_24:t = t_2777;
																														:pid_24:cl = 0;
																														:pid_30:cl = (z_3485 + z_3773 + z_4085);
																														:pid_35:cl = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997);
																													}
																													BUFFER{
																														:pid_23:bufferNode:<FIFO>#0{ }
																													}
																													EC:<Id:8607;Ev:1056;H:29;W:7563>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
										EXE: { |;| (:pid_57 , run) (:pid_58 , run) 
	(:pid_62 , run) (:pid_62 , cp_resetTau) }
																					
										TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4171 }) (:pid_62 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2841 }) 
	}
																														/*FLAGS{ COVERAGE-ELEMENT }*/
																														INFO{
																															<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#22->Node.ControlProcess->cp2.cp_resetTau" as trace="tpid#22->Node.ControlProcess->cp2.cp_resetTau">
																														}
																					
										NC: ((t_2841 < 8) && (0 <= (t_2841 + -4)))
																														PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_4 < 4) && 
	(t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && (t_6073 < 8) && (t_6315 < 4) && 
	(t_6579 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)
	) && (0 <= (t_2252 + -2)) && (0 <= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 
	<= (t_2712 + -2)) && (0 <= (t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_4 
	+ -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_5886 + -2)) && 
	(0 <= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= (t_6579 + -2)))
																														DATA{
																															:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171);
																															:pid_57:z = z_4171;
																															:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171);
																															:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)));
																															:pid_57:localPtC = (((z_4039 + z_4171) == 4) && (z_4039 == t_2712) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0));
																															:pid_58:e = 1;
																															:pid_58:tau = 8;
																															:pid_58:t = t_2841;
																															:pid_58:cl = 0;
																															:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171);
																															:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171);
																														}
																														EC:<Id:8724;Ev:1077;H:30;W:7668>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
											EXE: { |;| (:pid_57 , run) (:pid_58 , 
	run) (:pid_61 , run) (:pid_61 , cp_sendCM) }
																					
											TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4219 }) (:pid_61 , ${ output 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1887 
	param::Trickle.Node.z_2043 param::Trickle.Node.z_3967 param::Trickle.Node.z_4039 
	param::Trickle.Node.z_4171 param::Trickle.Node.z_4219 } } @ (z_1887 + z_2043 + 
	z_3967 + z_4039 + z_4171 + z_4219)) }
																															/*FLAGS{ COVERAGE-ELEMENT }*/
																															INFO{
																																<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#23->inst::Trickle.n4->ControlMsg" as trace="tpid#23->inst::Trickle.n4->ControlMsg">
																															}
																															DATA{
																																:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219);
																																:pid_57:z = z_4219;
																																:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219);
																																:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)));
																																:pid_57:localPtC = (((z_4039 + z_4171) == 4) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0));
																																:pid_58:cl = z_4219;
																																:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219);
																																:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219);
																															}
																															BUFFER{
																																:pid_23:bufferNode:<FIFO>#0{
																																	:pid_57:ControlMsg([ 0 , 0 ] , (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219));
																																}
																															}
																															EC:<Id:8924;Ev:1085;H:31;W:7847>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
												EXE: { |;| (:pid_23 , run) (:pid_24 
	, run) (:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
																					
												TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4301 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1887 
	param::Trickle.Node.z_2043 param::Trickle.Node.z_3967 param::Trickle.Node.z_4039 
	param::Trickle.Node.z_4171 param::Trickle.Node.z_4219 } } @ (z_2617 + z_3357 + 
	z_3485 + z_3773 + z_4085 + z_4301 + z_645 + z_997)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2960 }) 
	}
																																/*FLAGS{ COVERAGE-ELEMENT }*/
																																INFO{
																																	<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#24->inst::Trickle.n2->ControlMsg" as trace="tpid#24->inst::Trickle.n2->ControlMsg">
																																}
																					
												NC: ((t_2960 < 4) && (0 <= (t_2960 + 
	-2)))
																																PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && (t_6073 < 8) && 
	(t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_17 + -2)) && (0 
	<= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_229 + -2)) && (0 <= 
	(t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2777 + -2)) && (0 <= (t_2841 
	+ -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 
	<= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= 
	(t_6315 + -2)) && (0 <= (t_6579 + -2)))
																																DATA{
																																	:pid_23:$time = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_645 + z_997);
																																	:pid_23:z = z_4301;
																																	:pid_23:localTime = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_645 + z_997);
																																	:pid_23:localPC = ((t_1948 < 4) && (t_2777 < 4) && (t_2960 < 4) && (t_514 < 4) && (t_758 < 4) && (t_6315 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_2777 + -2)) && (0 <= (t_2960 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_6315 + -2)));
																																	:pid_23:localPtC = (((z_3357 + z_3485 + z_3773 + z_4085) < t_1948) && ((z_3485 + z_3773) < t_6315) && (z_2617 < t_758) && (z_3485 < t_6315) && (z_4301 < t_2777) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_2617 + z_3357 + z_3485 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997)) && ((z_1887 + z_2043 + z_3967 + z_4039) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997)) && ((z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_645 + z_997)) && ($delta#initial > 0) && (z_2617 > 0) && (z_3357 > 0) && (z_3485 > 0) && (z_3773 > 0) && (z_4085 > 0) && (z_645 > 0) && (z_997 > 0));
																																	:pid_23:timeEmit = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219);
																																	:pid_24:i = 2;
																																	:pid_24:t = t_2960;
																																	:pid_30:cl = (z_3485 + z_3773 + z_4085 + z_4301);
																																	:pid_35:cl = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_645 + z_997);
																																}
																																BUFFER{
																																	:pid_23:bufferNode:<FIFO>#0{ }
																																}
																																EC:<Id:9014;Ev:1113;H:32;W:7929>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
													EXE: { |;| (:pid_57 , run) 
	(:pid_58 , run) (:pid_62 , run) (:pid_62 , cp_resetTau) }
																					
													TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4335 }) (:pid_62 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_2998 }) }
																																	/*FLAGS{ COVERAGE-ELEMENT }*/
																																	INFO{
																																		<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#25->Node.ControlProcess->cp2.cp_resetTau" as trace="tpid#25->Node.ControlProcess->cp2.cp_resetTau">
																																	}
																					
													NC: ((t_2998 < 8) && (0 <= 
	(t_2998 + -4)))
																																	PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && 
	(t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + -2)) && (0 <= 
	(t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_229 + 
	-2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2777 + -2)) && 
	(0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 + -4)) && (0 <= 
	(t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_5886 + -2))
	 && (0 <= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= (t_6579 + -2)))
																																	DATA{
																																		:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335);
																																		:pid_57:z = z_4335;
																																		:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335);
																																		:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																		:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0));
																																		:pid_58:e = 2;
																																		:pid_58:tau = 8;
																																		:pid_58:t = t_2998;
																																		:pid_58:cl = 0;
																																		:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335);
																																		:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335);
																																	}
																																	EC:<Id:9303;Ev:1116;H:33;W:7929>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_20:dp1 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_18 , run) (:pid_19 , run) (:pid_19 , dp_init) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4444 }) (:pid_19 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7931 
	}) }
																					
														NC: ((t_7931 < 4) && (0 <= 
	(t_7931 + -2)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && 
	(t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (t_7931 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 
	<= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= 
	(t_6579 + -2)) && (0 <= (t_7931 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:z = z_4444;
																																			:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (t_5886 < 4) && (t_6073 < 8) && (t_7931 < 4) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= (t_7931 + -2)));
																																			:pid_6:localPtC = (((z_3196 + z_3212) == 4) && (z_172 == t_4) && (z_2484 == t_229) && (z_3196 == t_5886) && (z_3340 == t_6073) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ((z_3196 + z_3212) > t_5886) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0) && (z_3112 > 0) && (z_3196 > 0) && (z_3212 > 0) && (z_3340 > 0));
																																			:pid_7:cl = (z_2484 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_13:cl = (z_3340 + z_4444);
																																			:pid_18:k = 2;
																																			:pid_18:c = 0;
																																			:pid_18:e = 0;
																																			:pid_18:tau = 4;
																																			:pid_18:tau_l = 4;
																																			:pid_18:tau_h = 8;
																																			:pid_18:t = t_7931;
																																			:pid_18:cl = 0;
																																		}
																																		EC:<Id:9342;Ev:0;H:34;W:8226>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_20:dp1 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4459 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4459)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4459);
																																				:pid_57:z = z_4459;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4459);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4459;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4459);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4459);
																																			}
																																		}
																																	}
																																	EC:<Id:9304;Ev:1117;H:33;W:8191>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_13 , run) (:pid_16 , run) (:pid_16 , dp_resetTau) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4444 }) (:pid_16 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7930 
	}) }
																					
														NC: ((t_7930 < 8) && (0 <= 
	(t_7930 + -4)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && 
	(t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (t_7930 < 8) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 
	<= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= 
	(t_6579 + -2)) && (0 <= (t_7930 + -4)))
																																		DATA{
																																			:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:z = z_4444;
																																			:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:localPC = ((t_229 < 4) && (t_4 < 4) && (t_5886 < 4) && (t_6073 < 8) && (t_7930 < 8) && (0 <= (t_229 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= (t_7930 + -4)));
																																			:pid_6:localPtC = (((z_3196 + z_3212) == 4) && ((z_3340 + z_4444) == 8) && (z_172 == t_4) && (z_2484 == t_229) && (z_3196 == t_5886) && (z_3340 == t_6073) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ((z_3196 + z_3212) > t_5886) && ((z_3340 + z_4444) > t_6073) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0) && (z_3112 > 0) && (z_3196 > 0) && (z_3212 > 0) && (z_3340 > 0));
																																			:pid_7:cl = (z_2484 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_13:e = 2;
																																			:pid_13:tau = 8;
																																			:pid_13:t = t_7930;
																																			:pid_13:cl = 0;
																																			:pid_18:cl = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																		}
																																		EC:<Id:9352;Ev:0;H:34;W:8235>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4463 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4463)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4463);
																																				:pid_57:z = z_4463;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4463);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4463;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4463);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4463);
																																			}
																																		}
																																	}
																																	EC:<Id:9305;Ev:1118;H:33;W:8192>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_11 , run) (:pid_11 , cp2_receiveCM_inconsistent) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4444 }) (:pid_11 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 0 ] ${ + param::Trickle.Node.z_14 
	param::Trickle.Node.z_3078 param::Trickle.Node.z_3514 param::Trickle.Node.z_3630 
	param::Trickle.Node.z_3674 param::Trickle.Node.z_3802 param::Trickle.Node.z_3930 
	param::Trickle.Node.z_86 } } @ (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + 
	z_3212 + z_3340 + z_4444)) (:pid_11 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_3124 }) 
	}
																					
														NC: ((t_3124 < 4) && (0 <= 
	(t_3124 + -2)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_3124 < 4) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && 
	(t_5886 < 4) && (t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_3124 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 
	<= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= 
	(t_6315 + -2)) && (0 <= (t_6579 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:z = z_4444;
																																			:pid_6:seq_buff[0] = 1;
																																			:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:localPC = ((t_229 < 4) && (t_3124 < 4) && (t_4 < 4) && (t_5886 < 4) && (t_6073 < 8) && (0 <= (t_229 + -2)) && (0 <= (t_3124 + -2)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)));
																																			:pid_6:localPtC = (((z_3196 + z_3212) == 4) && (z_172 == t_4) && (z_2484 == t_229) && (z_3196 == t_5886) && (z_3340 == t_6073) && ((z_172 + z_280) < 4) && ((z_2484 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444) < 4) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444)) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ((z_3196 + z_3212) > t_5886) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0) && (z_3112 > 0) && (z_3196 > 0) && (z_3212 > 0) && (z_3340 > 0));
																																			:pid_6:timeEmit = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86);
																																			:pid_7:i = 2;
																																			:pid_7:t = t_3124;
																																			:pid_7:cl = 0;
																																			:pid_13:cl = (z_3340 + z_4444);
																																			:pid_18:cl = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																		}
																																		BUFFER{
																																			:pid_6:bufferNode:<FIFO>#0{ }
																																		}
																																		EC:<Id:9361;Ev:0;H:34;W:8243>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4467 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4467)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4467);
																																				:pid_57:z = z_4467;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4467);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4467;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4467);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4467);
																																			}
																																		}
																																	}
																																	EC:<Id:9306;Ev:1119;H:33;W:8193>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_11 , run) (:pid_11 , cp_resetTau) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4444 }) (:pid_11 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3123 }) }
																					
														NC: ((t_3123 < 8) && (0 <= 
	(t_3123 + -4)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_3123 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && 
	(t_5886 < 4) && (t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_3123 + -4)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 
	<= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= 
	(t_6315 + -2)) && (0 <= (t_6579 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:z = z_4444;
																																			:pid_6:localTime = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																			:pid_6:localPC = ((t_229 < 4) && (t_3123 < 8) && (t_4 < 4) && (t_5886 < 4) && (t_6073 < 8) && (0 <= (t_229 + -2)) && (0 <= (t_3123 + -4)) && (0 <= (t_4 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)));
																																			:pid_6:localPtC = (((z_2484 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444) == 4) && ((z_3196 + z_3212) == 4) && (z_172 == t_4) && (z_2484 == t_229) && (z_3196 == t_5886) && (z_3340 == t_6073) && ((z_172 + z_280) < 4) && ((z_14 + z_86) <= (z_0 + z_172 + z_280)) && ((z_2484 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444) > t_229) && ((z_3196 + z_3212) > t_5886) && ($delta#initial > 0) && (z_0 > 0) && (z_172 > 0) && (z_2484 > 0) && (z_280 > 0) && (z_3112 > 0) && (z_3196 > 0) && (z_3212 > 0) && (z_3340 > 0));
																																			:pid_7:e = 1;
																																			:pid_7:tau = 8;
																																			:pid_7:t = t_3123;
																																			:pid_7:cl = 0;
																																			:pid_13:cl = (z_3340 + z_4444);
																																			:pid_18:cl = (z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340 + z_4444);
																																		}
																																		EC:<Id:9371;Ev:0;H:34;W:8252>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4471 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4471)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4471);
																																				:pid_57:z = z_4471;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4471);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4471;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4471);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4471);
																																			}
																																		}
																																	}
																																	EC:<Id:9307;Ev:1120;H:33;W:8194>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_37:dp1 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_23 , run) 
	(:pid_35 , run) (:pid_36 , run) (:pid_36 , dp_init) }
																					
														TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4445 }) (:pid_36 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7932 
	}) }
																					
														NC: ((t_7932 < 4) && (0 <= 
	(t_7932 + -2)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && 
	(t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (t_7932 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 
	<= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= 
	(t_6579 + -2)) && (0 <= (t_7932 + -2)))
																																		DATA{
																																			:pid_23:$time = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_4445 + z_645 + z_997);
																																			:pid_23:z = z_4445;
																																			:pid_23:localTime = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_4445 + z_645 + z_997);
																																			:pid_23:localPC = ((t_1948 < 4) && (t_2777 < 4) && (t_2960 < 4) && (t_514 < 4) && (t_758 < 4) && (t_6315 < 4) && (t_7932 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_2777 + -2)) && (0 <= (t_2960 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_6315 + -2)) && (0 <= (t_7932 + -2)));
																																			:pid_23:localPtC = (((z_3357 + z_3485 + z_3773 + z_4085) < t_1948) && ((z_3485 + z_3773) < t_6315) && (z_2617 < t_758) && (z_3485 < t_6315) && (z_4301 < t_2777) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_2617 + z_3357 + z_3485 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997)) && ((z_1887 + z_2043 + z_3967 + z_4039) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997)) && ((z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_645 + z_997)) && ($delta#initial > 0) && (z_2617 > 0) && (z_3357 > 0) && (z_3485 > 0) && (z_3773 > 0) && (z_4085 > 0) && (z_4301 > 0) && (z_645 > 0) && (z_997 > 0));
																																			:pid_24:cl = z_4445;
																																			:pid_30:cl = (z_3485 + z_3773 + z_4085 + z_4301 + z_4445);
																																			:pid_35:k = 2;
																																			:pid_35:c = 0;
																																			:pid_35:e = 0;
																																			:pid_35:tau = 4;
																																			:pid_35:tau_l = 4;
																																			:pid_35:tau_h = 8;
																																			:pid_35:t = t_7932;
																																			:pid_35:cl = 0;
																																		}
																																		EC:<Id:9380;Ev:0;H:34;W:8260>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_37:dp1 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4475 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4475)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4475);
																																				:pid_57:z = z_4475;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4475);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4475;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4475);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4475);
																																			}
																																		}
																																	}
																																	EC:<Id:9308;Ev:1121;H:33;W:8195>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_28:cp2 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_23 , run) 
	(:pid_24 , run) (:pid_27 , run) (:pid_27 , cp_sendCM) }
																					
														TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4445 }) (:pid_27 , ${ output 
	inst::Trickle.Node.ControlMsg [ 1 , 0 ] ${ + param::Trickle.Node.z_2617 
	param::Trickle.Node.z_3357 param::Trickle.Node.z_3485 param::Trickle.Node.z_3773 
	param::Trickle.Node.z_4085 param::Trickle.Node.z_4301 param::Trickle.Node.z_4445 
	param::Trickle.Node.z_645 param::Trickle.Node.z_997 } } @ (z_2617 + z_3357 + 
	z_3485 + z_3773 + z_4085 + z_4301 + z_4445 + z_645 + z_997)) }
																																		DATA{
																																			:pid_23:$time = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_4445 + z_645 + z_997);
																																			:pid_23:z = z_4445;
																																			:pid_23:localTime = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_4445 + z_645 + z_997);
																																			:pid_23:localPC = ((t_1948 < 4) && (t_2777 < 4) && (t_2960 < 4) && (t_514 < 4) && (t_758 < 4) && (t_6315 < 4) && (0 <= (t_1948 + -2)) && (0 <= (t_2777 + -2)) && (0 <= (t_2960 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 <= (t_6315 + -2)));
																																			:pid_23:localPtC = ((z_4445 == t_2960) && ((z_3357 + z_3485 + z_3773 + z_4085) < t_1948) && ((z_3485 + z_3773) < t_6315) && (z_2617 < t_758) && (z_3485 < t_6315) && (z_4301 < t_2777) && (z_997 < t_514) && ((z_0 + z_172) <= (z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_2617 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_2617 + z_3357 + z_3485 + z_645 + z_997)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_645 + z_997)) && ((z_1887 + z_2043 + z_3967 + z_4039) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_645 + z_997)) && ((z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219) <= (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_645 + z_997)) && ($delta#initial > 0) && (z_2617 > 0) && (z_3357 > 0) && (z_3485 > 0) && (z_3773 > 0) && (z_4085 > 0) && (z_4301 > 0) && (z_645 > 0) && (z_997 > 0));
																																			:pid_24:cl = z_4445;
																																			:pid_30:cl = (z_3485 + z_3773 + z_4085 + z_4301 + z_4445);
																																			:pid_35:cl = (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_4445 + z_645 + z_997);
																																		}
																																		BUFFER{
																																			:pid_40:bufferNode:<FIFO>#0{
																																				:pid_23:ControlMsg([ 1 , 0 ] , (z_2617 + z_3357 + z_3485 + z_3773 + z_4085 + z_4301 + z_4445 + z_645 + z_997));
																																			}
																																		}
																																		EC:<Id:9391;Ev:0;H:34;W:8270>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_28:cp2 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4479 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4479)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4479);
																																				:pid_57:z = z_4479;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4479);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4479;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4479);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4479);
																																			}
																																		}
																																	}
																																	EC:<Id:9309;Ev:1122;H:33;W:8196>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_54:dp1 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_40 , run) 
	(:pid_52 , run) (:pid_53 , run) (:pid_53 , dp_init) }
																					
														TRACE: { |;| (:pid_40 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4446 }) (:pid_53 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7933 
	}) }
																					
														NC: ((t_7933 < 4) && (0 <= 
	(t_7933 + -2)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && 
	(t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (t_7933 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 
	<= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= 
	(t_6579 + -2)) && (0 <= (t_7933 + -2)))
																																		DATA{
																																			:pid_40:$time = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_4446 + z_86);
																																			:pid_40:z = z_4446;
																																			:pid_40:localTime = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_4446 + z_86);
																																			:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (t_2572 < 4) && (t_6579 < 4) && (t_7933 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_6579 + -2)) && (0 <= (t_7933 + -2)));
																																			:pid_40:localPtC = (((z_3674 + z_3802 + z_3930) == t_2572) && (z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_3514 + z_3630) < t_2252) && ((z_3630 + z_3674) < t_6579) && ((z_3630 + z_3674 + z_3802) < t_6579) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_14 + z_3078 + z_3514 + z_3630 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86)) && ($delta#initial > 0) && (z_14 > 0) && (z_3078 > 0) && (z_3514 > 0) && (z_3630 > 0) && (z_3674 > 0) && (z_3802 > 0) && (z_3930 > 0) && (z_86 > 0));
																																			:pid_41:cl = (z_3674 + z_3802 + z_3930 + z_4446);
																																			:pid_47:cl = (z_3630 + z_3674 + z_3802 + z_3930 + z_4446);
																																			:pid_52:k = 2;
																																			:pid_52:c = 0;
																																			:pid_52:e = 0;
																																			:pid_52:tau = 4;
																																			:pid_52:tau_l = 4;
																																			:pid_52:tau_h = 8;
																																			:pid_52:t = t_7933;
																																			:pid_52:cl = 0;
																																		}
																																		EC:<Id:9400;Ev:0;H:34;W:8278>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_54:dp1 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4483 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4483)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4483);
																																				:pid_57:z = z_4483;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4483);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4483;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4483);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4483);
																																			}
																																		}
																																	}
																																	EC:<Id:9310;Ev:1123;H:33;W:8197>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_40 , run) 
	(:pid_41 , run) (:pid_45 , run) (:pid_45 , cp_resetTau) }
																					
														TRACE: { |;| (:pid_40 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4446 }) (:pid_45 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3125 }) }
																					
														NC: ((t_3125 < 8) && (0 <= 
	(t_3125 + -4)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_3125 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && 
	(t_5886 < 4) && (t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_3125 + -4)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 
	<= (t_758 + -2)) && (0 <= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= 
	(t_6315 + -2)) && (0 <= (t_6579 + -2)))
																																		DATA{
																																			:pid_40:$time = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_4446 + z_86);
																																			:pid_40:z = z_4446;
																																			:pid_40:localTime = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_4446 + z_86);
																																			:pid_40:localPC = ((t_17 < 4) && (t_2252 < 4) && (t_2572 < 4) && (t_3125 < 8) && (t_6579 < 4) && (0 <= (t_17 + -2)) && (0 <= (t_2252 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_3125 + -4)) && (0 <= (t_6579 + -2)));
																																			:pid_40:localPtC = (((z_3674 + z_3802 + z_3930) == t_2572) && ((z_3674 + z_3802 + z_3930 + z_4446) == 4) && (z_86 == t_17) && ((z_3078 + z_86) < 4) && ((z_3514 + z_3630) < t_2252) && ((z_3630 + z_3674) < t_6579) && ((z_3630 + z_3674 + z_3802) < t_6579) && ((z_0 + z_172) <= (z_14 + z_3078 + z_86)) && ((z_0 + z_172 + z_2484 + z_280) <= (z_14 + z_3078 + z_3514 + z_3630 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_86)) && ((z_0 + z_172 + z_2484 + z_280 + z_3112 + z_3196 + z_3212 + z_3340) <= (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_86)) && ((z_3674 + z_3802 + z_3930 + z_4446) > t_2572) && ($delta#initial > 0) && (z_14 > 0) && (z_3078 > 0) && (z_3514 > 0) && (z_3630 > 0) && (z_3674 > 0) && (z_3802 > 0) && (z_3930 > 0) && (z_86 > 0));
																																			:pid_41:e = 1;
																																			:pid_41:tau = 8;
																																			:pid_41:t = t_3125;
																																			:pid_41:cl = 0;
																																			:pid_47:cl = (z_3630 + z_3674 + z_3802 + z_3930 + z_4446);
																																			:pid_52:cl = (z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_4446 + z_86);
																																		}
																																		EC:<Id:9410;Ev:0;H:34;W:8287>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4487 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4487)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4487);
																																				:pid_57:z = z_4487;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4487);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4487;
																																				:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4487);
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4487);
																																			}
																																		}
																																	}
																																	EC:<Id:9311;Ev:1124;H:33;W:8198>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_66:dp1 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_57 , run) 
	(:pid_64 , run) (:pid_65 , run) (:pid_65 , dp_init) }
																					
														TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4447 }) (:pid_65 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7934 
	}) }
																					
														NC: ((t_7934 < 4) && (0 <= 
	(t_7934 + -2)))
																																		PC: ((t_1342 < 4) && (t_17 < 4) && (t_1948 < 4) && (t_2252 < 4) && (t_229 < 4) && 
	(t_2572 < 4) && (t_2712 < 4) && (t_2777 < 4) && (t_2841 < 8) && (t_2960 < 4) && 
	(t_2998 < 8) && (t_4 < 4) && (t_514 < 4) && (t_758 < 4) && (t_5886 < 4) && 
	(t_6073 < 8) && (t_6315 < 4) && (t_6579 < 4) && (t_7934 < 4) && (0 <= (t_1342 + 
	-2)) && (0 <= (t_17 + -2)) && (0 <= (t_1948 + -2)) && (0 <= (t_2252 + -2)) && (0 
	<= (t_229 + -2)) && (0 <= (t_2572 + -2)) && (0 <= (t_2712 + -2)) && (0 <= 
	(t_2777 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2960 + -2)) && (0 <= (t_2998 
	+ -4)) && (0 <= (t_4 + -2)) && (0 <= (t_514 + -2)) && (0 <= (t_758 + -2)) && (0 
	<= (t_5886 + -2)) && (0 <= (t_6073 + -4)) && (0 <= (t_6315 + -2)) && (0 <= 
	(t_6579 + -2)) && (0 <= (t_7934 + -2)))
																																		DATA{
																																			:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447);
																																			:pid_57:z = z_4447;
																																			:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447);
																																			:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (t_7934 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)) && (0 <= (t_7934 + -2)));
																																			:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																			:pid_58:cl = z_4447;
																																			:pid_64:k = 2;
																																			:pid_64:c = 0;
																																			:pid_64:e = 0;
																																			:pid_64:tau = 4;
																																			:pid_64:tau_l = 4;
																																			:pid_64:tau_h = 8;
																																			:pid_64:t = t_7934;
																																			:pid_64:cl = 0;
																																			:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447);
																																		}
																																		EC:<Id:9419;Ev:0;H:34;W:8295>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_66:dp1 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4491 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4447 + z_4491)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447 + z_4491);
																																				:pid_57:z = z_4491;
																																				:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447 + z_4491);
																																				:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (t_7934 < 4) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)) && (0 <= (t_7934 + -2)));
																																				:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0) && (z_4447 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = (z_4447 + z_4491);
																																				:pid_64:cl = z_4491;
																																				:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447 + z_4491);
																																			}
																																		}
																																	}
																																	EC:<Id:9312;Ev:1125;H:33;W:8199>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_57 , run) 
	(:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
														TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4447 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1887 + z_2043 + z_3967 + z_4039 + 
	z_4171 + z_4219 + z_4335 + z_4447)) }
																																		/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																		INFO{
																																			<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																		}
																																		DATA{
																																			:pid_57:$time = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447);
																																			:pid_57:z = z_4447;
																																			:pid_57:localTime = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447);
																																			:pid_57:localPC = ((t_1342 < 4) && (t_2712 < 4) && (t_2841 < 8) && (t_2998 < 8) && (0 <= (t_1342 + -2)) && (0 <= (t_2712 + -2)) && (0 <= (t_2841 + -4)) && (0 <= (t_2998 + -4)));
																																			:pid_57:localPtC = (((z_4039 + z_4171) == 4) && ((z_4219 + z_4335) == 8) && (z_4039 == t_2712) && (z_4219 == t_2841) && ((z_2043 + z_3967) < t_1342) && (z_2043 < t_1342) && ((z_14 + z_3078 + z_3514 + z_3630 + z_3674 + z_3802 + z_3930 + z_86) <= (z_1887 + z_2043 + z_3967)) && ((z_14 + z_86) <= (z_1887 + z_2043)) && ((z_4039 + z_4171) > t_2712) && ((z_4219 + z_4335) > t_2841) && ($delta#initial > 0) && (z_1887 > 0) && (z_2043 > 0) && (z_3967 > 0) && (z_4039 > 0) && (z_4171 > 0) && (z_4219 > 0) && (z_4335 > 0));
																																			:pid_58:e = 2;
																																			:pid_58:cl = z_4447;
																																			:pid_64:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447);
																																			:pid_69:cl = (z_1887 + z_2043 + z_3967 + z_4039 + z_4171 + z_4219 + z_4335 + z_4447);
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		EC:<Id:7;Ev:7;H:2;W:5>{ SC: ( pid_4:o0 , ( pid_9:cp0_init , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
			EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_43 , run) (:pid_43 
	, cp_init) }
			TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_2 }) (:pid_43 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_6 }) 
	(:pid_43 , ${ output#env inst::Trickle.Node.Log 0 } @ z_2) }
			NC: ((t_6 < 4) && (0 <= (t_6 + -2)))
			PC: ((t_6 < 4) && (0 <= (t_6 + -2)))
			DATA{
				:pid_40:$time = z_2;
				:pid_40:z = z_2;
				:pid_40:localTime = z_2;
				:pid_40:localPC = ((t_6 < 4) && (0 <= (t_6 + -2)));
				:pid_40:localPtC = ($delta#initial > 0);
				:pid_41:t = t_6;
				:pid_41:cl = 0;
				:pid_47:cl = z_2;
				:pid_52:cl = z_2;
			}
			EC:<Id:33;Ev:33;H:3;W:26>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
				EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_9 , run) (:pid_9 
	, cp_init) }
				TRACE: { |;| (:pid_6 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_20 }) (:pid_9 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_22 }) 
	(:pid_9 , ${ output#env inst::Trickle.Node.Log 0 } @ z_20) }
				NC: ((t_22 < 4) && (0 <= (t_22 + -2)))
				PC: ((t_22 < 4) && (t_6 < 4) && (0 <= (t_22 + -2)) && (0 <= (t_6 + -2)))
				DATA{
					:pid_6:mydp_run[0] = false;
					:pid_6:mydp_run[1] = false;
					:pid_6:$time = z_20;
					:pid_6:z = z_20;
					:pid_6:coverageProp = true;
					:pid_6:localTime = z_20;
					:pid_6:localPC = ((t_22 < 4) && (0 <= (t_22 + -2)));
					:pid_6:localPtC = ($delta#initial > 0);
					:pid_7:t = t_22;
					:pid_7:cl = 0;
					:pid_13:cl = z_20;
					:pid_18:cl = z_20;
				}
				EC:<Id:177;Ev:49;H:4;W:144>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
					EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) 
	(:pid_44 , cp_sendCM) }
					TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_126 }) (:pid_44 , ${ output inst::Trickle.Node.ControlMsg 
	[ 0 , 0 ] ${ + param::Trickle.Node.z_126 param::Trickle.Node.z_2 } } @ (z_126 + 
	z_2)) }
					/*FLAGS{ COVERAGE-ELEMENT }*/
					INFO{
						<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#1->inst::Trickle.n3->ControlMsg" as trace="tpid#1->inst::Trickle.n3->ControlMsg">
					}
					DATA{
						:pid_40:$time = (z_126 + z_2);
						:pid_40:z = z_126;
						:pid_40:localTime = (z_126 + z_2);
						:pid_40:localPC = ((t_6 < 4) && (0 <= (t_6 + -2)));
						:pid_40:localPtC = ((z_126 == t_6) && ($delta#initial > 0) && (z_2 > 0));
						:pid_41:cl = z_126;
						:pid_47:cl = (z_126 + z_2);
						:pid_52:cl = (z_126 + z_2);
					}
					BUFFER{
						:pid_6:bufferNode:<FIFO>#0{
							:pid_40:ControlMsg([ 0 , 0 ] , (z_126 + z_2));
						}
						:pid_57:bufferNode:<FIFO>#0{
							:pid_40:ControlMsg([ 0 , 0 ] , (z_126 + z_2));
						}
					}
					EC:<Id:267;Ev:95;H:5;W:218>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
						EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_10 , run) 
	(:pid_10 , cp_sendCM) }
						TRACE: { |;| (:pid_6 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_188 }) (:pid_10 , ${ output inst::Trickle.Node.ControlMsg 
	[ 1 , 1 ] ${ + param::Trickle.Node.z_188 param::Trickle.Node.z_20 } } @ (z_188 + 
	z_20)) }
						DATA{
							:pid_6:$time = (z_188 + z_20);
							:pid_6:z = z_188;
							:pid_6:localTime = (z_188 + z_20);
							:pid_6:localPC = ((t_22 < 4) && (0 <= (t_22 + -2)));
							:pid_6:localPtC = ((z_188 == t_22) && ($delta#initial > 0) && (z_20 > 0));
							:pid_7:cl = z_188;
							:pid_13:cl = (z_188 + z_20);
							:pid_18:cl = (z_188 + z_20);
						}
						BUFFER{
							:pid_23:bufferNode:<FIFO>#0{
								:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20));
							}
							:pid_40:bufferNode:<FIFO>#0{
								:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20));
							}
						}
						EC:<Id:546;Ev:176;H:6;W:218>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
							EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_11 , 
	run) (:pid_11 , cp2_receiveCM_inconsistent) }
							TRACE: { |;| (:pid_6 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_372 }) (:pid_11 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_126 
	param::Trickle.Node.z_2 } } @ (z_188 + z_20 + z_372)) (:pid_11 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_306 }) }
							/*FLAGS{ COVERAGE-ELEMENT }*/
							INFO{
								<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#2->inst::Trickle.n1->ControlMsg" as trace="tpid#2->inst::Trickle.n1->ControlMsg">
							}
							NC: ((t_306 < 4) && (0 <= (t_306 + -2)))
							PC: ((t_22 < 4) && (t_306 < 4) && (t_6 < 4) && (0 <= (t_22 + -2)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_6 + -2)))
							DATA{
								:pid_6:mydp_run[0] = true;
								:pid_6:mydp_run[1] = true;
								:pid_6:$time = (z_188 + z_20 + z_372);
								:pid_6:z = z_372;
								:pid_6:seq_buff[0] = 0;
								:pid_6:seq_buff[1] = 0;
								:pid_6:localTime = (z_188 + z_20 + z_372);
								:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)));
								:pid_6:localPtC = ((z_188 == t_22) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0));
								:pid_6:timeEmit = (z_126 + z_2);
								:pid_7:c = 0;
								:pid_7:e = 0;
								:pid_7:i = 2;
								:pid_7:t = t_306;
								:pid_7:consistent = false;
								:pid_7:cl = 0;
								:pid_13:cl = (z_188 + z_20 + z_372);
								:pid_18:cl = (z_188 + z_20 + z_372);
							}
							BUFFER{
								:pid_6:bufferNode:<FIFO>#0{ }
							}
							EC:<Id:1056;Ev:333;H:7;W:880>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
								EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_26 , run) (:pid_26 , cp_init) }
								TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_697 }) (:pid_26 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_549 }) 
	(:pid_26 , ${ output#env inst::Trickle.Node.Log 0 } @ z_697) }
								NC: ((t_549 < 4) && (0 <= (t_549 + -2)))
								PC: ((t_22 < 4) && (t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (0 <= (t_22 + -2)) && 
	(0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)))
								DATA{
									:pid_23:$time = z_697;
									:pid_23:z = z_697;
									:pid_23:localTime = z_697;
									:pid_23:localPC = ((t_549 < 4) && (0 <= (t_549 + -2)));
									:pid_23:localPtC = ($delta#initial > 0);
									:pid_24:t = t_549;
									:pid_24:cl = 0;
									:pid_30:cl = z_697;
									:pid_35:cl = z_697;
								}
								EC:<Id:2102;Ev:478;H:8;W:1769>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
									EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
									TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_1325 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_188 
	param::Trickle.Node.z_20 } } @ (z_1325 + z_697)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_981 }) }
									/*FLAGS{ COVERAGE-ELEMENT }*/
									INFO{
										<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#3->inst::Trickle.n2->ControlMsg" as trace="tpid#3->inst::Trickle.n2->ControlMsg">
									}
									NC: ((t_981 < 4) && (0 <= (t_981 + -2)))
									PC: ((t_22 < 4) && (t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (0 <= 
	(t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) 
	&& (0 <= (t_981 + -2)))
									DATA{
										:pid_23:mydp_run[0] = true;
										:pid_23:mydp_run[1] = true;
										:pid_23:$time = (z_1325 + z_697);
										:pid_23:z = z_1325;
										:pid_23:seq_buff[0] = 1;
										:pid_23:seq_buff[1] = 1;
										:pid_23:localTime = (z_1325 + z_697);
										:pid_23:localPC = ((t_549 < 4) && (t_981 < 4) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)));
										:pid_23:localPtC = ((z_1325 < t_549) && ((z_188 + z_20) <= (z_1325 + z_697)) && ($delta#initial > 0) && (z_697 > 0));
										:pid_23:timeEmit = (z_188 + z_20);
										:pid_24:c = 0;
										:pid_24:e = 0;
										:pid_24:i = 2;
										:pid_24:t = t_981;
										:pid_24:consistent = false;
										:pid_24:cl = 0;
										:pid_30:cl = (z_1325 + z_697);
										:pid_35:cl = (z_1325 + z_697);
									}
									BUFFER{
										:pid_23:bufferNode:<FIFO>#0{ }
									}
									EC:<Id:3107;Ev:557;H:9;W:2629>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
										EXE: { |;| (:pid_57 , run) (:pid_58 , 
	run) (:pid_60 , run) (:pid_60 , cp_init) }
										TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_1907 }) (:pid_60 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_1361 }) 
	(:pid_60 , ${ output#env inst::Trickle.Node.Log 0 } @ z_1907) }
										NC: ((t_1361 < 4) && (0 <= (t_1361 + -2))
	)
										PC: ((t_1361 < 4) && (t_22 < 4) && (t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 
	< 4) && (0 <= (t_1361 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 
	<= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)))
										DATA{
											:pid_57:$time = z_1907;
											:pid_57:z = z_1907;
											:pid_57:localTime = z_1907;
											:pid_57:localPC = ((t_1361 < 4) && (0 <= (t_1361 + -2)));
											:pid_57:localPtC = ($delta#initial > 0);
											:pid_58:t = t_1361;
											:pid_58:cl = 0;
											:pid_64:cl = z_1907;
											:pid_69:cl = z_1907;
										}
										EC:<Id:3819;Ev:628;H:10;W:3262>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
											EXE: { |;| (:pid_57 , run) (:pid_58 
	, run) (:pid_61 , run) (:pid_61 , cp1_receiveCM_consistent) }
											TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_2223 }) (:pid_61 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_126 
	param::Trickle.Node.z_2 } } @ (z_1907 + z_2223)) }
											/*FLAGS{ COVERAGE-ELEMENT }*/
											INFO{
												<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#4->inst::Trickle.n4->ControlMsg" as trace="tpid#4->inst::Trickle.n4->ControlMsg">
											}
											DATA{
												:pid_57:$time = (z_1907 + z_2223);
												:pid_57:z = z_2223;
												:pid_57:seq_buff[0] = 0;
												:pid_57:seq_buff[1] = 0;
												:pid_57:localTime = (z_1907 + z_2223);
												:pid_57:localPC = ((t_1361 < 4) && (0 <= (t_1361 + -2)));
												:pid_57:localPtC = ((z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ($delta#initial > 0) && (z_1907 > 0));
												:pid_57:timeEmit = (z_126 + z_2);
												:pid_58:c = 1;
												:pid_58:i = 2;
												:pid_58:consistent = true;
												:pid_58:cl = z_2223;
												:pid_64:cl = (z_1907 + z_2223);
												:pid_69:cl = (z_1907 + z_2223);
											}
											BUFFER{
												:pid_57:bufferNode:<FIFO>#0{ }
											}
											EC:<Id:4454;Ev:701;H:11;W:3826>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
												EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_10 , run) (:pid_10 , cp_sendCM) }
												TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_2504 }) (:pid_10 , ${ output 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_188 
	param::Trickle.Node.z_20 param::Trickle.Node.z_2504 param::Trickle.Node.z_372 } }
	 @ (z_188 + z_20 + z_2504 + z_372)) }
												/*FLAGS{ COVERAGE-ELEMENT }*/
												INFO{
													<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#5->inst::Trickle.n1->ControlMsg" as trace="tpid#5->inst::Trickle.n1->ControlMsg">
												}
												DATA{
													:pid_6:$time = (z_188 + z_20 + z_2504 + z_372);
													:pid_6:z = z_2504;
													:pid_6:localTime = (z_188 + z_20 + z_2504 + z_372);
													:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)));
													:pid_6:localPtC = ((z_188 == t_22) && (z_2504 == t_306) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_372 > 0));
													:pid_7:cl = z_2504;
													:pid_13:cl = (z_188 + z_20 + z_2504 + z_372);
													:pid_18:cl = (z_188 + z_20 + z_2504 + z_372);
												}
												BUFFER{
													:pid_23:bufferNode:<FIFO>#0{
														:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20 + z_2504 + z_372));
													}
													:pid_40:bufferNode:<FIFO>#0{
														:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20));
														:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20 + z_2504 + z_372));
													}
												}
												EC:<Id:5115;Ev:772;H:12;W:4414>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
													EXE: { |;| (:pid_23 , run) 
	(:pid_24 , run) (:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
													TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_2797 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_188 
	param::Trickle.Node.z_20 param::Trickle.Node.z_2504 param::Trickle.Node.z_372 } }
	 @ (z_1325 + z_2797 + z_697)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2067 }) 
	}
													/*FLAGS{ COVERAGE-ELEMENT }*/
													INFO{
														<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#6->inst::Trickle.n2->ControlMsg" as trace="tpid#6->inst::Trickle.n2->ControlMsg">
													}
													NC: ((t_2067 < 4) && (0 <= 
	(t_2067 + -2)))
													PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_306 < 4) && (t_549 < 4) && 
	(t_6 < 4) && (t_981 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2067 + -2)) && (0 
	<= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)
	) && (0 <= (t_981 + -2)))
													DATA{
														:pid_23:$time = (z_1325 + z_2797 + z_697);
														:pid_23:z = z_2797;
														:pid_23:localTime = (z_1325 + z_2797 + z_697);
														:pid_23:localPC = ((t_2067 < 4) && (t_549 < 4) && (t_981 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)));
														:pid_23:localPtC = ((z_1325 < t_549) && (z_2797 < t_981) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_697 > 0));
														:pid_23:timeEmit = (z_188 + z_20 + z_2504 + z_372);
														:pid_24:i = 2;
														:pid_24:t = t_2067;
														:pid_30:cl = (z_1325 + z_2797 + z_697);
														:pid_35:cl = (z_1325 + z_2797 + z_697);
													}
													BUFFER{
														:pid_23:bufferNode:<FIFO>#0{ }
													}
													EC:<Id:5757;Ev:789;H:13;W:4985>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
														EXE: { |;| (:pid_40 , 
	run) (:pid_41 , run) (:pid_45 , run) (:pid_45 , cp2_receiveCM_inconsistent) }
														TRACE: { |;| (:pid_40 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3082 }) (:pid_45 , ${ 
	input inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_188 
	param::Trickle.Node.z_20 } } @ (z_126 + z_2 + z_3082)) (:pid_45 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2255 }) 
	}
														/*FLAGS{ COVERAGE-ELEMENT }*/
														INFO{
															<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#7->inst::Trickle.n3->ControlMsg" as trace="tpid#7->inst::Trickle.n3->ControlMsg">
														}
														NC: ((t_2255 < 4) && (0 
	<= (t_2255 + -2)))
														PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_306 < 4) && 
	(t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2067 
	+ -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 <= (t_306 + -2)) && 
	(0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)))
														DATA{
															:pid_40:mydp_run[0] = true;
															:pid_40:mydp_run[1] = true;
															:pid_40:$time = (z_126 + z_2 + z_3082);
															:pid_40:z = z_3082;
															:pid_40:seq_buff[0] = 1;
															:pid_40:seq_buff[1] = 1;
															:pid_40:localTime = (z_126 + z_2 + z_3082);
															:pid_40:localPC = ((t_2255 < 4) && (t_6 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_6 + -2)));
															:pid_40:localPtC = ((z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0));
															:pid_40:timeEmit = (z_188 + z_20);
															:pid_41:c = 0;
															:pid_41:e = 0;
															:pid_41:i = 2;
															:pid_41:t = t_2255;
															:pid_41:consistent = false;
															:pid_41:cl = 0;
															:pid_47:cl = (z_126 + z_2 + z_3082);
															:pid_52:cl = (z_126 + z_2 + z_3082);
														}
														BUFFER{
															:pid_40:bufferNode:<FIFO>#0{
																:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20 + z_2504 + z_372));
															}
														}
														EC:<Id:5904;Ev:802;H:14;W:5115>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
															EXE: { |;| (:pid_6 , 
	run) (:pid_13 , run) (:pid_14 , run) (:pid_14 , dp_init) }
															TRACE: { |;| (:pid_6 
	, ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3148 }) (:pid_14 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_5954 
	}) }
															/*FLAGS{ COVERAGE-ELEMENT }*/
															INFO{
																<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#8->Node.DataProcess1->dp0.dp_init" as trace="tpid#8->Node.DataProcess1->dp0.dp_init">
															}
															NC: ((t_5954 < 4) && 
	(0 <= (t_5954 + -2)))
															PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_306 < 4) && 
	(t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && (0 <= (t_1361 + -2)) 
	&& (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 <= 
	(t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) 
	&& (0 <= (t_5954 + -2)))
															DATA{
																:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_372);
																:pid_6:z = z_3148;
																:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_372);
																:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_5954 < 4) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_5954 + -2)));
																:pid_6:localPtC = ((z_188 == t_22) && (z_2504 == t_306) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_372 > 0));
																:pid_7:cl = (z_2504 + z_3148);
																:pid_13:k = 2;
																:pid_13:c = 0;
																:pid_13:e = 0;
																:pid_13:tau = 4;
																:pid_13:tau_l = 4;
																:pid_13:tau_h = 8;
																:pid_13:t = t_5954;
																:pid_13:cl = 0;
																:pid_18:cl = (z_188 + z_20 + z_2504 + z_3148 + z_372);
															}
															EC:<Id:6027;Ev:816;H:15;W:5225>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																EXE: { |;| 
	(:pid_6 , run) (:pid_13 , run) (:pid_15 , run) (:pid_15 , dp_sendDM) }
																TRACE: { |;| 
	(:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3200 }) 
	(:pid_15 , ${ output inst::Trickle.Node.DataMsg [ 1 , 1 , 0 ] ${ + 
	param::Trickle.Node.z_188 param::Trickle.Node.z_20 param::Trickle.Node.z_2504 
	param::Trickle.Node.z_3148 param::Trickle.Node.z_3200 param::Trickle.Node.z_372 }
	 } @ (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372)) }
																/*FLAGS{ COVERAGE-ELEMENT }*/
																INFO{
																	<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#9->inst::Trickle.n1->DataMsg" as trace="tpid#9->inst::Trickle.n1->DataMsg">
																}
																DATA{
																	:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372);
																	:pid_6:z = z_3200;
																	:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372);
																	:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_5954 < 4) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_5954 + -2)));
																	:pid_6:localPtC = ((z_188 == t_22) && (z_2504 == t_306) && (z_3200 == t_5954) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_3148 > 0) && (z_372 > 0));
																	:pid_7:cl = (z_2504 + z_3148 + z_3200);
																	:pid_13:cl = z_3200;
																	:pid_18:cl = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372);
																}
																BUFFER{
																	:pid_23:bufferNode:<FIFO>#0{
																		:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372));
																	}
																	:pid_40:bufferNode:<FIFO>#0{
																		:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20 + z_2504 + z_372));
																		:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372));
																	}
																}
																EC:<Id:6179;Ev:838;H:16;W:5363>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																	EXE: { |;| 
	(:pid_6 , run) (:pid_13 , run) (:pid_16 , run) (:pid_16 , dp_resetTau) }
																	TRACE: { |;| 
	(:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3256 }) 
	(:pid_16 , ${ newfresh inst::Trickle.Node.DataProcess.t 
	param::Trickle.Node.DataProcess.t_6146 }) }
																	/*FLAGS{ COVERAGE-ELEMENT }*/
																	INFO{
																		<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#10->Node.DataProcess1->dp2.dp_resetTau" as trace="tpid#10->Node.DataProcess1->dp2.dp_resetTau">
																	}
																	NC: ((t_6146 
	< 8) && (0 <= (t_6146 + -4)))
																	PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_306 < 4) && 
	(t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && (t_6146 < 8) && (0 <= 
	(t_1361 + -2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + 
	-2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= 
	(t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)))
																	DATA{
																		:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_372);
																		:pid_6:z = z_3256;
																		:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_372);
																		:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_5954 < 4) && (t_6146 < 8) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)));
																		:pid_6:localPtC = (((z_3200 + z_3256) == 4) && (z_188 == t_22) && (z_2504 == t_306) && (z_3200 == t_5954) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ((z_3200 + z_3256) > t_5954) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_3148 > 0) && (z_3200 > 0) && (z_372 > 0));
																		:pid_7:cl = (z_2504 + z_3148 + z_3200 + z_3256);
																		:pid_13:e = 1;
																		:pid_13:tau = 8;
																		:pid_13:t = t_6146;
																		:pid_13:cl = 0;
																		:pid_18:cl = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_372);
																	}
																	EC:<Id:6417;Ev:852;H:17;W:5579>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																		EXE: { 
	|;| (:pid_6 , run) (:pid_13 , run) (:pid_15 , run) (:pid_15 , dp_sendDM) }
																		TRACE: { 
	|;| (:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3344 }) 
	(:pid_15 , ${ output inst::Trickle.Node.DataMsg [ 1 , 1 , 0 ] ${ + 
	param::Trickle.Node.z_188 param::Trickle.Node.z_20 param::Trickle.Node.z_2504 
	param::Trickle.Node.z_3148 param::Trickle.Node.z_3200 param::Trickle.Node.z_3256 
	param::Trickle.Node.z_3344 param::Trickle.Node.z_372 } } @ (z_188 + z_20 + 
	z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372)) }
																		/*FLAGS{ COVERAGE-ELEMENT }*/
																		INFO{
																			<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#11->inst::Trickle.n1->DataMsg" as trace="tpid#11->inst::Trickle.n1->DataMsg">
																		}
																		DATA{
																			:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372);
																			:pid_6:z = z_3344;
																			:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372);
																			:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_5954 < 4) && (t_6146 < 8) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)));
																			:pid_6:localPtC = (((z_3200 + z_3256) == 4) && (z_188 == t_22) && (z_2504 == t_306) && (z_3200 == t_5954) && (z_3344 == t_6146) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ((z_3200 + z_3256) > t_5954) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_3148 > 0) && (z_3200 > 0) && (z_3256 > 0) && (z_372 > 0));
																			:pid_7:cl = (z_2504 + z_3148 + z_3200 + z_3256 + z_3344);
																			:pid_13:cl = z_3344;
																			:pid_18:cl = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372);
																		}
																		BUFFER{
																			:pid_23:bufferNode:<FIFO>#0{
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372));
																			}
																			:pid_40:bufferNode:<FIFO>#0{
																				:pid_6:ControlMsg([ 1 , 1 ] , (z_188 + z_20 + z_2504 + z_372));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372));
																			}
																		}
																		EC:<Id:6573;Ev:874;H:18;W:5721>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																			EXE: 
	{ |;| (:pid_23 , run) (:pid_30 , run) (:pid_31 , run) (:pid_31 , dp_init) }
																			
	TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3401 }) (:pid_31 , ${ newfresh 
	inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_6389 }) }
																			/*FLAGS{ COVERAGE-ELEMENT }*/
																			INFO{
																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#12->Node.DataProcess1->dp0.dp_init" as trace="tpid#12->Node.DataProcess1->dp0.dp_init">
																			}
																			NC: 
	((t_6389 < 4) && (0 <= (t_6389 + -2)))
																			PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_306 < 4) && 
	(t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && (t_6146 < 8) && 
	(t_6389 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)
	) && (0 <= (t_2255 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= 
	(t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)
	) && (0 <= (t_6389 + -2)))
																			DATA{
																				:pid_23:$time = (z_1325 + z_2797 + z_3401 + z_697);
																				:pid_23:z = z_3401;
																				:pid_23:localTime = (z_1325 + z_2797 + z_3401 + z_697);
																				:pid_23:localPC = ((t_2067 < 4) && (t_549 < 4) && (t_981 < 4) && (t_6389 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_6389 + -2)));
																				:pid_23:localPtC = ((z_1325 < t_549) && (z_2797 < t_981) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_2797 > 0) && (z_697 > 0));
																				:pid_24:cl = z_3401;
																				:pid_30:k = 2;
																				:pid_30:c = 0;
																				:pid_30:e = 0;
																				:pid_30:tau = 4;
																				:pid_30:tau_l = 4;
																				:pid_30:tau_h = 8;
																				:pid_30:t = t_6389;
																				:pid_30:cl = 0;
																				:pid_35:cl = (z_1325 + z_2797 + z_3401 + z_697);
																			}
																			EC:<Id:6813;Ev:891;H:19;W:5939>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																				
	EXE: { |;| (:pid_23 , run) (:pid_30 , run) (:pid_32 , run) (:pid_32 , 
	dp1_receiveDM_consistent) }
																				
	TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3489 }) (:pid_32 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_188 param::Trickle.Node.z_20 
	param::Trickle.Node.z_2504 param::Trickle.Node.z_3148 param::Trickle.Node.z_3200 
	param::Trickle.Node.z_372 } } @ (z_1325 + z_2797 + z_3401 + z_3489 + z_697)) }
																				/*FLAGS{ COVERAGE-ELEMENT }*/
																				INFO{
																					<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#13->inst::Trickle.n2->DataMsg" as trace="tpid#13->inst::Trickle.n2->DataMsg">
																				}
																				DATA{
																					:pid_23:my_buff[0].seq = 1;
																					:pid_23:my_buff[0].fragment = FRAGMENT_0;
																					:pid_23:my_buff[0].offset = 0;
																					:pid_23:firmware[0] = FRAGMENT_0;
																					:pid_23:myseq_buff[0] = 1;
																					:pid_23:$time = (z_1325 + z_2797 + z_3401 + z_3489 + z_697);
																					:pid_23:z = z_3489;
																					:pid_23:localTime = (z_1325 + z_2797 + z_3401 + z_3489 + z_697);
																					:pid_23:localPC = ((t_2067 < 4) && (t_549 < 4) && (t_981 < 4) && (t_6389 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_6389 + -2)));
																					:pid_23:localPtC = ((z_1325 < t_549) && (z_2797 < t_981) && (z_3489 < t_6389) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_2797 > 0) && (z_3401 > 0) && (z_697 > 0));
																					:pid_23:timeEmit = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372);
																					:pid_24:cl = (z_3401 + z_3489);
																					:pid_30:c = 1;
																					:pid_30:consistent = true;
																					:pid_30:cl = z_3489;
																					:pid_30:d.seq = 1;
																					:pid_30:d.fragment = FRAGMENT_0;
																					:pid_30:d.offset = 0;
																					:pid_35:cl = (z_1325 + z_2797 + z_3401 + z_3489 + z_697);
																				}
																				BUFFER{
																					:pid_23:bufferNode:<FIFO>#0{
																						:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372));
																					}
																				}
																				EC:<Id:7004;Ev:910;H:20;W:6113>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
	EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_48 , run) (:pid_48 , dp_init) }
																					
	TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3558 }) (:pid_48 , ${ newfresh 
	inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_6652 }) }
																					/*FLAGS{ COVERAGE-ELEMENT }*/
																					INFO{
																						<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#14->Node.DataProcess1->dp0.dp_init" as trace="tpid#14->Node.DataProcess1->dp0.dp_init">
																					}
																					
	NC: ((t_6652 < 4) && (0 <= (t_6652 + -2)))
																					PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_306 < 4) && 
	(t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && (t_6146 < 8) && 
	(t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2067 + -2)) && 
	(0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 <= (t_306 + -2)) && (0 <= 
	(t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_5954 + -2))
	 && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 + -2)))
																					DATA{
																						:pid_40:$time = (z_126 + z_2 + z_3082 + z_3558);
																						:pid_40:z = z_3558;
																						:pid_40:localTime = (z_126 + z_2 + z_3082 + z_3558);
																						:pid_40:localPC = ((t_2255 < 4) && (t_6 < 4) && (t_6652 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6652 + -2)));
																						:pid_40:localPtC = ((z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0) && (z_3082 > 0));
																						:pid_41:cl = z_3558;
																						:pid_47:k = 2;
																						:pid_47:c = 0;
																						:pid_47:e = 0;
																						:pid_47:tau = 4;
																						:pid_47:tau_l = 4;
																						:pid_47:tau_h = 8;
																						:pid_47:t = t_6652;
																						:pid_47:cl = 0;
																						:pid_52:cl = (z_126 + z_2 + z_3082 + z_3558);
																					}
																					EC:<Id:7213;Ev:931;H:21;W:6303>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
		EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) (:pid_44 , 
	cp1_receiveCM_inconsistent) }
																					
		TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3634 }) (:pid_44 , ${ input inst::Trickle.Node.ControlMsg 
	[ 1 , 1 ] ${ + param::Trickle.Node.z_188 param::Trickle.Node.z_20 
	param::Trickle.Node.z_2504 param::Trickle.Node.z_372 } } @ (z_126 + z_2 + z_3082 
	+ z_3558 + z_3634)) (:pid_44 , ${ newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_2574 }) }
																					
		NC: ((t_2574 < 4) && (0 <= (t_2574 + -2)))
																						PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && 
	(t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + -2)) && (0 <= 
	(t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + 
	-2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= 
	(t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + 
	-2)) && (0 <= (t_6652 + -2)))
																						DATA{
																							:pid_40:$time = (z_126 + z_2 + z_3082 + z_3558 + z_3634);
																							:pid_40:z = z_3634;
																							:pid_40:localTime = (z_126 + z_2 + z_3082 + z_3558 + z_3634);
																							:pid_40:localPC = ((t_2255 < 4) && (t_2574 < 4) && (t_6 < 4) && (t_6652 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6652 + -2)));
																							:pid_40:localPtC = ((z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_3558 + z_3634) < t_2255) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634)) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0) && (z_3082 > 0) && (z_3558 > 0));
																							:pid_40:timeEmit = (z_188 + z_20 + z_2504 + z_372);
																							:pid_41:c = 0;
																							:pid_41:e = 0;
																							:pid_41:i = 2;
																							:pid_41:t = t_2574;
																							:pid_41:cl = 0;
																							:pid_47:cl = z_3634;
																							:pid_52:cl = (z_126 + z_2 + z_3082 + z_3558 + z_3634);
																						}
																						BUFFER{
																							:pid_40:bufferNode:<FIFO>#0{
																								:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372));
																								:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372));
																							}
																						}
																						EC:<Id:7440;Ev:946;H:22;W:6509>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
			EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_49 , run) (:pid_49 , 
	dp1_receiveDM_consistent) }
																					
			TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3718 }) (:pid_49 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_188 param::Trickle.Node.z_20 
	param::Trickle.Node.z_2504 param::Trickle.Node.z_3148 param::Trickle.Node.z_3200 
	param::Trickle.Node.z_372 } } @ (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718)
	) }
																							/*FLAGS{ COVERAGE-ELEMENT }*/
																							INFO{
																								<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#15->inst::Trickle.n3->DataMsg" as trace="tpid#15->inst::Trickle.n3->DataMsg">
																							}
																							DATA{
																								:pid_40:my_buff[0].seq = 1;
																								:pid_40:my_buff[0].fragment = FRAGMENT_0;
																								:pid_40:my_buff[0].offset = 0;
																								:pid_40:firmware[0] = FRAGMENT_0;
																								:pid_40:myseq_buff[0] = 1;
																								:pid_40:$time = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718);
																								:pid_40:z = z_3718;
																								:pid_40:localTime = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718);
																								:pid_40:localPC = ((t_2255 < 4) && (t_2574 < 4) && (t_6 < 4) && (t_6652 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6652 + -2)));
																								:pid_40:localPtC = ((z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_3558 + z_3634) < t_2255) && ((z_3634 + z_3718) < t_6652) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634)) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0) && (z_3082 > 0) && (z_3558 > 0) && (z_3634 > 0));
																								:pid_40:timeEmit = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372);
																								:pid_41:cl = z_3718;
																								:pid_47:c = 1;
																								:pid_47:consistent = true;
																								:pid_47:cl = (z_3634 + z_3718);
																								:pid_47:d.seq = 1;
																								:pid_47:d.fragment = FRAGMENT_0;
																								:pid_47:d.offset = 0;
																								:pid_52:cl = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718);
																							}
																							BUFFER{
																								:pid_40:bufferNode:<FIFO>#0{
																									:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372));
																								}
																							}
																							EC:<Id:7603;Ev:964;H:23;W:6657>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
				EXE: { |;| (:pid_23 , run) (:pid_30 , run) (:pid_32 , run) (:pid_32 
	, dp1_receiveDM_consistent) }
																					
				TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3777 }) (:pid_32 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_188 param::Trickle.Node.z_20 
	param::Trickle.Node.z_2504 param::Trickle.Node.z_3148 param::Trickle.Node.z_3200 
	param::Trickle.Node.z_3256 param::Trickle.Node.z_3344 param::Trickle.Node.z_372 }
	 } @ (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697)) }
																								/*FLAGS{ COVERAGE-ELEMENT }*/
																								INFO{
																									<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#16->inst::Trickle.n2->DataMsg" as trace="tpid#16->inst::Trickle.n2->DataMsg">
																								}
																								DATA{
																									:pid_23:$time = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697);
																									:pid_23:z = z_3777;
																									:pid_23:localTime = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697);
																									:pid_23:localPC = ((t_2067 < 4) && (t_549 < 4) && (t_981 < 4) && (t_6389 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_6389 + -2)));
																									:pid_23:localPtC = (((z_3489 + z_3777) < t_6389) && (z_1325 < t_549) && (z_2797 < t_981) && (z_3489 < t_6389) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_2797 > 0) && (z_3401 > 0) && (z_3489 > 0) && (z_697 > 0));
																									:pid_23:timeEmit = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372);
																									:pid_24:cl = (z_3401 + z_3489 + z_3777);
																									:pid_30:c = 2;
																									:pid_30:cl = (z_3489 + z_3777);
																									:pid_35:cl = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697);
																								}
																								BUFFER{
																									:pid_23:bufferNode:<FIFO>#0{ }
																								}
																								EC:<Id:7820;Ev:985;H:24;W:6856>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
					EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_49 , run) 
	(:pid_49 , dp1_receiveDM_consistent) }
																					
					TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3850 }) (:pid_49 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_188 param::Trickle.Node.z_20 
	param::Trickle.Node.z_2504 param::Trickle.Node.z_3148 param::Trickle.Node.z_3200 
	param::Trickle.Node.z_3256 param::Trickle.Node.z_3344 param::Trickle.Node.z_372 }
	 } @ (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850)) }
																									/*FLAGS{ COVERAGE-ELEMENT }*/
																									INFO{
																										<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#17->inst::Trickle.n3->DataMsg" as trace="tpid#17->inst::Trickle.n3->DataMsg">
																									}
																									DATA{
																										:pid_40:$time = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850);
																										:pid_40:z = z_3850;
																										:pid_40:localTime = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850);
																										:pid_40:localPC = ((t_2255 < 4) && (t_2574 < 4) && (t_6 < 4) && (t_6652 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6652 + -2)));
																										:pid_40:localPtC = ((z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_3558 + z_3634) < t_2255) && ((z_3634 + z_3718) < t_6652) && ((z_3634 + z_3718 + z_3850) < t_6652) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634)) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0) && (z_3082 > 0) && (z_3558 > 0) && (z_3634 > 0) && (z_3718 > 0));
																										:pid_40:timeEmit = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372);
																										:pid_41:cl = (z_3718 + z_3850);
																										:pid_47:c = 2;
																										:pid_47:cl = (z_3634 + z_3718 + z_3850);
																										:pid_52:cl = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850);
																									}
																									BUFFER{
																										:pid_40:bufferNode:<FIFO>#0{ }
																									}
																									EC:<Id:8066;Ev:1001;H:25;W:7081>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
						EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) 
	(:pid_44 , cp_sendCM) }
																					
						TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3934 }) (:pid_44 , ${ output inst::Trickle.Node.ControlMsg 
	[ 1 , 0 ] ${ + param::Trickle.Node.z_126 param::Trickle.Node.z_2 
	param::Trickle.Node.z_3082 param::Trickle.Node.z_3558 param::Trickle.Node.z_3634 
	param::Trickle.Node.z_3718 param::Trickle.Node.z_3850 param::Trickle.Node.z_3934 
	} } @ (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934)) }
																										/*FLAGS{ COVERAGE-ELEMENT }*/
																										INFO{
																											<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#18->inst::Trickle.n3->ControlMsg" as trace="tpid#18->inst::Trickle.n3->ControlMsg">
																										}
																										DATA{
																											:pid_40:$time = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934);
																											:pid_40:z = z_3934;
																											:pid_40:localTime = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934);
																											:pid_40:localPC = ((t_2255 < 4) && (t_2574 < 4) && (t_6 < 4) && (t_6652 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6652 + -2)));
																											:pid_40:localPtC = (((z_3718 + z_3850 + z_3934) == t_2574) && (z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_3558 + z_3634) < t_2255) && ((z_3634 + z_3718) < t_6652) && ((z_3634 + z_3718 + z_3850) < t_6652) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634)) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0) && (z_3082 > 0) && (z_3558 > 0) && (z_3634 > 0) && (z_3718 > 0) && (z_3850 > 0));
																											:pid_41:cl = (z_3718 + z_3850 + z_3934);
																											:pid_47:cl = (z_3634 + z_3718 + z_3850 + z_3934);
																											:pid_52:cl = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934);
																										}
																										BUFFER{
																											:pid_6:bufferNode:<FIFO>#0{
																												:pid_40:ControlMsg([ 1 , 0 ] , (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934));
																											}
																											:pid_57:bufferNode:<FIFO>#0{
																												:pid_40:ControlMsg([ 1 , 0 ] , (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934));
																											}
																										}
																										EC:<Id:8197;Ev:1012;H:26;W:7196>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
							EXE: { |;| (:pid_57 , run) (:pid_58 , run) (:pid_61 , 
	run) (:pid_61 , cp1_receiveCM_inconsistent) }
																					
							TRACE: { |;| (:pid_57 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3999 }) (:pid_61 , ${ input inst::Trickle.Node.ControlMsg 
	[ 1 , 0 ] ${ + param::Trickle.Node.z_126 param::Trickle.Node.z_2 
	param::Trickle.Node.z_3082 param::Trickle.Node.z_3558 param::Trickle.Node.z_3634 
	param::Trickle.Node.z_3718 param::Trickle.Node.z_3850 param::Trickle.Node.z_3934 
	} } @ (z_1907 + z_2223 + z_3999)) (:pid_61 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2725 }) 
	}
																											/*FLAGS{ COVERAGE-ELEMENT }*/
																											INFO{
																												<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#19->inst::Trickle.n4->ControlMsg" as trace="tpid#19->inst::Trickle.n4->ControlMsg">
																											}
																					
							NC: ((t_2725 < 4) && (0 <= (t_2725 + -2)))
																											PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && 
	(t_5954 < 4) && (t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 
	+ -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 
	<= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 + -2)))
																											DATA{
																												:pid_57:mydp_run[0] = true;
																												:pid_57:$time = (z_1907 + z_2223 + z_3999);
																												:pid_57:z = z_3999;
																												:pid_57:seq_buff[0] = 1;
																												:pid_57:localTime = (z_1907 + z_2223 + z_3999);
																												:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)));
																												:pid_57:localPtC = (((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0));
																												:pid_57:timeEmit = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934);
																												:pid_58:c = 0;
																												:pid_58:e = 0;
																												:pid_58:i = 2;
																												:pid_58:t = t_2725;
																												:pid_58:consistent = false;
																												:pid_58:cl = 0;
																												:pid_64:cl = (z_1907 + z_2223 + z_3999);
																												:pid_69:cl = (z_1907 + z_2223 + z_3999);
																											}
																											BUFFER{
																												:pid_57:bufferNode:<FIFO>#0{ }
																											}
																											EC:<Id:8293;Ev:1033;H:27;W:7281>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
								EXE: { |;| (:pid_57 , run) (:pid_58 , run) (:pid_61 
	, run) (:pid_61 , cp_sendCM) }
																					
								TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4043 }) (:pid_61 , ${ output 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1907 
	param::Trickle.Node.z_2223 param::Trickle.Node.z_3999 param::Trickle.Node.z_4043 
	} } @ (z_1907 + z_2223 + z_3999 + z_4043)) }
																												/*FLAGS{ COVERAGE-ELEMENT }*/
																												INFO{
																													<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#20->inst::Trickle.n4->ControlMsg" as trace="tpid#20->inst::Trickle.n4->ControlMsg">
																												}
																												DATA{
																													:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043);
																													:pid_57:z = z_4043;
																													:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043);
																													:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)));
																													:pid_57:localPtC = ((z_4043 == t_2725) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0));
																													:pid_58:cl = z_4043;
																													:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043);
																													:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043);
																												}
																												BUFFER{
																													:pid_23:bufferNode:<FIFO>#0{
																														:pid_57:ControlMsg([ 0 , 0 ] , (z_1907 + z_2223 + z_3999 + z_4043));
																													}
																												}
																												EC:<Id:8494;Ev:1045;H:28;W:7461>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
									EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
																					
									TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4125 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1907 
	param::Trickle.Node.z_2223 param::Trickle.Node.z_3999 param::Trickle.Node.z_4043 
	} } @ (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697)) (:pid_27 , 
	${ newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_2806 }) }
																													/*FLAGS{ COVERAGE-ELEMENT }*/
																													INFO{
																														<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#21->inst::Trickle.n2->ControlMsg" as trace="tpid#21->inst::Trickle.n2->ControlMsg">
																													}
																					
									NC: ((t_2806 < 4) && (0 <= (t_2806 + -2)))
																													PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_306 < 4) && (t_549 < 4) && (t_6 < 4) && 
	(t_981 < 4) && (t_5954 < 4) && (t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && 
	(0 <= (t_1361 + -2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= 
	(t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 
	+ -2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= 
	(t_6389 + -2)) && (0 <= (t_6652 + -2)))
																													DATA{
																														:pid_23:$time = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697);
																														:pid_23:z = z_4125;
																														:pid_23:seq_buff[0] = 0;
																														:pid_23:seq_buff[1] = 0;
																														:pid_23:localTime = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697);
																														:pid_23:localPC = ((t_2067 < 4) && (t_2806 < 4) && (t_549 < 4) && (t_981 < 4) && (t_6389 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_2806 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_6389 + -2)));
																														:pid_23:localPtC = (((z_3401 + z_3489 + z_3777 + z_4125) < t_2067) && ((z_3489 + z_3777) < t_6389) && (z_1325 < t_549) && (z_2797 < t_981) && (z_3489 < t_6389) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ((z_1907 + z_2223 + z_3999 + z_4043) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_2797 > 0) && (z_3401 > 0) && (z_3489 > 0) && (z_3777 > 0) && (z_697 > 0));
																														:pid_23:timeEmit = (z_1907 + z_2223 + z_3999 + z_4043);
																														:pid_24:i = 2;
																														:pid_24:t = t_2806;
																														:pid_24:cl = 0;
																														:pid_30:cl = (z_3489 + z_3777 + z_4125);
																														:pid_35:cl = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697);
																													}
																													BUFFER{
																														:pid_23:bufferNode:<FIFO>#0{ }
																													}
																													EC:<Id:8617;Ev:1066;H:29;W:7572>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
										EXE: { |;| (:pid_57 , run) (:pid_58 , run) 
	(:pid_62 , run) (:pid_62 , cp_resetTau) }
																					
										TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4175 }) (:pid_62 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2845 }) 
	}
																														/*FLAGS{ COVERAGE-ELEMENT }*/
																														INFO{
																															<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#22->Node.ControlProcess->cp2.cp_resetTau" as trace="tpid#22->Node.ControlProcess->cp2.cp_resetTau">
																														}
																					
										NC: ((t_2845 < 8) && (0 <= (t_2845 + -4)))
																														PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_306 < 4) && (t_549 < 4) && 
	(t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && (t_6146 < 8) && (t_6389 < 4) && 
	(t_6652 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)
	) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 
	<= (t_2806 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_306 + -2)) && (0 <= (t_549 
	+ -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 
	<= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 + -2)))
																														DATA{
																															:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175);
																															:pid_57:z = z_4175;
																															:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175);
																															:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)));
																															:pid_57:localPtC = (((z_4043 + z_4175) == 4) && (z_4043 == t_2725) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0));
																															:pid_58:e = 1;
																															:pid_58:tau = 8;
																															:pid_58:t = t_2845;
																															:pid_58:cl = 0;
																															:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175);
																															:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175);
																														}
																														EC:<Id:8821;Ev:1078;H:30;W:7755>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
											EXE: { |;| (:pid_57 , run) (:pid_58 , 
	run) (:pid_61 , run) (:pid_61 , cp_sendCM) }
																					
											TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4259 }) (:pid_61 , ${ output 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1907 
	param::Trickle.Node.z_2223 param::Trickle.Node.z_3999 param::Trickle.Node.z_4043 
	param::Trickle.Node.z_4175 param::Trickle.Node.z_4259 } } @ (z_1907 + z_2223 + 
	z_3999 + z_4043 + z_4175 + z_4259)) }
																															/*FLAGS{ COVERAGE-ELEMENT }*/
																															INFO{
																																<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#23->inst::Trickle.n4->ControlMsg" as trace="tpid#23->inst::Trickle.n4->ControlMsg">
																															}
																															DATA{
																																:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259);
																																:pid_57:z = z_4259;
																																:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259);
																																:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)));
																																:pid_57:localPtC = (((z_4043 + z_4175) == 4) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0));
																																:pid_58:cl = z_4259;
																																:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259);
																																:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259);
																															}
																															BUFFER{
																																:pid_23:bufferNode:<FIFO>#0{
																																	:pid_57:ControlMsg([ 0 , 0 ] , (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259));
																																}
																															}
																															EC:<Id:8935;Ev:1096;H:31;W:7857>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
												EXE: { |;| (:pid_23 , run) (:pid_24 
	, run) (:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
																					
												TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4305 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1907 
	param::Trickle.Node.z_2223 param::Trickle.Node.z_3999 param::Trickle.Node.z_4043 
	param::Trickle.Node.z_4175 param::Trickle.Node.z_4259 } } @ (z_1325 + z_2797 + 
	z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_697)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2965 }) 
	}
																																/*FLAGS{ COVERAGE-ELEMENT }*/
																																INFO{
																																	<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#24->inst::Trickle.n2->ControlMsg" as trace="tpid#24->inst::Trickle.n2->ControlMsg">
																																}
																					
												NC: ((t_2965 < 4) && (0 <= (t_2965 + 
	-2)))
																																PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_306 < 4) && 
	(t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && (t_6146 < 8) && 
	(t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2067 + -2)) && 
	(0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= 
	(t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_2965 
	+ -2)) && (0 <= (t_306 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= 
	(t_6389 + -2)) && (0 <= (t_6652 + -2)))
																																DATA{
																																	:pid_23:$time = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_697);
																																	:pid_23:z = z_4305;
																																	:pid_23:localTime = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_697);
																																	:pid_23:localPC = ((t_2067 < 4) && (t_2806 < 4) && (t_2965 < 4) && (t_549 < 4) && (t_981 < 4) && (t_6389 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_2806 + -2)) && (0 <= (t_2965 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_6389 + -2)));
																																	:pid_23:localPtC = (((z_3401 + z_3489 + z_3777 + z_4125) < t_2067) && ((z_3489 + z_3777) < t_6389) && (z_1325 < t_549) && (z_2797 < t_981) && (z_3489 < t_6389) && (z_4305 < t_2806) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ((z_1907 + z_2223 + z_3999 + z_4043) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697)) && ((z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_2797 > 0) && (z_3401 > 0) && (z_3489 > 0) && (z_3777 > 0) && (z_4125 > 0) && (z_697 > 0));
																																	:pid_23:timeEmit = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259);
																																	:pid_24:i = 2;
																																	:pid_24:t = t_2965;
																																	:pid_30:cl = (z_3489 + z_3777 + z_4125 + z_4305);
																																	:pid_35:cl = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_697);
																																}
																																BUFFER{
																																	:pid_23:bufferNode:<FIFO>#0{ }
																																}
																																EC:<Id:9131;Ev:1114;H:32;W:8035>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
													EXE: { |;| (:pid_57 , run) 
	(:pid_58 , run) (:pid_62 , run) (:pid_62 , cp_resetTau) }
																					
													TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4379 }) (:pid_62 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3048 }) }
																																	/*FLAGS{ COVERAGE-ELEMENT }*/
																																	INFO{
																																		<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#25->Node.ControlProcess->cp2.cp_resetTau" as trace="tpid#25->Node.ControlProcess->cp2.cp_resetTau">
																																	}
																					
													NC: ((t_3048 < 8) && (0 <= 
	(t_3048 + -4)))
																																	PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && 
	(t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + -2)) && (0 <= 
	(t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + 
	-2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= (t_2845 + -4)) && 
	(0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + -2)) && (0 <= 
	(t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_5954 + -2))
	 && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 + -2)))
																																	DATA{
																																		:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379);
																																		:pid_57:z = z_4379;
																																		:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379);
																																		:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																		:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0));
																																		:pid_58:e = 2;
																																		:pid_58:tau = 8;
																																		:pid_58:t = t_3048;
																																		:pid_58:cl = 0;
																																		:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379);
																																		:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379);
																																	}
																																	EC:<Id:9313;Ev:1126;H:33;W:8035>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_20:dp1 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_18 , run) (:pid_19 , run) (:pid_19 , dp_init) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4448 }) (:pid_19 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7937 
	}) }
																					
														NC: ((t_7937 < 4) && (0 <= 
	(t_7937 + -2)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && 
	(t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (t_7937 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= 
	(t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 
	+ -2)) && (0 <= (t_7937 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:z = z_4448;
																																			:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_5954 < 4) && (t_6146 < 8) && (t_7937 < 4) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_7937 + -2)));
																																			:pid_6:localPtC = (((z_3200 + z_3256) == 4) && (z_188 == t_22) && (z_2504 == t_306) && (z_3200 == t_5954) && (z_3344 == t_6146) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ((z_3200 + z_3256) > t_5954) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_3148 > 0) && (z_3200 > 0) && (z_3256 > 0) && (z_3344 > 0) && (z_372 > 0));
																																			:pid_7:cl = (z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_4448);
																																			:pid_13:cl = (z_3344 + z_4448);
																																			:pid_18:k = 2;
																																			:pid_18:c = 0;
																																			:pid_18:e = 0;
																																			:pid_18:tau = 4;
																																			:pid_18:tau_l = 4;
																																			:pid_18:tau_h = 8;
																																			:pid_18:t = t_7937;
																																			:pid_18:cl = 0;
																																		}
																																		EC:<Id:9438;Ev:0;H:34;W:8312>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_20:dp1 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4499 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4499)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4499);
																																				:pid_57:z = z_4499;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4499);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4499;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4499);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4499);
																																			}
																																		}
																																	}
																																	EC:<Id:9314;Ev:1127;H:33;W:8200>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_13 , run) (:pid_16 , run) (:pid_16 , dp_resetTau) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4448 }) (:pid_16 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7936 
	}) }
																					
														NC: ((t_7936 < 8) && (0 <= 
	(t_7936 + -4)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && 
	(t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (t_7936 < 8) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= 
	(t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 
	+ -2)) && (0 <= (t_7936 + -4)))
																																		DATA{
																																			:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:z = z_4448;
																																			:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_5954 < 4) && (t_6146 < 8) && (t_7936 < 8) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_7936 + -4)));
																																			:pid_6:localPtC = (((z_3200 + z_3256) == 4) && ((z_3344 + z_4448) == 8) && (z_188 == t_22) && (z_2504 == t_306) && (z_3200 == t_5954) && (z_3344 == t_6146) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ((z_3200 + z_3256) > t_5954) && ((z_3344 + z_4448) > t_6146) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_3148 > 0) && (z_3200 > 0) && (z_3256 > 0) && (z_3344 > 0) && (z_372 > 0));
																																			:pid_7:cl = (z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_4448);
																																			:pid_13:e = 2;
																																			:pid_13:tau = 8;
																																			:pid_13:t = t_7936;
																																			:pid_13:cl = 0;
																																			:pid_18:cl = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																		}
																																		EC:<Id:9448;Ev:0;H:34;W:8321>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4503 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4503)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4503);
																																				:pid_57:z = z_4503;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4503);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4503;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4503);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4503);
																																			}
																																		}
																																	}
																																	EC:<Id:9315;Ev:1128;H:33;W:8201>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_11 , run) (:pid_11 , cp2_receiveCM_inconsistent) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4448 }) (:pid_11 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 0 ] ${ + param::Trickle.Node.z_126 
	param::Trickle.Node.z_2 param::Trickle.Node.z_3082 param::Trickle.Node.z_3558 
	param::Trickle.Node.z_3634 param::Trickle.Node.z_3718 param::Trickle.Node.z_3850 
	param::Trickle.Node.z_3934 } } @ (z_188 + z_20 + z_2504 + z_3148 + z_3200 + 
	z_3256 + z_3344 + z_372 + z_4448)) (:pid_11 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_3127 }) 
	}
																					
														NC: ((t_3127 < 4) && (0 <= 
	(t_3127 + -2)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_3127 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && 
	(t_5954 < 4) && (t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_3127 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= 
	(t_6389 + -2)) && (0 <= (t_6652 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:z = z_4448;
																																			:pid_6:seq_buff[0] = 1;
																																			:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_3127 < 4) && (t_5954 < 4) && (t_6146 < 8) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_3127 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)));
																																			:pid_6:localPtC = (((z_3200 + z_3256) == 4) && (z_188 == t_22) && (z_2504 == t_306) && (z_3200 == t_5954) && (z_3344 == t_6146) && ((z_188 + z_372) < 4) && ((z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_4448) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448)) && ((z_3200 + z_3256) > t_5954) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_3148 > 0) && (z_3200 > 0) && (z_3256 > 0) && (z_3344 > 0) && (z_372 > 0));
																																			:pid_6:timeEmit = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934);
																																			:pid_7:i = 2;
																																			:pid_7:t = t_3127;
																																			:pid_7:cl = 0;
																																			:pid_13:cl = (z_3344 + z_4448);
																																			:pid_18:cl = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																		}
																																		BUFFER{
																																			:pid_6:bufferNode:<FIFO>#0{ }
																																		}
																																		EC:<Id:9457;Ev:0;H:34;W:8329>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4507 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4507)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4507);
																																				:pid_57:z = z_4507;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4507);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4507;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4507);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4507);
																																			}
																																		}
																																	}
																																	EC:<Id:9316;Ev:1129;H:33;W:8202>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_11 , run) (:pid_11 , cp_resetTau) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4448 }) (:pid_11 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3126 }) }
																					
														NC: ((t_3126 < 8) && (0 <= 
	(t_3126 + -4)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_3126 < 8) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && 
	(t_5954 < 4) && (t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_3126 + -4)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= 
	(t_6389 + -2)) && (0 <= (t_6652 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:z = z_4448;
																																			:pid_6:localTime = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																			:pid_6:localPC = ((t_22 < 4) && (t_306 < 4) && (t_3126 < 8) && (t_5954 < 4) && (t_6146 < 8) && (0 <= (t_22 + -2)) && (0 <= (t_306 + -2)) && (0 <= (t_3126 + -4)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)));
																																			:pid_6:localPtC = (((z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_4448) == 4) && ((z_3200 + z_3256) == 4) && (z_188 == t_22) && (z_2504 == t_306) && (z_3200 == t_5954) && (z_3344 == t_6146) && ((z_188 + z_372) < 4) && ((z_126 + z_2) <= (z_188 + z_20 + z_372)) && ((z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_4448) > t_306) && ((z_3200 + z_3256) > t_5954) && ($delta#initial > 0) && (z_188 > 0) && (z_20 > 0) && (z_2504 > 0) && (z_3148 > 0) && (z_3200 > 0) && (z_3256 > 0) && (z_3344 > 0) && (z_372 > 0));
																																			:pid_7:e = 1;
																																			:pid_7:tau = 8;
																																			:pid_7:t = t_3126;
																																			:pid_7:cl = 0;
																																			:pid_13:cl = (z_3344 + z_4448);
																																			:pid_18:cl = (z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372 + z_4448);
																																		}
																																		EC:<Id:9467;Ev:0;H:34;W:8338>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4511 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4511)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4511);
																																				:pid_57:z = z_4511;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4511);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4511;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4511);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4511);
																																			}
																																		}
																																	}
																																	EC:<Id:9317;Ev:1130;H:33;W:8203>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_37:dp1 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_23 , run) 
	(:pid_35 , run) (:pid_36 , run) (:pid_36 , dp_init) }
																					
														TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4449 }) (:pid_36 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7938 
	}) }
																					
														NC: ((t_7938 < 4) && (0 <= 
	(t_7938 + -2)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && 
	(t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (t_7938 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= 
	(t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 
	+ -2)) && (0 <= (t_7938 + -2)))
																																		DATA{
																																			:pid_23:$time = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_4449 + z_697);
																																			:pid_23:z = z_4449;
																																			:pid_23:localTime = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_4449 + z_697);
																																			:pid_23:localPC = ((t_2067 < 4) && (t_2806 < 4) && (t_2965 < 4) && (t_549 < 4) && (t_981 < 4) && (t_6389 < 4) && (t_7938 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_2806 + -2)) && (0 <= (t_2965 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_6389 + -2)) && (0 <= (t_7938 + -2)));
																																			:pid_23:localPtC = (((z_3401 + z_3489 + z_3777 + z_4125) < t_2067) && ((z_3489 + z_3777) < t_6389) && (z_1325 < t_549) && (z_2797 < t_981) && (z_3489 < t_6389) && (z_4305 < t_2806) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ((z_1907 + z_2223 + z_3999 + z_4043) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697)) && ((z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_2797 > 0) && (z_3401 > 0) && (z_3489 > 0) && (z_3777 > 0) && (z_4125 > 0) && (z_4305 > 0) && (z_697 > 0));
																																			:pid_24:cl = z_4449;
																																			:pid_30:cl = (z_3489 + z_3777 + z_4125 + z_4305 + z_4449);
																																			:pid_35:k = 2;
																																			:pid_35:c = 0;
																																			:pid_35:e = 0;
																																			:pid_35:tau = 4;
																																			:pid_35:tau_l = 4;
																																			:pid_35:tau_h = 8;
																																			:pid_35:t = t_7938;
																																			:pid_35:cl = 0;
																																		}
																																		EC:<Id:9476;Ev:0;H:34;W:8346>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_37:dp1 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4515 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4515)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4515);
																																				:pid_57:z = z_4515;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4515);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4515;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4515);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4515);
																																			}
																																		}
																																	}
																																	EC:<Id:9318;Ev:1131;H:33;W:8204>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_28:cp2 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_23 , run) 
	(:pid_24 , run) (:pid_27 , run) (:pid_27 , cp_sendCM) }
																					
														TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4449 }) (:pid_27 , ${ output 
	inst::Trickle.Node.ControlMsg [ 1 , 0 ] ${ + param::Trickle.Node.z_1325 
	param::Trickle.Node.z_2797 param::Trickle.Node.z_3401 param::Trickle.Node.z_3489 
	param::Trickle.Node.z_3777 param::Trickle.Node.z_4125 param::Trickle.Node.z_4305 
	param::Trickle.Node.z_4449 param::Trickle.Node.z_697 } } @ (z_1325 + z_2797 + 
	z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_4449 + z_697)) }
																																		DATA{
																																			:pid_23:$time = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_4449 + z_697);
																																			:pid_23:z = z_4449;
																																			:pid_23:localTime = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_4449 + z_697);
																																			:pid_23:localPC = ((t_2067 < 4) && (t_2806 < 4) && (t_2965 < 4) && (t_549 < 4) && (t_981 < 4) && (t_6389 < 4) && (0 <= (t_2067 + -2)) && (0 <= (t_2806 + -2)) && (0 <= (t_2965 + -2)) && (0 <= (t_549 + -2)) && (0 <= (t_981 + -2)) && (0 <= (t_6389 + -2)));
																																			:pid_23:localPtC = ((z_4449 == t_2965) && ((z_3401 + z_3489 + z_3777 + z_4125) < t_2067) && ((z_3489 + z_3777) < t_6389) && (z_1325 < t_549) && (z_2797 < t_981) && (z_3489 < t_6389) && (z_4305 < t_2806) && ((z_188 + z_20) <= (z_1325 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_697)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_697)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_1325 + z_2797 + z_697)) && ((z_1907 + z_2223 + z_3999 + z_4043) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_697)) && ((z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259) <= (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_697)) && ($delta#initial > 0) && (z_1325 > 0) && (z_2797 > 0) && (z_3401 > 0) && (z_3489 > 0) && (z_3777 > 0) && (z_4125 > 0) && (z_4305 > 0) && (z_697 > 0));
																																			:pid_24:cl = z_4449;
																																			:pid_30:cl = (z_3489 + z_3777 + z_4125 + z_4305 + z_4449);
																																			:pid_35:cl = (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_4449 + z_697);
																																		}
																																		BUFFER{
																																			:pid_40:bufferNode:<FIFO>#0{
																																				:pid_23:ControlMsg([ 1 , 0 ] , (z_1325 + z_2797 + z_3401 + z_3489 + z_3777 + z_4125 + z_4305 + z_4449 + z_697));
																																			}
																																		}
																																		EC:<Id:9487;Ev:0;H:34;W:8356>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_28:cp2 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4519 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4519)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4519);
																																				:pid_57:z = z_4519;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4519);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4519;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4519);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4519);
																																			}
																																		}
																																	}
																																	EC:<Id:9319;Ev:1132;H:33;W:8205>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_54:dp1 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_40 , run) 
	(:pid_52 , run) (:pid_53 , run) (:pid_53 , dp_init) }
																					
														TRACE: { |;| (:pid_40 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4450 }) (:pid_53 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7939 
	}) }
																					
														NC: ((t_7939 < 4) && (0 <= 
	(t_7939 + -2)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && 
	(t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (t_7939 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= 
	(t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 
	+ -2)) && (0 <= (t_7939 + -2)))
																																		DATA{
																																			:pid_40:$time = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934 + z_4450);
																																			:pid_40:z = z_4450;
																																			:pid_40:localTime = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934 + z_4450);
																																			:pid_40:localPC = ((t_2255 < 4) && (t_2574 < 4) && (t_6 < 4) && (t_6652 < 4) && (t_7939 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6652 + -2)) && (0 <= (t_7939 + -2)));
																																			:pid_40:localPtC = (((z_3718 + z_3850 + z_3934) == t_2574) && (z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_3558 + z_3634) < t_2255) && ((z_3634 + z_3718) < t_6652) && ((z_3634 + z_3718 + z_3850) < t_6652) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634)) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0) && (z_3082 > 0) && (z_3558 > 0) && (z_3634 > 0) && (z_3718 > 0) && (z_3850 > 0) && (z_3934 > 0));
																																			:pid_41:cl = (z_3718 + z_3850 + z_3934 + z_4450);
																																			:pid_47:cl = (z_3634 + z_3718 + z_3850 + z_3934 + z_4450);
																																			:pid_52:k = 2;
																																			:pid_52:c = 0;
																																			:pid_52:e = 0;
																																			:pid_52:tau = 4;
																																			:pid_52:tau_l = 4;
																																			:pid_52:tau_h = 8;
																																			:pid_52:t = t_7939;
																																			:pid_52:cl = 0;
																																		}
																																		EC:<Id:9496;Ev:0;H:34;W:8364>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_54:dp1 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4523 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4523)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4523);
																																				:pid_57:z = z_4523;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4523);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4523;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4523);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4523);
																																			}
																																		}
																																	}
																																	EC:<Id:9320;Ev:1133;H:33;W:8206>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_40 , run) 
	(:pid_41 , run) (:pid_45 , run) (:pid_45 , cp_resetTau) }
																					
														TRACE: { |;| (:pid_40 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4450 }) (:pid_45 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3128 }) }
																					
														NC: ((t_3128 < 8) && (0 <= 
	(t_3128 + -4)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_3128 < 8) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && 
	(t_5954 < 4) && (t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_3128 + -4)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_981 + -2)) && (0 <= (t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= 
	(t_6389 + -2)) && (0 <= (t_6652 + -2)))
																																		DATA{
																																			:pid_40:$time = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934 + z_4450);
																																			:pid_40:z = z_4450;
																																			:pid_40:localTime = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934 + z_4450);
																																			:pid_40:localPC = ((t_2255 < 4) && (t_2574 < 4) && (t_3128 < 8) && (t_6 < 4) && (t_6652 < 4) && (0 <= (t_2255 + -2)) && (0 <= (t_2574 + -2)) && (0 <= (t_3128 + -4)) && (0 <= (t_6 + -2)) && (0 <= (t_6652 + -2)));
																																			:pid_40:localPtC = (((z_3718 + z_3850 + z_3934) == t_2574) && ((z_3718 + z_3850 + z_3934 + z_4450) == 4) && (z_126 == t_6) && ((z_126 + z_3082) < 4) && ((z_3558 + z_3634) < t_2255) && ((z_3634 + z_3718) < t_6652) && ((z_3634 + z_3718 + z_3850) < t_6652) && ((z_188 + z_20) <= (z_126 + z_2 + z_3082)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_3256 + z_3344 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850)) && ((z_188 + z_20 + z_2504 + z_3148 + z_3200 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718)) && ((z_188 + z_20 + z_2504 + z_372) <= (z_126 + z_2 + z_3082 + z_3558 + z_3634)) && ((z_3718 + z_3850 + z_3934 + z_4450) > t_2574) && ($delta#initial > 0) && (z_126 > 0) && (z_2 > 0) && (z_3082 > 0) && (z_3558 > 0) && (z_3634 > 0) && (z_3718 > 0) && (z_3850 > 0) && (z_3934 > 0));
																																			:pid_41:e = 1;
																																			:pid_41:tau = 8;
																																			:pid_41:t = t_3128;
																																			:pid_41:cl = 0;
																																			:pid_47:cl = (z_3634 + z_3718 + z_3850 + z_3934 + z_4450);
																																			:pid_52:cl = (z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934 + z_4450);
																																		}
																																		EC:<Id:9506;Ev:0;H:34;W:8373>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4527 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4527)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4527);
																																				:pid_57:z = z_4527;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4527);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4527;
																																				:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4527);
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4527);
																																			}
																																		}
																																	}
																																	EC:<Id:9321;Ev:1134;H:33;W:8207>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_66:dp1 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_57 , run) 
	(:pid_64 , run) (:pid_65 , run) (:pid_65 , dp_init) }
																					
														TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4451 }) (:pid_65 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7940 
	}) }
																					
														NC: ((t_7940 < 4) && (0 <= 
	(t_7940 + -2)))
																																		PC: ((t_1361 < 4) && (t_2067 < 4) && (t_22 < 4) && (t_2255 < 4) && (t_2574 < 4) && 
	(t_2725 < 4) && (t_2806 < 4) && (t_2845 < 8) && (t_2965 < 4) && (t_3048 < 8) && 
	(t_306 < 4) && (t_549 < 4) && (t_6 < 4) && (t_981 < 4) && (t_5954 < 4) && 
	(t_6146 < 8) && (t_6389 < 4) && (t_6652 < 4) && (t_7940 < 4) && (0 <= (t_1361 + 
	-2)) && (0 <= (t_2067 + -2)) && (0 <= (t_22 + -2)) && (0 <= (t_2255 + -2)) && (0 
	<= (t_2574 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2806 + -2)) && (0 <= 
	(t_2845 + -4)) && (0 <= (t_2965 + -2)) && (0 <= (t_3048 + -4)) && (0 <= (t_306 + 
	-2)) && (0 <= (t_549 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_981 + -2)) && (0 <= 
	(t_5954 + -2)) && (0 <= (t_6146 + -4)) && (0 <= (t_6389 + -2)) && (0 <= (t_6652 
	+ -2)) && (0 <= (t_7940 + -2)))
																																		DATA{
																																			:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451);
																																			:pid_57:z = z_4451;
																																			:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451);
																																			:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (t_7940 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)) && (0 <= (t_7940 + -2)));
																																			:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																			:pid_58:cl = z_4451;
																																			:pid_64:k = 2;
																																			:pid_64:c = 0;
																																			:pid_64:e = 0;
																																			:pid_64:tau = 4;
																																			:pid_64:tau_l = 4;
																																			:pid_64:tau_h = 8;
																																			:pid_64:t = t_7940;
																																			:pid_64:cl = 0;
																																			:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451);
																																		}
																																		EC:<Id:9515;Ev:0;H:34;W:8381>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_66:dp1 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4531 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4451 + z_4531)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451 + z_4531);
																																				:pid_57:z = z_4531;
																																				:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451 + z_4531);
																																				:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (t_7940 < 4) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)) && (0 <= (t_7940 + -2)));
																																				:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0) && (z_4451 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = (z_4451 + z_4531);
																																				:pid_64:cl = z_4531;
																																				:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451 + z_4531);
																																			}
																																		}
																																	}
																																	EC:<Id:9322;Ev:1135;H:33;W:8208>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_57 , run) 
	(:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
														TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4451 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1907 + z_2223 + z_3999 + z_4043 + 
	z_4175 + z_4259 + z_4379 + z_4451)) }
																																		/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																		INFO{
																																			<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																		}
																																		DATA{
																																			:pid_57:$time = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451);
																																			:pid_57:z = z_4451;
																																			:pid_57:localTime = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451);
																																			:pid_57:localPC = ((t_1361 < 4) && (t_2725 < 4) && (t_2845 < 8) && (t_3048 < 8) && (0 <= (t_1361 + -2)) && (0 <= (t_2725 + -2)) && (0 <= (t_2845 + -4)) && (0 <= (t_3048 + -4)));
																																			:pid_57:localPtC = (((z_4043 + z_4175) == 4) && ((z_4259 + z_4379) == 8) && (z_4043 == t_2725) && (z_4259 == t_2845) && ((z_2223 + z_3999) < t_1361) && (z_2223 < t_1361) && ((z_126 + z_2) <= (z_1907 + z_2223)) && ((z_126 + z_2 + z_3082 + z_3558 + z_3634 + z_3718 + z_3850 + z_3934) <= (z_1907 + z_2223 + z_3999)) && ((z_4043 + z_4175) > t_2725) && ((z_4259 + z_4379) > t_2845) && ($delta#initial > 0) && (z_1907 > 0) && (z_2223 > 0) && (z_3999 > 0) && (z_4043 > 0) && (z_4175 > 0) && (z_4259 > 0) && (z_4379 > 0));
																																			:pid_58:e = 2;
																																			:pid_58:cl = z_4451;
																																			:pid_64:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451);
																																			:pid_69:cl = (z_1907 + z_2223 + z_3999 + z_4043 + z_4175 + z_4259 + z_4379 + z_4451);
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			EC:<Id:35;Ev:35;H:3;W:28>{ SC: ( pid_4:o0 , ( pid_9:cp0_init , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
				EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) 
	(:pid_44 , cp_sendCM) }
				TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_22 }) (:pid_44 , ${ output inst::Trickle.Node.ControlMsg [ 
	0 , 0 ] ${ + param::Trickle.Node.z_2 param::Trickle.Node.z_22 } } @ (z_2 + z_22))
	 }
				/*FLAGS{ COVERAGE-ELEMENT }*/
				INFO{
					<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#1->inst::Trickle.n3->ControlMsg" as trace="tpid#1->inst::Trickle.n3->ControlMsg">
				}
				DATA{
					:pid_40:$time = (z_2 + z_22);
					:pid_40:z = z_22;
					:pid_40:localTime = (z_2 + z_22);
					:pid_40:localPC = ((t_6 < 4) && (0 <= (t_6 + -2)));
					:pid_40:localPtC = ((z_22 == t_6) && ($delta#initial > 0) && (z_2 > 0));
					:pid_41:cl = z_22;
					:pid_47:cl = (z_2 + z_22);
					:pid_52:cl = (z_2 + z_22);
				}
				BUFFER{
					:pid_6:bufferNode:<FIFO>#0{
						:pid_40:ControlMsg([ 0 , 0 ] , (z_2 + z_22));
					}
					:pid_57:bufferNode:<FIFO>#0{
						:pid_40:ControlMsg([ 0 , 0 ] , (z_2 + z_22));
					}
				}
				EC:<Id:187;Ev:53;H:4;W:152>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
					EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_9 , run) 
	(:pid_9 , cp_init) }
					TRACE: { |;| (:pid_6 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_132 }) (:pid_9 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_104 }) 
	(:pid_9 , ${ output#env inst::Trickle.Node.Log 0 } @ z_132) }
					NC: ((t_104 < 4) && (0 <= (t_104 + -2)))
					PC: ((t_104 < 4) && (t_6 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_6 + -2)))
					DATA{
						:pid_6:mydp_run[0] = false;
						:pid_6:mydp_run[1] = false;
						:pid_6:$time = z_132;
						:pid_6:z = z_132;
						:pid_6:coverageProp = true;
						:pid_6:localTime = z_132;
						:pid_6:localPC = ((t_104 < 4) && (0 <= (t_104 + -2)));
						:pid_6:localPtC = ($delta#initial > 0);
						:pid_7:t = t_104;
						:pid_7:cl = 0;
						:pid_13:cl = z_132;
						:pid_18:cl = z_132;
					}
					EC:<Id:290;Ev:118;H:5;W:237>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
						EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_10 , run) 
	(:pid_10 , cp_sendCM) }
						TRACE: { |;| (:pid_6 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_204 }) (:pid_10 , ${ output inst::Trickle.Node.ControlMsg 
	[ 1 , 1 ] ${ + param::Trickle.Node.z_132 param::Trickle.Node.z_204 } } @ (z_132 
	+ z_204)) }
						DATA{
							:pid_6:$time = (z_132 + z_204);
							:pid_6:z = z_204;
							:pid_6:localTime = (z_132 + z_204);
							:pid_6:localPC = ((t_104 < 4) && (0 <= (t_104 + -2)));
							:pid_6:localPtC = ((z_204 == t_104) && ($delta#initial > 0) && (z_132 > 0));
							:pid_7:cl = z_204;
							:pid_13:cl = (z_132 + z_204);
							:pid_18:cl = (z_132 + z_204);
						}
						BUFFER{
							:pid_23:bufferNode:<FIFO>#0{
								:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204));
							}
							:pid_40:bufferNode:<FIFO>#0{
								:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204));
							}
						}
						EC:<Id:685;Ev:189;H:6;W:237>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_26:cp0_init , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
							EXE: { |;| (:pid_6 , run) (:pid_7 , run) (:pid_11 , 
	run) (:pid_11 , cp2_receiveCM_inconsistent) }
							TRACE: { |;| (:pid_6 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_464 }) (:pid_11 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_2 
	param::Trickle.Node.z_22 } } @ (z_132 + z_204 + z_464)) (:pid_11 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_383 }) }
							/*FLAGS{ COVERAGE-ELEMENT }*/
							INFO{
								<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#2->inst::Trickle.n1->ControlMsg" as trace="tpid#2->inst::Trickle.n1->ControlMsg">
							}
							NC: ((t_383 < 4) && (0 <= (t_383 + -2)))
							PC: ((t_104 < 4) && (t_383 < 4) && (t_6 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_383 
	+ -2)) && (0 <= (t_6 + -2)))
							DATA{
								:pid_6:mydp_run[0] = true;
								:pid_6:mydp_run[1] = true;
								:pid_6:$time = (z_132 + z_204 + z_464);
								:pid_6:z = z_464;
								:pid_6:seq_buff[0] = 0;
								:pid_6:seq_buff[1] = 0;
								:pid_6:localTime = (z_132 + z_204 + z_464);
								:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)));
								:pid_6:localPtC = ((z_204 == t_104) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0));
								:pid_6:timeEmit = (z_2 + z_22);
								:pid_7:c = 0;
								:pid_7:e = 0;
								:pid_7:i = 2;
								:pid_7:t = t_383;
								:pid_7:consistent = false;
								:pid_7:cl = 0;
								:pid_13:cl = (z_132 + z_204 + z_464);
								:pid_18:cl = (z_132 + z_204 + z_464);
							}
							BUFFER{
								:pid_6:bufferNode:<FIFO>#0{ }
							}
							EC:<Id:1138;Ev:415;H:7;W:949>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
								EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_26 , run) (:pid_26 , cp_init) }
								TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_749 }) (:pid_26 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_584 }) 
	(:pid_26 , ${ output#env inst::Trickle.Node.Log 0 } @ z_749) }
								NC: ((t_584 < 4) && (0 <= (t_584 + -2)))
								PC: ((t_104 < 4) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (0 <= (t_104 + -2)) 
	&& (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)))
								DATA{
									:pid_23:$time = z_749;
									:pid_23:z = z_749;
									:pid_23:localTime = z_749;
									:pid_23:localPC = ((t_584 < 4) && (0 <= (t_584 + -2)));
									:pid_23:localPtC = ($delta#initial > 0);
									:pid_24:t = t_584;
									:pid_24:cl = 0;
									:pid_30:cl = z_749;
									:pid_35:cl = z_749;
								}
								EC:<Id:2654;Ev:483;H:8;W:2239>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_60:cp0_init , pid_65:dp0 , pid_70:dp0 ) )
									EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
									TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_1653 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_132 
	param::Trickle.Node.z_204 } } @ (z_1653 + z_749)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_1204 }) 
	}
									/*FLAGS{ COVERAGE-ELEMENT }*/
									INFO{
										<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#3->inst::Trickle.n2->ControlMsg" as trace="tpid#3->inst::Trickle.n2->ControlMsg">
									}
									NC: ((t_1204 < 4) && (0 <= (t_1204 + -2)))
									PC: ((t_104 < 4) && (t_1204 < 4) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (0 <= 
	(t_104 + -2)) && (0 <= (t_1204 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + 
	-2)) && (0 <= (t_6 + -2)))
									DATA{
										:pid_23:mydp_run[0] = true;
										:pid_23:mydp_run[1] = true;
										:pid_23:$time = (z_1653 + z_749);
										:pid_23:z = z_1653;
										:pid_23:seq_buff[0] = 1;
										:pid_23:seq_buff[1] = 1;
										:pid_23:localTime = (z_1653 + z_749);
										:pid_23:localPC = ((t_1204 < 4) && (t_584 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_584 + -2)));
										:pid_23:localPtC = ((z_1653 < t_584) && ((z_132 + z_204) <= (z_1653 + z_749)) && ($delta#initial > 0) && (z_749 > 0));
										:pid_23:timeEmit = (z_132 + z_204);
										:pid_24:c = 0;
										:pid_24:e = 0;
										:pid_24:i = 2;
										:pid_24:t = t_1204;
										:pid_24:consistent = false;
										:pid_24:cl = 0;
										:pid_30:cl = (z_1653 + z_749);
										:pid_35:cl = (z_1653 + z_749);
									}
									BUFFER{
										:pid_23:bufferNode:<FIFO>#0{ }
									}
									EC:<Id:3152;Ev:602;H:9;W:2669>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
										EXE: { |;| (:pid_57 , run) (:pid_58 , 
	run) (:pid_60 , run) (:pid_60 , cp_init) }
										TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_1927 }) (:pid_60 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_1380 }) 
	(:pid_60 , ${ output#env inst::Trickle.Node.Log 0 } @ z_1927) }
										NC: ((t_1380 < 4) && (0 <= (t_1380 + -2))
	)
										PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_383 < 4) && (t_584 < 4) && 
	(t_6 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) 
	&& (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)))
										DATA{
											:pid_57:$time = z_1927;
											:pid_57:z = z_1927;
											:pid_57:localTime = z_1927;
											:pid_57:localPC = ((t_1380 < 4) && (0 <= (t_1380 + -2)));
											:pid_57:localPtC = ($delta#initial > 0);
											:pid_58:t = t_1380;
											:pid_58:cl = 0;
											:pid_64:cl = z_1927;
											:pid_69:cl = z_1927;
										}
										EC:<Id:4225;Ev:633;H:10;W:3623>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
											EXE: { |;| (:pid_57 , run) (:pid_58 
	, run) (:pid_61 , run) (:pid_61 , cp1_receiveCM_consistent) }
											TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_2403 }) (:pid_61 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_2 
	param::Trickle.Node.z_22 } } @ (z_1927 + z_2403)) }
											/*FLAGS{ COVERAGE-ELEMENT }*/
											INFO{
												<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#4->inst::Trickle.n4->ControlMsg" as trace="tpid#4->inst::Trickle.n4->ControlMsg">
											}
											DATA{
												:pid_57:$time = (z_1927 + z_2403);
												:pid_57:z = z_2403;
												:pid_57:seq_buff[0] = 0;
												:pid_57:seq_buff[1] = 0;
												:pid_57:localTime = (z_1927 + z_2403);
												:pid_57:localPC = ((t_1380 < 4) && (0 <= (t_1380 + -2)));
												:pid_57:localPtC = ((z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ($delta#initial > 0) && (z_1927 > 0));
												:pid_57:timeEmit = (z_2 + z_22);
												:pid_58:c = 1;
												:pid_58:i = 2;
												:pid_58:consistent = true;
												:pid_58:cl = z_2403;
												:pid_64:cl = (z_1927 + z_2403);
												:pid_69:cl = (z_1927 + z_2403);
											}
											BUFFER{
												:pid_57:bufferNode:<FIFO>#0{ }
											}
											EC:<Id:4499;Ev:746;H:11;W:3866>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
												EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_10 , run) (:pid_10 , cp_sendCM) }
												TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_2524 }) (:pid_10 , ${ output 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_132 
	param::Trickle.Node.z_204 param::Trickle.Node.z_2524 param::Trickle.Node.z_464 } 
	} @ (z_132 + z_204 + z_2524 + z_464)) }
												/*FLAGS{ COVERAGE-ELEMENT }*/
												INFO{
													<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#5->inst::Trickle.n1->ControlMsg" as trace="tpid#5->inst::Trickle.n1->ControlMsg">
												}
												DATA{
													:pid_6:$time = (z_132 + z_204 + z_2524 + z_464);
													:pid_6:z = z_2524;
													:pid_6:localTime = (z_132 + z_204 + z_2524 + z_464);
													:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)));
													:pid_6:localPtC = ((z_204 == t_104) && (z_2524 == t_383) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_464 > 0));
													:pid_7:cl = z_2524;
													:pid_13:cl = (z_132 + z_204 + z_2524 + z_464);
													:pid_18:cl = (z_132 + z_204 + z_2524 + z_464);
												}
												BUFFER{
													:pid_23:bufferNode:<FIFO>#0{
														:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204 + z_2524 + z_464));
													}
													:pid_40:bufferNode:<FIFO>#0{
														:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204));
														:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204 + z_2524 + z_464));
													}
												}
												EC:<Id:5521;Ev:773;H:12;W:4775>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_45:cp2 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
													EXE: { |;| (:pid_23 , run) 
	(:pid_24 , run) (:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
													TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_2977 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_132 
	param::Trickle.Node.z_204 param::Trickle.Node.z_2524 param::Trickle.Node.z_464 } 
	} @ (z_1653 + z_2977 + z_749)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2186 }) 
	}
													/*FLAGS{ COVERAGE-ELEMENT }*/
													INFO{
														<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#6->inst::Trickle.n2->ControlMsg" as trace="tpid#6->inst::Trickle.n2->ControlMsg">
													}
													NC: ((t_2186 < 4) && (0 <= 
	(t_2186 + -2)))
													PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_383 < 4) && 
	(t_584 < 4) && (t_6 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_1204 + -2)) && (0 <= 
	(t_1380 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + 
	-2)) && (0 <= (t_6 + -2)))
													DATA{
														:pid_23:$time = (z_1653 + z_2977 + z_749);
														:pid_23:z = z_2977;
														:pid_23:localTime = (z_1653 + z_2977 + z_749);
														:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_584 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_584 + -2)));
														:pid_23:localPtC = ((z_1653 < t_584) && (z_2977 < t_1204) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_749 > 0));
														:pid_23:timeEmit = (z_132 + z_204 + z_2524 + z_464);
														:pid_24:i = 2;
														:pid_24:t = t_2186;
														:pid_30:cl = (z_1653 + z_2977 + z_749);
														:pid_35:cl = (z_1653 + z_2977 + z_749);
													}
													BUFFER{
														:pid_23:bufferNode:<FIFO>#0{ }
													}
													EC:<Id:5766;Ev:798;H:13;W:4993>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_14:dp0 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
														EXE: { |;| (:pid_40 , 
	run) (:pid_41 , run) (:pid_45 , run) (:pid_45 , cp2_receiveCM_inconsistent) }
														TRACE: { |;| (:pid_40 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3086 }) (:pid_45 , ${ 
	input inst::Trickle.Node.ControlMsg [ 1 , 1 ] ${ + param::Trickle.Node.z_132 
	param::Trickle.Node.z_204 } } @ (z_2 + z_22 + z_3086)) (:pid_45 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2258 }) 
	}
														/*FLAGS{ COVERAGE-ELEMENT }*/
														INFO{
															<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#7->inst::Trickle.n3->ControlMsg" as trace="tpid#7->inst::Trickle.n3->ControlMsg">
														}
														NC: ((t_2258 < 4) && (0 
	<= (t_2258 + -2)))
														PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_1204 
	+ -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2258 + -2)) 
	&& (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)))
														DATA{
															:pid_40:mydp_run[0] = true;
															:pid_40:mydp_run[1] = true;
															:pid_40:$time = (z_2 + z_22 + z_3086);
															:pid_40:z = z_3086;
															:pid_40:seq_buff[0] = 1;
															:pid_40:seq_buff[1] = 1;
															:pid_40:localTime = (z_2 + z_22 + z_3086);
															:pid_40:localPC = ((t_2258 < 4) && (t_6 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_6 + -2)));
															:pid_40:localPtC = ((z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0));
															:pid_40:timeEmit = (z_132 + z_204);
															:pid_41:c = 0;
															:pid_41:e = 0;
															:pid_41:i = 2;
															:pid_41:t = t_2258;
															:pid_41:consistent = false;
															:pid_41:cl = 0;
															:pid_47:cl = (z_2 + z_22 + z_3086);
															:pid_52:cl = (z_2 + z_22 + z_3086);
														}
														BUFFER{
															:pid_40:bufferNode:<FIFO>#0{
																:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204 + z_2524 + z_464));
															}
														}
														EC:<Id:5986;Ev:803;H:14;W:5188>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
															EXE: { |;| (:pid_6 , 
	run) (:pid_13 , run) (:pid_14 , run) (:pid_14 , dp_init) }
															TRACE: { |;| (:pid_6 
	, ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3184 }) (:pid_14 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_6022 
	}) }
															/*FLAGS{ COVERAGE-ELEMENT }*/
															INFO{
																<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#8->Node.DataProcess1->dp0.dp_init" as trace="tpid#8->Node.DataProcess1->dp0.dp_init">
															}
															NC: ((t_6022 < 4) && 
	(0 <= (t_6022 + -2)))
															PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && (0 <= (t_104 + -2)) 
	&& (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && (0 <= 
	(t_2258 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2))
	 && (0 <= (t_6022 + -2)))
															DATA{
																:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_464);
																:pid_6:z = z_3184;
																:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_464);
																:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (t_6022 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)));
																:pid_6:localPtC = ((z_204 == t_104) && (z_2524 == t_383) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_464 > 0));
																:pid_7:cl = (z_2524 + z_3184);
																:pid_13:k = 2;
																:pid_13:c = 0;
																:pid_13:e = 0;
																:pid_13:tau = 4;
																:pid_13:tau_l = 4;
																:pid_13:tau_h = 8;
																:pid_13:t = t_6022;
																:pid_13:cl = 0;
																:pid_18:cl = (z_132 + z_204 + z_2524 + z_3184 + z_464);
															}
															EC:<Id:6038;Ev:827;H:15;W:5235>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																EXE: { |;| 
	(:pid_6 , run) (:pid_13 , run) (:pid_15 , run) (:pid_15 , dp_sendDM) }
																TRACE: { |;| 
	(:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3204 }) 
	(:pid_15 , ${ output inst::Trickle.Node.DataMsg [ 1 , 1 , 0 ] ${ + 
	param::Trickle.Node.z_132 param::Trickle.Node.z_204 param::Trickle.Node.z_2524 
	param::Trickle.Node.z_3184 param::Trickle.Node.z_3204 param::Trickle.Node.z_464 }
	 } @ (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464)) }
																/*FLAGS{ COVERAGE-ELEMENT }*/
																INFO{
																	<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#9->inst::Trickle.n1->DataMsg" as trace="tpid#9->inst::Trickle.n1->DataMsg">
																}
																DATA{
																	:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464);
																	:pid_6:z = z_3204;
																	:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464);
																	:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (t_6022 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)));
																	:pid_6:localPtC = ((z_204 == t_104) && (z_2524 == t_383) && (z_3204 == t_6022) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_3184 > 0) && (z_464 > 0));
																	:pid_7:cl = (z_2524 + z_3184 + z_3204);
																	:pid_13:cl = z_3204;
																	:pid_18:cl = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464);
																}
																BUFFER{
																	:pid_23:bufferNode:<FIFO>#0{
																		:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464));
																	}
																	:pid_40:bufferNode:<FIFO>#0{
																		:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204 + z_2524 + z_464));
																		:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464));
																	}
																}
																EC:<Id:6298;Ev:839;H:16;W:5471>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																	EXE: { |;| 
	(:pid_6 , run) (:pid_13 , run) (:pid_16 , run) (:pid_16 , dp_resetTau) }
																	TRACE: { |;| 
	(:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3300 }) 
	(:pid_16 , ${ newfresh inst::Trickle.Node.DataProcess.t 
	param::Trickle.Node.DataProcess.t_6219 }) }
																	/*FLAGS{ COVERAGE-ELEMENT }*/
																	INFO{
																		<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#10->Node.DataProcess1->dp2.dp_resetTau" as trace="tpid#10->Node.DataProcess1->dp2.dp_resetTau">
																	}
																	NC: ((t_6219 
	< 8) && (0 <= (t_6219 + -4)))
																	PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && (t_6219 < 8) && (0 <= 
	(t_104 + -2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + 
	-2)) && (0 <= (t_2258 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 
	<= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)))
																	DATA{
																		:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_464);
																		:pid_6:z = z_3300;
																		:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_464);
																		:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (t_6022 < 4) && (t_6219 < 8) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)));
																		:pid_6:localPtC = (((z_3204 + z_3300) == 4) && (z_204 == t_104) && (z_2524 == t_383) && (z_3204 == t_6022) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ((z_3204 + z_3300) > t_6022) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_3184 > 0) && (z_3204 > 0) && (z_464 > 0));
																		:pid_7:cl = (z_2524 + z_3184 + z_3204 + z_3300);
																		:pid_13:e = 1;
																		:pid_13:tau = 8;
																		:pid_13:t = t_6219;
																		:pid_13:cl = 0;
																		:pid_18:cl = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_464);
																	}
																	EC:<Id:6428;Ev:863;H:17;W:5589>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_31:dp0 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																		EXE: { 
	|;| (:pid_6 , run) (:pid_13 , run) (:pid_15 , run) (:pid_15 , dp_sendDM) }
																		TRACE: { 
	|;| (:pid_6 , ${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_3348 }) 
	(:pid_15 , ${ output inst::Trickle.Node.DataMsg [ 1 , 1 , 0 ] ${ + 
	param::Trickle.Node.z_132 param::Trickle.Node.z_204 param::Trickle.Node.z_2524 
	param::Trickle.Node.z_3184 param::Trickle.Node.z_3204 param::Trickle.Node.z_3300 
	param::Trickle.Node.z_3348 param::Trickle.Node.z_464 } } @ (z_132 + z_204 + 
	z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464)) }
																		/*FLAGS{ COVERAGE-ELEMENT }*/
																		INFO{
																			<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#11->inst::Trickle.n1->DataMsg" as trace="tpid#11->inst::Trickle.n1->DataMsg">
																		}
																		DATA{
																			:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464);
																			:pid_6:z = z_3348;
																			:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464);
																			:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (t_6022 < 4) && (t_6219 < 8) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)));
																			:pid_6:localPtC = (((z_3204 + z_3300) == 4) && (z_204 == t_104) && (z_2524 == t_383) && (z_3204 == t_6022) && (z_3348 == t_6219) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ((z_3204 + z_3300) > t_6022) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_3184 > 0) && (z_3204 > 0) && (z_3300 > 0) && (z_464 > 0));
																			:pid_7:cl = (z_2524 + z_3184 + z_3204 + z_3300 + z_3348);
																			:pid_13:cl = z_3348;
																			:pid_18:cl = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464);
																		}
																		BUFFER{
																			:pid_23:bufferNode:<FIFO>#0{
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464));
																			}
																			:pid_40:bufferNode:<FIFO>#0{
																				:pid_6:ControlMsg([ 1 , 1 ] , (z_132 + z_204 + z_2524 + z_464));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464));
																				:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464));
																			}
																		}
																		EC:<Id:6693;Ev:875;H:18;W:5830>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																			EXE: 
	{ |;| (:pid_23 , run) (:pid_30 , run) (:pid_31 , run) (:pid_31 , dp_init) }
																			
	TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3445 }) (:pid_31 , ${ newfresh 
	inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_6463 }) }
																			/*FLAGS{ COVERAGE-ELEMENT }*/
																			INFO{
																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#12->Node.DataProcess1->dp0.dp_init" as trace="tpid#12->Node.DataProcess1->dp0.dp_init">
																			}
																			NC: 
	((t_6463 < 4) && (0 <= (t_6463 + -2)))
																			PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && (t_6219 < 8) && 
	(t_6463 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + 
	-2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2258 + -2)) && (0 <= (t_383 + -2)) && 
	(0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= 
	(t_6219 + -4)) && (0 <= (t_6463 + -2)))
																			DATA{
																				:pid_23:$time = (z_1653 + z_2977 + z_3445 + z_749);
																				:pid_23:z = z_3445;
																				:pid_23:localTime = (z_1653 + z_2977 + z_3445 + z_749);
																				:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_584 < 4) && (t_6463 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6463 + -2)));
																				:pid_23:localPtC = ((z_1653 < t_584) && (z_2977 < t_1204) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_2977 > 0) && (z_749 > 0));
																				:pid_24:cl = z_3445;
																				:pid_30:k = 2;
																				:pid_30:c = 0;
																				:pid_30:e = 0;
																				:pid_30:tau = 4;
																				:pid_30:tau_l = 4;
																				:pid_30:tau_h = 8;
																				:pid_30:t = t_6463;
																				:pid_30:cl = 0;
																				:pid_35:cl = (z_1653 + z_2977 + z_3445 + z_749);
																			}
																			EC:<Id:6824;Ev:902;H:19;W:5949>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_48:dp0 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																				
	EXE: { |;| (:pid_23 , run) (:pid_30 , run) (:pid_32 , run) (:pid_32 , 
	dp1_receiveDM_consistent) }
																				
	TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3493 }) (:pid_32 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_132 param::Trickle.Node.z_204 
	param::Trickle.Node.z_2524 param::Trickle.Node.z_3184 param::Trickle.Node.z_3204 
	param::Trickle.Node.z_464 } } @ (z_1653 + z_2977 + z_3445 + z_3493 + z_749)) }
																				/*FLAGS{ COVERAGE-ELEMENT }*/
																				INFO{
																					<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#13->inst::Trickle.n2->DataMsg" as trace="tpid#13->inst::Trickle.n2->DataMsg">
																				}
																				DATA{
																					:pid_23:my_buff[0].seq = 1;
																					:pid_23:my_buff[0].fragment = FRAGMENT_0;
																					:pid_23:my_buff[0].offset = 0;
																					:pid_23:firmware[0] = FRAGMENT_0;
																					:pid_23:myseq_buff[0] = 1;
																					:pid_23:$time = (z_1653 + z_2977 + z_3445 + z_3493 + z_749);
																					:pid_23:z = z_3493;
																					:pid_23:localTime = (z_1653 + z_2977 + z_3445 + z_3493 + z_749);
																					:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_584 < 4) && (t_6463 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6463 + -2)));
																					:pid_23:localPtC = ((z_1653 < t_584) && (z_2977 < t_1204) && (z_3493 < t_6463) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_2977 > 0) && (z_3445 > 0) && (z_749 > 0));
																					:pid_23:timeEmit = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464);
																					:pid_24:cl = (z_3445 + z_3493);
																					:pid_30:c = 1;
																					:pid_30:consistent = true;
																					:pid_30:cl = z_3493;
																					:pid_30:d.seq = 1;
																					:pid_30:d.fragment = FRAGMENT_0;
																					:pid_30:d.offset = 0;
																					:pid_35:cl = (z_1653 + z_2977 + z_3445 + z_3493 + z_749);
																				}
																				BUFFER{
																					:pid_23:bufferNode:<FIFO>#0{
																						:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464));
																					}
																				}
																				EC:<Id:7125;Ev:911;H:20;W:6223>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
	EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_48 , run) (:pid_48 , dp_init) }
																					
	TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3602 }) (:pid_48 , ${ newfresh 
	inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_6725 }) }
																					/*FLAGS{ COVERAGE-ELEMENT }*/
																					INFO{
																						<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#14->Node.DataProcess1->dp0.dp_init" as trace="tpid#14->Node.DataProcess1->dp0.dp_init">
																					}
																					
	NC: ((t_6725 < 4) && (0 <= (t_6725 + -2)))
																					PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && (t_6219 < 8) && 
	(t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_1204 + -2)) && 
	(0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2258 + -2)) && (0 <= 
	(t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6022 + -2))
	 && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= (t_6725 + -2)))
																					DATA{
																						:pid_40:$time = (z_2 + z_22 + z_3086 + z_3602);
																						:pid_40:z = z_3602;
																						:pid_40:localTime = (z_2 + z_22 + z_3086 + z_3602);
																						:pid_40:localPC = ((t_2258 < 4) && (t_6 < 4) && (t_6725 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6725 + -2)));
																						:pid_40:localPtC = ((z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0) && (z_3086 > 0));
																						:pid_41:cl = z_3602;
																						:pid_47:k = 2;
																						:pid_47:c = 0;
																						:pid_47:e = 0;
																						:pid_47:tau = 4;
																						:pid_47:tau_l = 4;
																						:pid_47:tau_h = 8;
																						:pid_47:t = t_6725;
																						:pid_47:cl = 0;
																						:pid_52:cl = (z_2 + z_22 + z_3086 + z_3602);
																					}
																					EC:<Id:7224;Ev:942;H:21;W:6313>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
		EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) (:pid_44 , 
	cp1_receiveCM_inconsistent) }
																					
		TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3638 }) (:pid_44 , ${ input inst::Trickle.Node.ControlMsg 
	[ 1 , 1 ] ${ + param::Trickle.Node.z_132 param::Trickle.Node.z_204 
	param::Trickle.Node.z_2524 param::Trickle.Node.z_464 } } @ (z_2 + z_22 + z_3086 
	+ z_3602 + z_3638)) (:pid_44 , ${ newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_2576 }) }
																					
		NC: ((t_2576 < 4) && (0 <= (t_2576 + -2)))
																						PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && 
	(t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + -2)) && (0 <= 
	(t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2258 
	+ -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && 
	(0 <= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= 
	(t_6463 + -2)) && (0 <= (t_6725 + -2)))
																						DATA{
																							:pid_40:$time = (z_2 + z_22 + z_3086 + z_3602 + z_3638);
																							:pid_40:z = z_3638;
																							:pid_40:localTime = (z_2 + z_22 + z_3086 + z_3602 + z_3638);
																							:pid_40:localPC = ((t_2258 < 4) && (t_2576 < 4) && (t_6 < 4) && (t_6725 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6725 + -2)));
																							:pid_40:localPtC = ((z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_3602 + z_3638) < t_2258) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638)) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0) && (z_3086 > 0) && (z_3602 > 0));
																							:pid_40:timeEmit = (z_132 + z_204 + z_2524 + z_464);
																							:pid_41:c = 0;
																							:pid_41:e = 0;
																							:pid_41:i = 2;
																							:pid_41:t = t_2576;
																							:pid_41:cl = 0;
																							:pid_47:cl = z_3638;
																							:pid_52:cl = (z_2 + z_22 + z_3086 + z_3602 + z_3638);
																						}
																						BUFFER{
																							:pid_40:bufferNode:<FIFO>#0{
																								:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464));
																								:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464));
																							}
																						}
																						EC:<Id:7560;Ev:947;H:22;W:6618>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
			EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_49 , run) (:pid_49 , 
	dp1_receiveDM_consistent) }
																					
			TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3762 }) (:pid_49 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_132 param::Trickle.Node.z_204 
	param::Trickle.Node.z_2524 param::Trickle.Node.z_3184 param::Trickle.Node.z_3204 
	param::Trickle.Node.z_464 } } @ (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762))
	 }
																							/*FLAGS{ COVERAGE-ELEMENT }*/
																							INFO{
																								<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#15->inst::Trickle.n3->DataMsg" as trace="tpid#15->inst::Trickle.n3->DataMsg">
																							}
																							DATA{
																								:pid_40:my_buff[0].seq = 1;
																								:pid_40:my_buff[0].fragment = FRAGMENT_0;
																								:pid_40:my_buff[0].offset = 0;
																								:pid_40:firmware[0] = FRAGMENT_0;
																								:pid_40:myseq_buff[0] = 1;
																								:pid_40:$time = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762);
																								:pid_40:z = z_3762;
																								:pid_40:localTime = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762);
																								:pid_40:localPC = ((t_2258 < 4) && (t_2576 < 4) && (t_6 < 4) && (t_6725 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6725 + -2)));
																								:pid_40:localPtC = ((z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_3602 + z_3638) < t_2258) && ((z_3638 + z_3762) < t_6725) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638)) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0) && (z_3086 > 0) && (z_3602 > 0) && (z_3638 > 0));
																								:pid_40:timeEmit = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464);
																								:pid_41:cl = z_3762;
																								:pid_47:c = 1;
																								:pid_47:consistent = true;
																								:pid_47:cl = (z_3638 + z_3762);
																								:pid_47:d.seq = 1;
																								:pid_47:d.fragment = FRAGMENT_0;
																								:pid_47:d.offset = 0;
																								:pid_52:cl = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762);
																							}
																							BUFFER{
																								:pid_40:bufferNode:<FIFO>#0{
																									:pid_6:DataMsg([ 1 , 1 , 0 ] , (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464));
																								}
																							}
																							EC:<Id:7615;Ev:976;H:23;W:6668>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
				EXE: { |;| (:pid_23 , run) (:pid_30 , run) (:pid_32 , run) (:pid_32 
	, dp1_receiveDM_consistent) }
																					
				TRACE: { |;| (:pid_23 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3781 }) (:pid_32 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_132 param::Trickle.Node.z_204 
	param::Trickle.Node.z_2524 param::Trickle.Node.z_3184 param::Trickle.Node.z_3204 
	param::Trickle.Node.z_3300 param::Trickle.Node.z_3348 param::Trickle.Node.z_464 }
	 } @ (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749)) }
																								/*FLAGS{ COVERAGE-ELEMENT }*/
																								INFO{
																									<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#16->inst::Trickle.n2->DataMsg" as trace="tpid#16->inst::Trickle.n2->DataMsg">
																								}
																								DATA{
																									:pid_23:$time = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749);
																									:pid_23:z = z_3781;
																									:pid_23:localTime = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749);
																									:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_584 < 4) && (t_6463 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6463 + -2)));
																									:pid_23:localPtC = (((z_3493 + z_3781) < t_6463) && (z_1653 < t_584) && (z_2977 < t_1204) && (z_3493 < t_6463) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_2977 > 0) && (z_3445 > 0) && (z_3493 > 0) && (z_749 > 0));
																									:pid_23:timeEmit = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464);
																									:pid_24:cl = (z_3445 + z_3493 + z_3781);
																									:pid_30:c = 2;
																									:pid_30:cl = (z_3493 + z_3781);
																									:pid_35:cl = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749);
																								}
																								BUFFER{
																									:pid_23:bufferNode:<FIFO>#0{ }
																								}
																								EC:<Id:7963;Ev:986;H:24;W:6987>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
					EXE: { |;| (:pid_40 , run) (:pid_47 , run) (:pid_49 , run) 
	(:pid_49 , dp1_receiveDM_consistent) }
																					
					TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3898 }) (:pid_49 , ${ input inst::Trickle.Node.DataMsg [ 1 
	, 1 , 0 ] ${ + param::Trickle.Node.z_132 param::Trickle.Node.z_204 
	param::Trickle.Node.z_2524 param::Trickle.Node.z_3184 param::Trickle.Node.z_3204 
	param::Trickle.Node.z_3300 param::Trickle.Node.z_3348 param::Trickle.Node.z_464 }
	 } @ (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898)) }
																									/*FLAGS{ COVERAGE-ELEMENT }*/
																									INFO{
																										<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#17->inst::Trickle.n3->DataMsg" as trace="tpid#17->inst::Trickle.n3->DataMsg">
																									}
																									DATA{
																										:pid_40:$time = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898);
																										:pid_40:z = z_3898;
																										:pid_40:localTime = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898);
																										:pid_40:localPC = ((t_2258 < 4) && (t_2576 < 4) && (t_6 < 4) && (t_6725 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6725 + -2)));
																										:pid_40:localPtC = ((z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_3602 + z_3638) < t_2258) && ((z_3638 + z_3762) < t_6725) && ((z_3638 + z_3762 + z_3898) < t_6725) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638)) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0) && (z_3086 > 0) && (z_3602 > 0) && (z_3638 > 0) && (z_3762 > 0));
																										:pid_40:timeEmit = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464);
																										:pid_41:cl = (z_3762 + z_3898);
																										:pid_47:c = 2;
																										:pid_47:cl = (z_3638 + z_3762 + z_3898);
																										:pid_52:cl = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898);
																									}
																									BUFFER{
																										:pid_40:bufferNode:<FIFO>#0{ }
																									}
																									EC:<Id:8074;Ev:1009;H:25;W:7088>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
						EXE: { |;| (:pid_40 , run) (:pid_41 , run) (:pid_44 , run) 
	(:pid_44 , cp_sendCM) }
																					
						TRACE: { |;| (:pid_40 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_3938 }) (:pid_44 , ${ output inst::Trickle.Node.ControlMsg 
	[ 1 , 0 ] ${ + param::Trickle.Node.z_2 param::Trickle.Node.z_22 
	param::Trickle.Node.z_3086 param::Trickle.Node.z_3602 param::Trickle.Node.z_3638 
	param::Trickle.Node.z_3762 param::Trickle.Node.z_3898 param::Trickle.Node.z_3938 
	} } @ (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938)) }
																										/*FLAGS{ COVERAGE-ELEMENT }*/
																										INFO{
																											<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#18->inst::Trickle.n3->ControlMsg" as trace="tpid#18->inst::Trickle.n3->ControlMsg">
																										}
																										DATA{
																											:pid_40:$time = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938);
																											:pid_40:z = z_3938;
																											:pid_40:localTime = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938);
																											:pid_40:localPC = ((t_2258 < 4) && (t_2576 < 4) && (t_6 < 4) && (t_6725 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6725 + -2)));
																											:pid_40:localPtC = (((z_3762 + z_3898 + z_3938) == t_2576) && (z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_3602 + z_3638) < t_2258) && ((z_3638 + z_3762) < t_6725) && ((z_3638 + z_3762 + z_3898) < t_6725) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638)) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0) && (z_3086 > 0) && (z_3602 > 0) && (z_3638 > 0) && (z_3762 > 0) && (z_3898 > 0));
																											:pid_41:cl = (z_3762 + z_3898 + z_3938);
																											:pid_47:cl = (z_3638 + z_3762 + z_3898 + z_3938);
																											:pid_52:cl = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938);
																										}
																										BUFFER{
																											:pid_6:bufferNode:<FIFO>#0{
																												:pid_40:ControlMsg([ 1 , 0 ] , (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938));
																											}
																											:pid_57:bufferNode:<FIFO>#0{
																												:pid_40:ControlMsg([ 1 , 0 ] , (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938));
																											}
																										}
																										EC:<Id:8263;Ev:1013;H:26;W:7254>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
							EXE: { |;| (:pid_57 , run) (:pid_58 , run) (:pid_61 , 
	run) (:pid_61 , cp1_receiveCM_inconsistent) }
																					
							TRACE: { |;| (:pid_57 , ${ newfresh inst::Trickle.Node.z 
	param::Trickle.Node.z_4031 }) (:pid_61 , ${ input inst::Trickle.Node.ControlMsg 
	[ 1 , 0 ] ${ + param::Trickle.Node.z_2 param::Trickle.Node.z_22 
	param::Trickle.Node.z_3086 param::Trickle.Node.z_3602 param::Trickle.Node.z_3638 
	param::Trickle.Node.z_3762 param::Trickle.Node.z_3898 param::Trickle.Node.z_3938 
	} } @ (z_1927 + z_2403 + z_4031)) (:pid_61 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2738 }) 
	}
																											/*FLAGS{ COVERAGE-ELEMENT }*/
																											INFO{
																												<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#19->inst::Trickle.n4->ControlMsg" as trace="tpid#19->inst::Trickle.n4->ControlMsg">
																											}
																					
							NC: ((t_2738 < 4) && (0 <= (t_2738 + -2)))
																											PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && 
	(t_6022 < 4) && (t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6022 + -2))
	 && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= (t_6725 + -2)))
																											DATA{
																												:pid_57:mydp_run[0] = true;
																												:pid_57:$time = (z_1927 + z_2403 + z_4031);
																												:pid_57:z = z_4031;
																												:pid_57:seq_buff[0] = 1;
																												:pid_57:localTime = (z_1927 + z_2403 + z_4031);
																												:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)));
																												:pid_57:localPtC = (((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0));
																												:pid_57:timeEmit = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938);
																												:pid_58:c = 0;
																												:pid_58:e = 0;
																												:pid_58:i = 2;
																												:pid_58:t = t_2738;
																												:pid_58:consistent = false;
																												:pid_58:cl = 0;
																												:pid_64:cl = (z_1927 + z_2403 + z_4031);
																												:pid_69:cl = (z_1927 + z_2403 + z_4031);
																											}
																											BUFFER{
																												:pid_57:bufferNode:<FIFO>#0{ }
																											}
																											EC:<Id:8303;Ev:1043;H:27;W:7290>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
								EXE: { |;| (:pid_57 , run) (:pid_58 , run) (:pid_61 
	, run) (:pid_61 , cp_sendCM) }
																					
								TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4047 }) (:pid_61 , ${ output 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1927 
	param::Trickle.Node.z_2403 param::Trickle.Node.z_4031 param::Trickle.Node.z_4047 
	} } @ (z_1927 + z_2403 + z_4031 + z_4047)) }
																												/*FLAGS{ COVERAGE-ELEMENT }*/
																												INFO{
																													<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#20->inst::Trickle.n4->ControlMsg" as trace="tpid#20->inst::Trickle.n4->ControlMsg">
																												}
																												DATA{
																													:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047);
																													:pid_57:z = z_4047;
																													:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047);
																													:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)));
																													:pid_57:localPtC = ((z_4047 == t_2738) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0));
																													:pid_58:cl = z_4047;
																													:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047);
																													:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047);
																												}
																												BUFFER{
																													:pid_23:bufferNode:<FIFO>#0{
																														:pid_57:ControlMsg([ 0 , 0 ] , (z_1927 + z_2403 + z_4031 + z_4047));
																													}
																												}
																												EC:<Id:8592;Ev:1046;H:28;W:7549>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
									EXE: { |;| (:pid_23 , run) (:pid_24 , run) 
	(:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
																					
									TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4165 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1927 
	param::Trickle.Node.z_2403 param::Trickle.Node.z_4031 param::Trickle.Node.z_4047 
	} } @ (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749)) (:pid_27 , 
	${ newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_2835 }) }
																													/*FLAGS{ COVERAGE-ELEMENT }*/
																													INFO{
																														<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#21->inst::Trickle.n2->ControlMsg" as trace="tpid#21->inst::Trickle.n2->ControlMsg">
																													}
																					
									NC: ((t_2835 < 4) && (0 <= (t_2835 + -2)))
																													PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_383 < 4) && (t_584 < 4) && 
	(t_6 < 4) && (t_6022 < 4) && (t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (0 
	<= (t_104 + -2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= 
	(t_2186 + -2)) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 
	+ -2)) && (0 <= (t_2835 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && 
	(0 <= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= 
	(t_6463 + -2)) && (0 <= (t_6725 + -2)))
																													DATA{
																														:pid_23:$time = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749);
																														:pid_23:z = z_4165;
																														:pid_23:seq_buff[0] = 0;
																														:pid_23:seq_buff[1] = 0;
																														:pid_23:localTime = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749);
																														:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_2835 < 4) && (t_584 < 4) && (t_6463 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2835 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6463 + -2)));
																														:pid_23:localPtC = (((z_3445 + z_3493 + z_3781 + z_4165) < t_2186) && ((z_3493 + z_3781) < t_6463) && (z_1653 < t_584) && (z_2977 < t_1204) && (z_3493 < t_6463) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ((z_1927 + z_2403 + z_4031 + z_4047) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_2977 > 0) && (z_3445 > 0) && (z_3493 > 0) && (z_3781 > 0) && (z_749 > 0));
																														:pid_23:timeEmit = (z_1927 + z_2403 + z_4031 + z_4047);
																														:pid_24:i = 2;
																														:pid_24:t = t_2835;
																														:pid_24:cl = 0;
																														:pid_30:cl = (z_3493 + z_3781 + z_4165);
																														:pid_35:cl = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749);
																													}
																													BUFFER{
																														:pid_23:bufferNode:<FIFO>#0{ }
																													}
																													EC:<Id:8627;Ev:1076;H:29;W:7581>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
										EXE: { |;| (:pid_57 , run) (:pid_58 , run) 
	(:pid_62 , run) (:pid_62 , cp_resetTau) }
																					
										TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4179 }) (:pid_62 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2849 }) 
	}
																														/*FLAGS{ COVERAGE-ELEMENT }*/
																														INFO{
																															<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#22->Node.ControlProcess->cp2.cp_resetTau" as trace="tpid#22->Node.ControlProcess->cp2.cp_resetTau">
																														}
																					
										NC: ((t_2849 < 8) && (0 <= (t_2849 + -4)))
																														PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_383 < 4) && 
	(t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && (t_6219 < 8) && (t_6463 < 4) && 
	(t_6725 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + 
	-2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && 
	(0 <= (t_2738 + -2)) && (0 <= (t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= 
	(t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6022 + -2))
	 && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= (t_6725 + -2)))
																														DATA{
																															:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179);
																															:pid_57:z = z_4179;
																															:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179);
																															:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)));
																															:pid_57:localPtC = (((z_4047 + z_4179) == 4) && (z_4047 == t_2738) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0));
																															:pid_58:e = 1;
																															:pid_58:tau = 8;
																															:pid_58:t = t_2849;
																															:pid_58:cl = 0;
																															:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179);
																															:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179);
																														}
																														EC:<Id:8918;Ev:1079;H:30;W:7842>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
											EXE: { |;| (:pid_57 , run) (:pid_58 , 
	run) (:pid_61 , run) (:pid_61 , cp_sendCM) }
																					
											TRACE: { |;| (:pid_57 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4299 }) (:pid_61 , ${ output 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1927 
	param::Trickle.Node.z_2403 param::Trickle.Node.z_4031 param::Trickle.Node.z_4047 
	param::Trickle.Node.z_4179 param::Trickle.Node.z_4299 } } @ (z_1927 + z_2403 + 
	z_4031 + z_4047 + z_4179 + z_4299)) }
																															/*FLAGS{ COVERAGE-ELEMENT }*/
																															INFO{
																																<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#23->inst::Trickle.n4->ControlMsg" as trace="tpid#23->inst::Trickle.n4->ControlMsg">
																															}
																															DATA{
																																:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299);
																																:pid_57:z = z_4299;
																																:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299);
																																:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)));
																																:pid_57:localPtC = (((z_4047 + z_4179) == 4) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0));
																																:pid_58:cl = z_4299;
																																:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299);
																																:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299);
																															}
																															BUFFER{
																																:pid_23:bufferNode:<FIFO>#0{
																																	:pid_57:ControlMsg([ 0 , 0 ] , (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299));
																																}
																															}
																															EC:<Id:8946;Ev:1107;H:31;W:7867>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_62:cp2 , pid_65:dp0 , pid_70:dp0 ) )
																					
												EXE: { |;| (:pid_23 , run) (:pid_24 
	, run) (:pid_27 , run) (:pid_27 , cp1_receiveCM_inconsistent) }
																					
												TRACE: { |;| (:pid_23 , ${ newfresh 
	inst::Trickle.Node.z param::Trickle.Node.z_4309 }) (:pid_27 , ${ input 
	inst::Trickle.Node.ControlMsg [ 0 , 0 ] ${ + param::Trickle.Node.z_1927 
	param::Trickle.Node.z_2403 param::Trickle.Node.z_4031 param::Trickle.Node.z_4047 
	param::Trickle.Node.z_4179 param::Trickle.Node.z_4299 } } @ (z_1653 + z_2977 + 
	z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_749)) (:pid_27 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_2970 }) 
	}
																																/*FLAGS{ COVERAGE-ELEMENT }*/
																																INFO{
																																	<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#24->inst::Trickle.n2->ControlMsg" as trace="tpid#24->inst::Trickle.n2->ControlMsg">
																																}
																					
												NC: ((t_2970 < 4) && (0 <= (t_2970 + 
	-2)))
																																PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && (t_6219 < 8) && 
	(t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_1204 + -2)) && 
	(0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2258 + -2)) && (0 <= 
	(t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2835 + -2)) && (0 <= (t_2849 
	+ -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && 
	(0 <= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= 
	(t_6463 + -2)) && (0 <= (t_6725 + -2)))
																																DATA{
																																	:pid_23:$time = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_749);
																																	:pid_23:z = z_4309;
																																	:pid_23:localTime = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_749);
																																	:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_2835 < 4) && (t_2970 < 4) && (t_584 < 4) && (t_6463 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2835 + -2)) && (0 <= (t_2970 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6463 + -2)));
																																	:pid_23:localPtC = (((z_3445 + z_3493 + z_3781 + z_4165) < t_2186) && ((z_3493 + z_3781) < t_6463) && (z_1653 < t_584) && (z_2977 < t_1204) && (z_3493 < t_6463) && (z_4309 < t_2835) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ((z_1927 + z_2403 + z_4031 + z_4047) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749)) && ((z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_2977 > 0) && (z_3445 > 0) && (z_3493 > 0) && (z_3781 > 0) && (z_4165 > 0) && (z_749 > 0));
																																	:pid_23:timeEmit = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299);
																																	:pid_24:i = 2;
																																	:pid_24:t = t_2970;
																																	:pid_30:cl = (z_3493 + z_3781 + z_4165 + z_4309);
																																	:pid_35:cl = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_749);
																																}
																																BUFFER{
																																	:pid_23:bufferNode:<FIFO>#0{ }
																																}
																																EC:<Id:9248;Ev:1115;H:32;W:8141>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
													EXE: { |;| (:pid_57 , run) 
	(:pid_58 , run) (:pid_62 , run) (:pid_62 , cp_resetTau) }
																					
													TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4423 }) (:pid_62 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3098 }) }
																																	/*FLAGS{ COVERAGE-ELEMENT }*/
																																	INFO{
																																		<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#25->Node.ControlProcess->cp2.cp_resetTau" as trace="tpid#25->Node.ControlProcess->cp2.cp_resetTau">
																																	}
																					
													NC: ((t_3098 < 8) && (0 <= 
	(t_3098 + -4)))
																																	PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && 
	(t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + -2)) && (0 <= 
	(t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2258 
	+ -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2835 + -2)) 
	&& (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 + -4)) && (0 <= 
	(t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6022 + -2))
	 && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= (t_6725 + -2)))
																																	DATA{
																																		:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423);
																																		:pid_57:z = z_4423;
																																		:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423);
																																		:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																		:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0));
																																		:pid_58:e = 2;
																																		:pid_58:tau = 8;
																																		:pid_58:t = t_3098;
																																		:pid_58:cl = 0;
																																		:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423);
																																		:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423);
																																	}
																																	EC:<Id:9323;Ev:1136;H:33;W:8141>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_20:dp1 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_18 , run) (:pid_19 , run) (:pid_19 , dp_init) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4452 }) (:pid_19 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7943 
	}) }
																					
														NC: ((t_7943 < 4) && (0 <= 
	(t_7943 + -2)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && 
	(t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (t_7943 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= 
	(t_6725 + -2)) && (0 <= (t_7943 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:z = z_4452;
																																			:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (t_6022 < 4) && (t_6219 < 8) && (t_7943 < 4) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= (t_7943 + -2)));
																																			:pid_6:localPtC = (((z_3204 + z_3300) == 4) && (z_204 == t_104) && (z_2524 == t_383) && (z_3204 == t_6022) && (z_3348 == t_6219) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ((z_3204 + z_3300) > t_6022) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_3184 > 0) && (z_3204 > 0) && (z_3300 > 0) && (z_3348 > 0) && (z_464 > 0));
																																			:pid_7:cl = (z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452);
																																			:pid_13:cl = (z_3348 + z_4452);
																																			:pid_18:k = 2;
																																			:pid_18:c = 0;
																																			:pid_18:e = 0;
																																			:pid_18:tau = 4;
																																			:pid_18:tau_l = 4;
																																			:pid_18:tau_h = 8;
																																			:pid_18:t = t_7943;
																																			:pid_18:cl = 0;
																																		}
																																		EC:<Id:9534;Ev:0;H:34;W:8398>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_20:dp1 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4539 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4539)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4539);
																																				:pid_57:z = z_4539;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4539);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4539;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4539);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4539);
																																			}
																																		}
																																	}
																																	EC:<Id:9324;Ev:1137;H:33;W:8209>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_13 , run) (:pid_16 , run) (:pid_16 , dp_resetTau) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4452 }) (:pid_16 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7942 
	}) }
																					
														NC: ((t_7942 < 8) && (0 <= 
	(t_7942 + -4)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && 
	(t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (t_7942 < 8) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= 
	(t_6725 + -2)) && (0 <= (t_7942 + -4)))
																																		DATA{
																																			:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:z = z_4452;
																																			:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:localPC = ((t_104 < 4) && (t_383 < 4) && (t_6022 < 4) && (t_6219 < 8) && (t_7942 < 8) && (0 <= (t_104 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= (t_7942 + -4)));
																																			:pid_6:localPtC = (((z_3204 + z_3300) == 4) && ((z_3348 + z_4452) == 8) && (z_204 == t_104) && (z_2524 == t_383) && (z_3204 == t_6022) && (z_3348 == t_6219) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ((z_3204 + z_3300) > t_6022) && ((z_3348 + z_4452) > t_6219) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_3184 > 0) && (z_3204 > 0) && (z_3300 > 0) && (z_3348 > 0) && (z_464 > 0));
																																			:pid_7:cl = (z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452);
																																			:pid_13:e = 2;
																																			:pid_13:tau = 8;
																																			:pid_13:t = t_7942;
																																			:pid_13:cl = 0;
																																			:pid_18:cl = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																		}
																																		EC:<Id:9544;Ev:0;H:34;W:8407>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_15:dp1 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4543 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4543)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4543);
																																				:pid_57:z = z_4543;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4543);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4543;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4543);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4543);
																																			}
																																		}
																																	}
																																	EC:<Id:9325;Ev:1138;H:33;W:8210>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_11 , run) (:pid_11 , cp2_receiveCM_inconsistent) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4452 }) (:pid_11 , ${ input 
	inst::Trickle.Node.ControlMsg [ 1 , 0 ] ${ + param::Trickle.Node.z_2 
	param::Trickle.Node.z_22 param::Trickle.Node.z_3086 param::Trickle.Node.z_3602 
	param::Trickle.Node.z_3638 param::Trickle.Node.z_3762 param::Trickle.Node.z_3898 
	param::Trickle.Node.z_3938 } } @ (z_132 + z_204 + z_2524 + z_3184 + z_3204 + 
	z_3300 + z_3348 + z_4452 + z_464)) (:pid_11 , ${ newfresh 
	inst::Trickle.Node.ControlProcess.t param::Trickle.Node.ControlProcess.t_3130 }) 
	}
																					
														NC: ((t_3130 < 4) && (0 <= 
	(t_3130 + -2)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_3130 < 4) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && 
	(t_6022 < 4) && (t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_3130 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && 
	(0 <= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= 
	(t_6463 + -2)) && (0 <= (t_6725 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:z = z_4452;
																																			:pid_6:seq_buff[0] = 1;
																																			:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:localPC = ((t_104 < 4) && (t_3130 < 4) && (t_383 < 4) && (t_6022 < 4) && (t_6219 < 8) && (0 <= (t_104 + -2)) && (0 <= (t_3130 + -2)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)));
																																			:pid_6:localPtC = (((z_3204 + z_3300) == 4) && (z_204 == t_104) && (z_2524 == t_383) && (z_3204 == t_6022) && (z_3348 == t_6219) && ((z_204 + z_464) < 4) && ((z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464)) && ((z_3204 + z_3300) > t_6022) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_3184 > 0) && (z_3204 > 0) && (z_3300 > 0) && (z_3348 > 0) && (z_464 > 0));
																																			:pid_6:timeEmit = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938);
																																			:pid_7:i = 2;
																																			:pid_7:t = t_3130;
																																			:pid_7:cl = 0;
																																			:pid_13:cl = (z_3348 + z_4452);
																																			:pid_18:cl = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																		}
																																		BUFFER{
																																			:pid_6:bufferNode:<FIFO>#0{ }
																																		}
																																		EC:<Id:9553;Ev:0;H:34;W:8415>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4547 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4547)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4547);
																																				:pid_57:z = z_4547;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4547);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4547;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4547);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4547);
																																			}
																																		}
																																	}
																																	EC:<Id:9326;Ev:1139;H:33;W:8211>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_6 , run) 
	(:pid_7 , run) (:pid_11 , run) (:pid_11 , cp_resetTau) }
																					
														TRACE: { |;| (:pid_6 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4452 }) (:pid_11 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3129 }) }
																					
														NC: ((t_3129 < 8) && (0 <= 
	(t_3129 + -4)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_3129 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && 
	(t_6022 < 4) && (t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_3129 + -4)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && 
	(0 <= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= 
	(t_6463 + -2)) && (0 <= (t_6725 + -2)))
																																		DATA{
																																			:pid_6:$time = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:z = z_4452;
																																			:pid_6:localTime = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																			:pid_6:localPC = ((t_104 < 4) && (t_3129 < 8) && (t_383 < 4) && (t_6022 < 4) && (t_6219 < 8) && (0 <= (t_104 + -2)) && (0 <= (t_3129 + -4)) && (0 <= (t_383 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)));
																																			:pid_6:localPtC = (((z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452) == 4) && ((z_3204 + z_3300) == 4) && (z_204 == t_104) && (z_2524 == t_383) && (z_3204 == t_6022) && (z_3348 == t_6219) && ((z_204 + z_464) < 4) && ((z_2 + z_22) <= (z_132 + z_204 + z_464)) && ((z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452) > t_383) && ((z_3204 + z_3300) > t_6022) && ($delta#initial > 0) && (z_132 > 0) && (z_204 > 0) && (z_2524 > 0) && (z_3184 > 0) && (z_3204 > 0) && (z_3300 > 0) && (z_3348 > 0) && (z_464 > 0));
																																			:pid_7:e = 1;
																																			:pid_7:tau = 8;
																																			:pid_7:t = t_3129;
																																			:pid_7:cl = 0;
																																			:pid_13:cl = (z_3348 + z_4452);
																																			:pid_18:cl = (z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_4452 + z_464);
																																		}
																																		EC:<Id:9563;Ev:0;H:34;W:8424>{ SC: ( pid_4:o0 , ( pid_10:cp1 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4551 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4551)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4551);
																																				:pid_57:z = z_4551;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4551);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4551;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4551);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4551);
																																			}
																																		}
																																	}
																																	EC:<Id:9327;Ev:1140;H:33;W:8212>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_37:dp1 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_23 , run) 
	(:pid_35 , run) (:pid_36 , run) (:pid_36 , dp_init) }
																					
														TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4453 }) (:pid_36 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7944 
	}) }
																					
														NC: ((t_7944 < 4) && (0 <= 
	(t_7944 + -2)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && 
	(t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (t_7944 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= 
	(t_6725 + -2)) && (0 <= (t_7944 + -2)))
																																		DATA{
																																			:pid_23:$time = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_4453 + z_749);
																																			:pid_23:z = z_4453;
																																			:pid_23:localTime = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_4453 + z_749);
																																			:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_2835 < 4) && (t_2970 < 4) && (t_584 < 4) && (t_6463 < 4) && (t_7944 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2835 + -2)) && (0 <= (t_2970 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6463 + -2)) && (0 <= (t_7944 + -2)));
																																			:pid_23:localPtC = (((z_3445 + z_3493 + z_3781 + z_4165) < t_2186) && ((z_3493 + z_3781) < t_6463) && (z_1653 < t_584) && (z_2977 < t_1204) && (z_3493 < t_6463) && (z_4309 < t_2835) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ((z_1927 + z_2403 + z_4031 + z_4047) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749)) && ((z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_2977 > 0) && (z_3445 > 0) && (z_3493 > 0) && (z_3781 > 0) && (z_4165 > 0) && (z_4309 > 0) && (z_749 > 0));
																																			:pid_24:cl = z_4453;
																																			:pid_30:cl = (z_3493 + z_3781 + z_4165 + z_4309 + z_4453);
																																			:pid_35:k = 2;
																																			:pid_35:c = 0;
																																			:pid_35:e = 0;
																																			:pid_35:tau = 4;
																																			:pid_35:tau_l = 4;
																																			:pid_35:tau_h = 8;
																																			:pid_35:t = t_7944;
																																			:pid_35:cl = 0;
																																		}
																																		EC:<Id:9572;Ev:0;H:34;W:8432>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_37:dp1 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4555 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4555)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4555);
																																				:pid_57:z = z_4555;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4555);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4555;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4555);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4555);
																																			}
																																		}
																																	}
																																	EC:<Id:9328;Ev:1141;H:33;W:8213>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_28:cp2 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_23 , run) 
	(:pid_24 , run) (:pid_27 , run) (:pid_27 , cp_sendCM) }
																					
														TRACE: { |;| (:pid_23 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4453 }) (:pid_27 , ${ output 
	inst::Trickle.Node.ControlMsg [ 1 , 0 ] ${ + param::Trickle.Node.z_1653 
	param::Trickle.Node.z_2977 param::Trickle.Node.z_3445 param::Trickle.Node.z_3493 
	param::Trickle.Node.z_3781 param::Trickle.Node.z_4165 param::Trickle.Node.z_4309 
	param::Trickle.Node.z_4453 param::Trickle.Node.z_749 } } @ (z_1653 + z_2977 + 
	z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_4453 + z_749)) }
																																		DATA{
																																			:pid_23:$time = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_4453 + z_749);
																																			:pid_23:z = z_4453;
																																			:pid_23:localTime = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_4453 + z_749);
																																			:pid_23:localPC = ((t_1204 < 4) && (t_2186 < 4) && (t_2835 < 4) && (t_2970 < 4) && (t_584 < 4) && (t_6463 < 4) && (0 <= (t_1204 + -2)) && (0 <= (t_2186 + -2)) && (0 <= (t_2835 + -2)) && (0 <= (t_2970 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6463 + -2)));
																																			:pid_23:localPtC = ((z_4453 == t_2970) && ((z_3445 + z_3493 + z_3781 + z_4165) < t_2186) && ((z_3493 + z_3781) < t_6463) && (z_1653 < t_584) && (z_2977 < t_1204) && (z_3493 < t_6463) && (z_4309 < t_2835) && ((z_132 + z_204) <= (z_1653 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_749)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_749)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_1653 + z_2977 + z_749)) && ((z_1927 + z_2403 + z_4031 + z_4047) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_749)) && ((z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299) <= (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_749)) && ($delta#initial > 0) && (z_1653 > 0) && (z_2977 > 0) && (z_3445 > 0) && (z_3493 > 0) && (z_3781 > 0) && (z_4165 > 0) && (z_4309 > 0) && (z_749 > 0));
																																			:pid_24:cl = z_4453;
																																			:pid_30:cl = (z_3493 + z_3781 + z_4165 + z_4309 + z_4453);
																																			:pid_35:cl = (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_4453 + z_749);
																																		}
																																		BUFFER{
																																			:pid_40:bufferNode:<FIFO>#0{
																																				:pid_23:ControlMsg([ 1 , 0 ] , (z_1653 + z_2977 + z_3445 + z_3493 + z_3781 + z_4165 + z_4309 + z_4453 + z_749));
																																			}
																																		}
																																		EC:<Id:9583;Ev:0;H:34;W:8442>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_28:cp2 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4559 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4559)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4559);
																																				:pid_57:z = z_4559;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4559);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4559;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4559);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4559);
																																			}
																																		}
																																	}
																																	EC:<Id:9329;Ev:1142;H:33;W:8214>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_54:dp1 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_40 , run) 
	(:pid_52 , run) (:pid_53 , run) (:pid_53 , dp_init) }
																					
														TRACE: { |;| (:pid_40 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4454 }) (:pid_53 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7945 
	}) }
																					
														NC: ((t_7945 < 4) && (0 <= 
	(t_7945 + -2)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && 
	(t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (t_7945 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= 
	(t_6725 + -2)) && (0 <= (t_7945 + -2)))
																																		DATA{
																																			:pid_40:$time = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938 + z_4454);
																																			:pid_40:z = z_4454;
																																			:pid_40:localTime = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938 + z_4454);
																																			:pid_40:localPC = ((t_2258 < 4) && (t_2576 < 4) && (t_6 < 4) && (t_6725 < 4) && (t_7945 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_6 + -2)) && (0 <= (t_6725 + -2)) && (0 <= (t_7945 + -2)));
																																			:pid_40:localPtC = (((z_3762 + z_3898 + z_3938) == t_2576) && (z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_3602 + z_3638) < t_2258) && ((z_3638 + z_3762) < t_6725) && ((z_3638 + z_3762 + z_3898) < t_6725) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638)) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0) && (z_3086 > 0) && (z_3602 > 0) && (z_3638 > 0) && (z_3762 > 0) && (z_3898 > 0) && (z_3938 > 0));
																																			:pid_41:cl = (z_3762 + z_3898 + z_3938 + z_4454);
																																			:pid_47:cl = (z_3638 + z_3762 + z_3898 + z_3938 + z_4454);
																																			:pid_52:k = 2;
																																			:pid_52:c = 0;
																																			:pid_52:e = 0;
																																			:pid_52:tau = 4;
																																			:pid_52:tau_l = 4;
																																			:pid_52:tau_h = 8;
																																			:pid_52:t = t_7945;
																																			:pid_52:cl = 0;
																																		}
																																		EC:<Id:9592;Ev:0;H:34;W:8450>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_54:dp1 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4563 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4563)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4563);
																																				:pid_57:z = z_4563;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4563);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4563;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4563);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4563);
																																			}
																																		}
																																	}
																																	EC:<Id:9330;Ev:1143;H:33;W:8215>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_40 , run) 
	(:pid_41 , run) (:pid_45 , run) (:pid_45 , cp_resetTau) }
																					
														TRACE: { |;| (:pid_40 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4454 }) (:pid_45 , ${ 
	newfresh inst::Trickle.Node.ControlProcess.t 
	param::Trickle.Node.ControlProcess.t_3131 }) }
																					
														NC: ((t_3131 < 8) && (0 <= 
	(t_3131 + -4)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_3131 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && 
	(t_6022 < 4) && (t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_3131 + -4)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && 
	(0 <= (t_6 + -2)) && (0 <= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= 
	(t_6463 + -2)) && (0 <= (t_6725 + -2)))
																																		DATA{
																																			:pid_40:$time = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938 + z_4454);
																																			:pid_40:z = z_4454;
																																			:pid_40:localTime = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938 + z_4454);
																																			:pid_40:localPC = ((t_2258 < 4) && (t_2576 < 4) && (t_3131 < 8) && (t_6 < 4) && (t_6725 < 4) && (0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_3131 + -4)) && (0 <= (t_6 + -2)) && (0 <= (t_6725 + -2)));
																																			:pid_40:localPtC = (((z_3762 + z_3898 + z_3938) == t_2576) && ((z_3762 + z_3898 + z_3938 + z_4454) == 4) && (z_22 == t_6) && ((z_22 + z_3086) < 4) && ((z_3602 + z_3638) < t_2258) && ((z_3638 + z_3762) < t_6725) && ((z_3638 + z_3762 + z_3898) < t_6725) && ((z_132 + z_204) <= (z_2 + z_22 + z_3086)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_3300 + z_3348 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898)) && ((z_132 + z_204 + z_2524 + z_3184 + z_3204 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762)) && ((z_132 + z_204 + z_2524 + z_464) <= (z_2 + z_22 + z_3086 + z_3602 + z_3638)) && ((z_3762 + z_3898 + z_3938 + z_4454) > t_2576) && ($delta#initial > 0) && (z_2 > 0) && (z_22 > 0) && (z_3086 > 0) && (z_3602 > 0) && (z_3638 > 0) && (z_3762 > 0) && (z_3898 > 0) && (z_3938 > 0));
																																			:pid_41:e = 1;
																																			:pid_41:tau = 8;
																																			:pid_41:t = t_3131;
																																			:pid_41:cl = 0;
																																			:pid_47:cl = (z_3638 + z_3762 + z_3898 + z_3938 + z_4454);
																																			:pid_52:cl = (z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938 + z_4454);
																																		}
																																		EC:<Id:9602;Ev:0;H:34;W:8459>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_44:cp1 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4567 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4567)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4567);
																																				:pid_57:z = z_4567;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4567);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = z_4567;
																																				:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4567);
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4567);
																																			}
																																		}
																																	}
																																	EC:<Id:9331;Ev:1144;H:33;W:8216>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_61:cp1 , pid_66:dp1 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_57 , run) 
	(:pid_64 , run) (:pid_65 , run) (:pid_65 , dp_init) }
																					
														TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4455 }) (:pid_65 , ${ 
	newfresh inst::Trickle.Node.DataProcess.t param::Trickle.Node.DataProcess.t_7946 
	}) }
																					
														NC: ((t_7946 < 4) && (0 <= 
	(t_7946 + -2)))
																																		PC: ((t_104 < 4) && (t_1204 < 4) && (t_1380 < 4) && (t_2186 < 4) && (t_2258 < 4) && 
	(t_2576 < 4) && (t_2738 < 4) && (t_2835 < 4) && (t_2849 < 8) && (t_2970 < 4) && 
	(t_3098 < 8) && (t_383 < 4) && (t_584 < 4) && (t_6 < 4) && (t_6022 < 4) && 
	(t_6219 < 8) && (t_6463 < 4) && (t_6725 < 4) && (t_7946 < 4) && (0 <= (t_104 + 
	-2)) && (0 <= (t_1204 + -2)) && (0 <= (t_1380 + -2)) && (0 <= (t_2186 + -2)) && 
	(0 <= (t_2258 + -2)) && (0 <= (t_2576 + -2)) && (0 <= (t_2738 + -2)) && (0 <= 
	(t_2835 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_2970 + -2)) && (0 <= (t_3098 
	+ -4)) && (0 <= (t_383 + -2)) && (0 <= (t_584 + -2)) && (0 <= (t_6 + -2)) && (0 
	<= (t_6022 + -2)) && (0 <= (t_6219 + -4)) && (0 <= (t_6463 + -2)) && (0 <= 
	(t_6725 + -2)) && (0 <= (t_7946 + -2)))
																																		DATA{
																																			:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455);
																																			:pid_57:z = z_4455;
																																			:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455);
																																			:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (t_7946 < 4) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)) && (0 <= (t_7946 + -2)));
																																			:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																			:pid_58:cl = z_4455;
																																			:pid_64:k = 2;
																																			:pid_64:c = 0;
																																			:pid_64:e = 0;
																																			:pid_64:tau = 4;
																																			:pid_64:tau_l = 4;
																																			:pid_64:tau_h = 8;
																																			:pid_64:t = t_7946;
																																			:pid_64:cl = 0;
																																			:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455);
																																		}
																																		EC:<Id:9611;Ev:0;H:34;W:8467>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_66:dp1 , pid_70:dp0 ) )
																					
															EXE: { |;| (:pid_57 , 
	run) (:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
															TRACE: { |;| (:pid_57 , 
	${ newfresh inst::Trickle.Node.z param::Trickle.Node.z_4571 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4455 + z_4571)) }
																																			/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																			INFO{
																																				<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																			}
																																			DATA{
																																				:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455 + z_4571);
																																				:pid_57:z = z_4571;
																																				:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455 + z_4571);
																																				:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (t_7946 < 4) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)) && (0 <= (t_7946 + -2)));
																																				:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0) && (z_4455 > 0));
																																				:pid_58:e = 2;
																																				:pid_58:cl = (z_4455 + z_4571);
																																				:pid_64:cl = z_4571;
																																				:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455 + z_4571);
																																			}
																																		}
																																	}
																																	EC:<Id:9332;Ev:1145;H:33;W:8217>{ SC: ( pid_4:o0 , ( pid_11:cp2 , pid_16:dp2 , pid_19:dp0 ) , ( pid_27:cp1 , pid_32:dp1 , pid_36:dp0 ) , ( pid_45:cp2 , pid_49:dp1 , pid_53:dp0 ) , ( pid_63:cp3 , pid_65:dp0 , pid_70:dp0 ) )
																					
														EXE: { |;| (:pid_57 , run) 
	(:pid_58 , run) (:pid_61 , run) (:pid_61 , cp_CTRL_EXPIR) }
																					
														TRACE: { |;| (:pid_57 , ${ 
	newfresh inst::Trickle.Node.z param::Trickle.Node.z_4455 }) (:pid_61 , ${ 
	output#env inst::Trickle.Node.Log 1 } @ (z_1927 + z_2403 + z_4031 + z_4047 + 
	z_4179 + z_4299 + z_4423 + z_4455)) }
																																		/*FLAGS{ COVERAGE-ELEMENT & OBJECTIVE-ACHIEVED & OBJECTIVE-FAILED }*/
																																		INFO{
																																			<ID:"sew:/workflow.behavior#selection.behavior_coverage",kind="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR" as trace="tpid#26->Node.ControlProcess->cp1.cp_CTRL_EXPIR">
																																		}
																																		DATA{
																																			:pid_57:$time = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455);
																																			:pid_57:z = z_4455;
																																			:pid_57:localTime = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455);
																																			:pid_57:localPC = ((t_1380 < 4) && (t_2738 < 4) && (t_2849 < 8) && (t_3098 < 8) && (0 <= (t_1380 + -2)) && (0 <= (t_2738 + -2)) && (0 <= (t_2849 + -4)) && (0 <= (t_3098 + -4)));
																																			:pid_57:localPtC = (((z_4047 + z_4179) == 4) && ((z_4299 + z_4423) == 8) && (z_4047 == t_2738) && (z_4299 == t_2849) && ((z_2403 + z_4031) < t_1380) && (z_2403 < t_1380) && ((z_2 + z_22) <= (z_1927 + z_2403)) && ((z_2 + z_22 + z_3086 + z_3602 + z_3638 + z_3762 + z_3898 + z_3938) <= (z_1927 + z_2403 + z_4031)) && ((z_4047 + z_4179) > t_2738) && ((z_4299 + z_4423) > t_2849) && ($delta#initial > 0) && (z_1927 > 0) && (z_2403 > 0) && (z_4031 > 0) && (z_4047 > 0) && (z_4179 > 0) && (z_4299 > 0) && (z_4423 > 0));
																																			:pid_58:e = 2;
																																			:pid_58:cl = z_4455;
																																			:pid_64:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455);
																																			:pid_69:cl = (z_1927 + z_2403 + z_4031 + z_4047 + z_4179 + z_4299 + z_4423 + z_4455);
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
