digraph "Trickle" {
compound = true;
fontsize = 12
 subgraph "cluster_spec::Trickle" {
  label = "SYSTEM spec::Trickle"

  subgraph "cluster_spec::Trickle.Node" {
   label = "Node"
   style=bold;

   "spec::Trickle.Node"
   [
    label = "Node"
    shape=point, style=invisible, color=white
   ];

   "spec::Trickle.Node#parameters"
   [
    label = "|{Parameters: Input|DATA_MESSAGE[ 2 ] my_buff\l
FRAGMENT[ 2 ] firmware\l
integer[ 2 ] myseq_buff\l
boolean[ 2 ] mydp_run\l
}|"
    shape=Mrecord, style=bold, color=blue
   ];

   subgraph "cluster_spec::Trickle.Node.ControlProcess" {
    label = "ControlProcess"
    style=dashed;

    "spec::Trickle.Node.ControlProcess"
    [
     label = "ControlProcess"
     shape=point, style=invisible, color=white
    ];

    "spec::Trickle.Node.ControlProcess.cp0"
    [
     label = "cp0"
     shape=oval, style="filled", fillcolor=green
    ];

    "spec::Trickle.Node.ControlProcess.cp0" -> "spec::Trickle.Node.ControlProcess.cp0_init" [ label = "cp_init" ];

    "spec::Trickle.Node.ControlProcess.cp0_init"
    [
     label = "cp0_init"
     shape=ellipse, style="bold,filled", color=skyblue
    ];

    "spec::Trickle.Node.ControlProcess.cp0_init" -> "spec::Trickle.Node.ControlProcess.cp1" [ label = "cp_init" ];

    "spec::Trickle.Node.ControlProcess.cp1"
    [
     label = "cp1"
     shape=ellipse, style="bold,filled", color=skyblue
    ];

    "spec::Trickle.Node.ControlProcess.cp1" -> "spec::Trickle.Node.ControlProcess.cp2" [ label = "cp_sendCM" ];

    "spec::Trickle.Node.ControlProcess.cp1" -> "spec::Trickle.Node.ControlProcess.cp1" [ label = "cp1_receiveCM_consistent" ];

    "spec::Trickle.Node.ControlProcess.cp1" -> "spec::Trickle.Node.ControlProcess.cp1" [ label = "cp1_receiveCM_inconsistent" ];

    "spec::Trickle.Node.ControlProcess.cp1" -> "spec::Trickle.Node.ControlProcess.cp3" [ label = "cp_CTRL_EXPIR" ];

    "spec::Trickle.Node.ControlProcess.cp1" -> "spec::Trickle.Node.ControlProcess.cp2" [ label = "cp1_reach_k" ];

    "spec::Trickle.Node.ControlProcess.cp2"
    [
     label = "cp2"
     shape=ellipse, style="bold,filled", color=skyblue
    ];

    "spec::Trickle.Node.ControlProcess.cp2" -> "spec::Trickle.Node.ControlProcess.cp1" [ label = "cp_resetTau" ];

    "spec::Trickle.Node.ControlProcess.cp2" -> "spec::Trickle.Node.ControlProcess.cp2" [ label = "cp2_receiveCM_consistent" ];

    "spec::Trickle.Node.ControlProcess.cp2" -> "spec::Trickle.Node.ControlProcess.cp1" [ label = "cp2_receiveCM_inconsistent" ];

    "spec::Trickle.Node.ControlProcess.cp3"
    [
     label = "cp3"
     shape=octagon, style="bold,filled", fillcolor=red
    ];
   }

   subgraph "cluster_spec::Trickle.Node.DataProcess" {
    label = "DataProcess"
    style=dashed;

    "spec::Trickle.Node.DataProcess"
    [
     label = "DataProcess"
     shape=point, style=invisible, color=white
    ];

    "spec::Trickle.Node.DataProcess#parameters"
    [
     label = "|{Parameters: Input|integer mySeq\l
}|"
     shape=Mrecord, style=bold, color=blue
    ];

    "spec::Trickle.Node.DataProcess.dp0"
    [
     label = "dp0"
     shape=ellipse, style="bold,filled", fillcolor=green
    ];

    "spec::Trickle.Node.DataProcess.dp0" -> "spec::Trickle.Node.DataProcess.dp1" [ label = "dp_init" ];

    "spec::Trickle.Node.DataProcess.dp1"
    [
     label = "dp1"
     shape=ellipse, style="bold,filled", color=skyblue
    ];

    "spec::Trickle.Node.DataProcess.dp1" -> "spec::Trickle.Node.DataProcess.dp2" [ label = "dp_sendDM" ];

    "spec::Trickle.Node.DataProcess.dp1" -> "spec::Trickle.Node.DataProcess.dp1" [ label = "dp1_receiveDM_consistent" ];

    "spec::Trickle.Node.DataProcess.dp1" -> "spec::Trickle.Node.DataProcess.dp1" [ label = "dp1_receiveDM_inconsistent" ];

    "spec::Trickle.Node.DataProcess.dp1" -> "spec::Trickle.Node.DataProcess.dp3" [ label = "dp_DATA_EXPIR" ];

    "spec::Trickle.Node.DataProcess.dp1" -> "spec::Trickle.Node.DataProcess.dp2" [ label = "dp1_reach_k" ];

    "spec::Trickle.Node.DataProcess.dp2"
    [
     label = "dp2"
     shape=ellipse, style="bold,filled", color=skyblue
    ];

    "spec::Trickle.Node.DataProcess.dp2" -> "spec::Trickle.Node.DataProcess.dp1" [ label = "dp_resetTau" ];

    "spec::Trickle.Node.DataProcess.dp2" -> "spec::Trickle.Node.DataProcess.dp2" [ label = "dp2_receiveDM_consistent" ];

    "spec::Trickle.Node.DataProcess.dp2" -> "spec::Trickle.Node.DataProcess.dp1" [ label = "dp2_receiveDM_inconsistent" ];

    "spec::Trickle.Node.DataProcess.dp3"
    [
     label = "dp3"
     shape=octagon, style="bold,filled", fillcolor=red
    ];
   }

   "spec::Trickle.Node.DataProcess1"
   [
    label = "|{model: DataProcess|DataProcess1}|"
    shape=Mrecord, style=bold, color=orange
   ];

   "spec::Trickle.Node.DataProcess2"
   [
    label = "|{model: DataProcess|DataProcess2}|"
    shape=Mrecord, style=bold, color=orange
   ];
  }

  "spec::Trickle.n1"
  [
   label = "|{model: Node|n1}|"
   shape=Mrecord, style=bold, color=orange
  ];

  "spec::Trickle.n2"
  [
   label = "|{model: Node|n2}|"
   shape=Mrecord, style=bold, color=orange
  ];

  "spec::Trickle.n3"
  [
   label = "|{model: Node|n3}|"
   shape=Mrecord, style=bold, color=orange
  ];

  "spec::Trickle.n4"
  [
   label = "|{model: Node|n4}|"
   shape=Mrecord, style=bold, color=orange
  ];
 }
}

